/*
 Navicat Premium Data Transfer

 Source Server         : 本地链接
 Source Server Type    : MySQL
 Source Server Version : 50726
 Source Host           : localhost:3306
 Source Schema         : ape_blog

 Target Server Type    : MySQL
 Target Server Version : 50726
 File Encoding         : 65001

 Date: 01/06/2022 10:23:26
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for ape_admin
-- ----------------------------
DROP TABLE IF EXISTS `ape_admin`;
CREATE TABLE `ape_admin`  (
  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `uid` int(10) NOT NULL DEFAULT 0 COMMENT '前台用户ID',
  `username` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '用户名',
  `nickname` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '昵称',
  `password` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '密码',
  `realname` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '真实姓名',
  `avatar` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '头像',
  `role_id` int(4) NOT NULL DEFAULT 0 COMMENT '角色id',
  `tel` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '电话',
  `email` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '邮箱',
  `remark` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '简介',
  `status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '状态1:正常0冻结',
  `ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '注册ip',
  `create_user` int(32) NOT NULL DEFAULT 0 COMMENT '添加人',
  `update_user` int(32) NOT NULL DEFAULT 0 COMMENT '修改时间',
  `create_time` int(10) NOT NULL DEFAULT 0 COMMENT '添加时间',
  `update_time` int(10) NOT NULL DEFAULT 0 COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `username_email_tel`(`username`, `tel`, `email`) USING BTREE COMMENT '用户名'
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '后台人员列表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_admin
-- ----------------------------
INSERT INTO `ape_admin` VALUES (1, 1, 'admin', '超级管理员', '4760f3fbfe9e42ace8bea27edfb85d65', '超级管理员', '/upload/image/20220228/ca46bd04e1d32911de549862f6db1b8e.png', 1, '13500000000', '123@qq.com', '这家伙很懒，什么也没留下', 1, '', 1, 1, 1642090317, 1646028509);

-- ----------------------------
-- Table structure for ape_admin_auth
-- ----------------------------
DROP TABLE IF EXISTS `ape_admin_auth`;
CREATE TABLE `ape_admin_auth`  (
  `id` int(4) NOT NULL AUTO_INCREMENT COMMENT '权限id',
  `name` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '权限名称',
  `icon` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '图标',
  `pid` int(4) NOT NULL DEFAULT 0 COMMENT '父id',
  `module` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '模块名',
  `controller` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '控制器名称',
  `action` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '方法名名称',
  `params` varchar(128) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '参数',
  `font_family` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '字体',
  `spreed` tinyint(1) NOT NULL DEFAULT 0 COMMENT 'spreed',
  `is_check` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否选中',
  `is_menu` tinyint(1) NOT NULL DEFAULT 1 COMMENT '是否菜单',
  `path` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '路径',
  `rank` int(2) NOT NULL DEFAULT 0 COMMENT '排序',
  `status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '状态 1可用',
  `create_user` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '添加人',
  `update_user` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '修改时间',
  `create_time` int(10) NOT NULL DEFAULT 0 COMMENT '添加时间',
  `update_time` int(10) NOT NULL DEFAULT 0 COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 33 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '权限表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_admin_auth
-- ----------------------------
INSERT INTO `ape_admin_auth` VALUES (1, '查看日志', '', 8, 'admin', 'admin.admin_log', 'index', '', 'ok-icon', 0, 0, 1, '/admin/admin_log/index', 0, 1, '', '', 1582093161, 1581664102);
INSERT INTO `ape_admin_auth` VALUES (2, '控制台', 'mdi mdi-home', 0, 'admin', 'index', 'main', '', 'ok-icon', 0, 1, 1, '/admin/index/main', 99, 1, '', '1', 1582093161, 1624692439);
INSERT INTO `ape_admin_auth` VALUES (4, '账号管理', 'mdi mdi-account', 0, 'admin', 'admin', 'index', '', 'ok-icon', 0, 0, 1, '/admin/admin/index', 0, 1, '', '2', 1582093161, 1613627431);
INSERT INTO `ape_admin_auth` VALUES (5, '用户管理', '', 4, 'admin', 'admin', 'index', '', '', 0, 0, 1, '/admin/admin/index', 0, 1, '', '2', 1582093161, 1613627443);
INSERT INTO `ape_admin_auth` VALUES (6, '权限管理', '', 4, 'admin', 'admin_auth', 'index', '', '', 0, 0, 1, '/admin/admin_auth/index', 0, 1, '', '2', 1582093161, 1613627454);
INSERT INTO `ape_admin_auth` VALUES (7, '角色管理', '', 4, 'admin', 'admin_role', 'index', '', '', 0, 0, 1, '/admin/admin_role/index', 0, 1, '', '1', 1582093161, 1582263652);
INSERT INTO `ape_admin_auth` VALUES (8, '系统管理', 'mdi mdi-settings', 0, 'admin', 'admin_log', 'index', '', 'ok-icon', 1, 1, 1, '/admin/admin_log/index', 0, 1, '', '', 1582093161, 1582093161);
INSERT INTO `ape_admin_auth` VALUES (9, '修改密码', '', 8, 'admin', 'admin', 'pwd', '', '', 0, 0, 0, '/admin/admin/pwd', 0, 1, '1', '', 1582093161, 1582093161);
INSERT INTO `ape_admin_auth` VALUES (10, '清理缓存', '', 8, 'admin', 'system_config', 'clearCache', '', '', 0, 0, 1, '/admin/system_config/clearCache', 0, 1, '1', '1', 1582093658, 1593407914);
INSERT INTO `ape_admin_auth` VALUES (11, '网站配置', '', 8, 'admin', 'system_config', 'base', '', '', 0, 0, 1, '/admin/system_config/base', 0, 1, '1', '1', 1582266348, 1582781624);
INSERT INTO `ape_admin_auth` VALUES (12, '开发者配置', '', 8, 'admin', 'system_config_tab', 'index', '', '', 0, 0, 1, '/admin/system_config_tab/index', 0, 1, '1', '1', 1582266439, 1590149680);
INSERT INTO `ape_admin_auth` VALUES (13, '后台登录', '', 8, 'admin', 'login', 'login', '', '', 0, 0, 0, '/admin/login/login', 0, 1, '1', '', 1582707133, 1582093161);
INSERT INTO `ape_admin_auth` VALUES (14, '上传配置', '', 8, 'admin', 'system_config', 'upload', '', '', 0, 0, 0, '/admin/system_config/upload', 0, 1, '1', '', 1582781658, 1582781667);
INSERT INTO `ape_admin_auth` VALUES (15, '短信配置', '', 8, 'admin', 'system_config', 'sms', '', '', 0, 0, 0, '/admin/system_config/sms', 0, 1, '1', '', 1582781757, 1582781796);
INSERT INTO `ape_admin_auth` VALUES (16, '邮件配置', '', 8, 'admin', 'system_config', 'email', '', '', 0, 0, 0, '/admin/system_config/email', 0, 1, '1', '', 1582781787, 1582093161);
INSERT INTO `ape_admin_auth` VALUES (17, '内容管理', 'mdi mdi-file-document-box', 0, 'admin', 'content', 'index', '', '', 0, 0, 1, '/admin/content/index', 0, 1, '1', '1', 1612973864, 1613400986);
INSERT INTO `ape_admin_auth` VALUES (18, '文章管理', '', 17, 'admin', 'article', 'index', '', '', 0, 0, 1, '/admin/article/index', 0, 1, '1', '1', 1612973911, 1613401778);
INSERT INTO `ape_admin_auth` VALUES (19, '栏目分类', '', 17, 'admin', 'category', 'index', '', '', 0, 0, 1, '/admin/category/index', 0, 1, '1', '1', 1612973967, 1613401827);
INSERT INTO `ape_admin_auth` VALUES (20, '活动管理', 'mdi mdi-image-multiple', 0, 'admin', 'operate', 'index', '', '', 0, 0, 1, '/admin/operate/index', 0, 1, '1', '1', 1613391146, 1613449194);
INSERT INTO `ape_admin_auth` VALUES (21, '留言管理', '', 20, 'admin', 'message', 'index', '', '', 0, 0, 1, '/admin/message/index', 0, 1, '1', '1', 1612974123, 1613449203);
INSERT INTO `ape_admin_auth` VALUES (22, '邀请码管理', '', 20, 'admin', 'invitation', 'index', '', '', 0, 0, 1, '/admin/invitation/index', 0, 1, '1', '1', 1613400778, 1613449225);
INSERT INTO `ape_admin_auth` VALUES (23, '广告管理', 'mdi mdi-bulletin-board', 20, 'admin', 'advert', 'index', '', '', 0, 0, 1, '/admin/advert/index', 0, 1, '1', '1', 1627293150, 1641913919);
INSERT INTO `ape_admin_auth` VALUES (24, '会员管理', 'mdi mdi-account-multiple', 0, 'admin', 'user', 'index', '', '', 0, 0, 1, '/admin/user/index', 0, 1, '1', '', 1613400082, 1582093161);
INSERT INTO `ape_admin_auth` VALUES (25, '会员管理', '', 24, 'admin', 'user', 'index', '', '', 0, 0, 1, '/admin/user/index', 0, 1, '1', '', 1613400129, 1582093161);
INSERT INTO `ape_admin_auth` VALUES (26, '主题管理', 'mdi mdi-store', 0, 'admin', 'theme', 'index', '', '', 0, 0, 1, '/admin/theme/index', 0, 1, '1', '', 1613400314, 1620610846);
INSERT INTO `ape_admin_auth` VALUES (27, '主题管理', '', 26, 'admin', 'theme', 'index', '', '', 0, 0, 1, '/admin/theme/index', 0, 1, '1', '', 1613400349, 1582093161);
INSERT INTO `ape_admin_auth` VALUES (28, '主题商店', '', 26, 'admin', 'theme', 'store', '', '', 0, 0, 0, '/admin/theme/store', 0, 1, '1', '1', 1613400389, 1642946978);
INSERT INTO `ape_admin_auth` VALUES (29, '友链管理', 'mdi mdi-account-card-details', 0, 'admin', 'friend_link', 'index', '', '', 0, 0, 1, '/admin/friend_link/index', 0, 1, '1', '1', 1613400510, 1642947636);
INSERT INTO `ape_admin_auth` VALUES (30, '友链列表', '', 34, 'admin', 'friendlink', 'index', '', '', 0, 0, 1, '/admin/friendlink/index', 0, 1, '1', '', 1613400539, 1582093161);
INSERT INTO `ape_admin_auth` VALUES (31, '数据库管理', '', 8, 'admin', 'databases', 'index', '', '', 0, 0, 1, '/admin/databases/index', 0, 1, '1', '', 1635572569, 1635572671);
INSERT INTO `ape_admin_auth` VALUES (32, '友链管理', '', 29, 'admin', 'friend_link', 'index', '', '', 0, 0, 1, '/admin/friend_link/index', 0, 1, '1', '1', 1642089882, 1642947643);

-- ----------------------------
-- Table structure for ape_admin_log
-- ----------------------------
DROP TABLE IF EXISTS `ape_admin_log`;
CREATE TABLE `ape_admin_log`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '编号',
  `admin_id` int(10) NOT NULL DEFAULT 0 COMMENT '操作人id',
  `admin_name` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '操作人名字',
  `module` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '模块名',
  `controller` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '控制器名',
  `action` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '方法名',
  `ip` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT 'ip',
  `user_agent` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT 'User-Agent',
  `create_time` int(10) NOT NULL DEFAULT 0 COMMENT '操作时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '操作日志表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_admin_log
-- ----------------------------

-- ----------------------------
-- Table structure for ape_admin_notify
-- ----------------------------
DROP TABLE IF EXISTS `ape_admin_notify`;
CREATE TABLE `ape_admin_notify`  (
  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT '消息ID',
  `aid` int(10) NOT NULL DEFAULT 0 COMMENT '管理员ID',
  `title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '标题',
  `content` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '内容',
  `from` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '消息来源 谁发的',
  `type` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'system' COMMENT '消息类型 timer:定时器 system:系统',
  `url` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '跳转路径 不填写时自动判断',
  `is_read` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否已读',
  `create_time` int(10) NOT NULL DEFAULT 0 COMMENT '添加时间',
  `update_time` int(10) NOT NULL DEFAULT 0 COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '后台信息表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_admin_notify
-- ----------------------------

-- ----------------------------
-- Table structure for ape_admin_role
-- ----------------------------
DROP TABLE IF EXISTS `ape_admin_role`;
CREATE TABLE `ape_admin_role`  (
  `id` int(4) NOT NULL AUTO_INCREMENT COMMENT '角色状态',
  `pid` int(4) NOT NULL DEFAULT 0 COMMENT '上级id',
  `name` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '角色名称',
  `auth` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '权限',
  `tree_data` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT 'treedata',
  `rank` tinyint(2) NOT NULL DEFAULT 0 COMMENT '排序',
  `status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '角色状态1可用0不用',
  `create_user` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '0' COMMENT '添加人',
  `update_user` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '0' COMMENT '修改时间',
  `create_time` int(10) NOT NULL DEFAULT 0 COMMENT '添加时间',
  `update_time` int(10) NOT NULL DEFAULT 0 COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '后台角色表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_admin_role
-- ----------------------------
INSERT INTO `ape_admin_role` VALUES (1, 0, '超级管理员', '2,4,5,6,7,8,1,9,10,11,12,13,14,15,16,31,17,18,19,20,21,22,23,24,25,26,27,28,29,32', '2,4,5,6,7,8,1,9,10,11,12,13,14,15,16,31,17,18,19,20,21,22,23,24,25,26,27,28,29,32', 0, 1, '1', '1', 1580031132, 1642089929);
INSERT INTO `ape_admin_role` VALUES (2, 0, '普通用户', '17,18,19,20,21,22,23,26,27,28,29,32', '17,18,19,20,21,22,23,26,27,28,29,32', 0, 1, '1', '1', 1641393643, 1642089936);

-- ----------------------------
-- Table structure for ape_advert
-- ----------------------------
DROP TABLE IF EXISTS `ape_advert`;
CREATE TABLE `ape_advert`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `title` varchar(40) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '专区名称',
  `cover_path` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '专区banner图',
  `url` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '专区banner跳转url',
  `position` tinyint(4) UNSIGNED NOT NULL DEFAULT 1 COMMENT '专区位置 ',
  `user_id` int(19) NOT NULL DEFAULT 0 COMMENT '操作人id',
  `sort` int(2) NOT NULL DEFAULT 0 COMMENT '权重',
  `status` tinyint(2) NOT NULL DEFAULT 1 COMMENT '是否启用 0不启用 1启用',
  `create_time` int(10) NOT NULL DEFAULT 0,
  `update_time` int(10) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '广告专区表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_advert
-- ----------------------------
INSERT INTO `ape_advert` VALUES (1, '源码云博客', '/upload/image/20220228/77e53705a8651dbd30d7e5c3eea8313c.jpg', 'http://blog.apecloud.cn', 1, 1, 99, 1, 1642089742, 1646030018);
INSERT INTO `ape_advert` VALUES (2, '源码云博客', '/upload/image/20220228/77e53705a8651dbd30d7e5c3eea8313c.jpg', 'http://blog.apecloud.cn/index/article/detail.html?id=1', 2, 1, 99, 1, 1642089806, 1646030028);

-- ----------------------------
-- Table structure for ape_attachment
-- ----------------------------
DROP TABLE IF EXISTS `ape_attachment`;
CREATE TABLE `ape_attachment`  (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '附件ID',
  `cid` int(2) NOT NULL COMMENT '所属目录',
  `name` varchar(128) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '附件名称',
  `path` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '附件地址',
  `type` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '类型',
  `mime` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT 'mime',
  `size` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '0' COMMENT '大小',
  `storage` int(2) NOT NULL DEFAULT 1 COMMENT '存储方式1本地2腾讯云',
  `create_time` int(10) NOT NULL DEFAULT 0 COMMENT '上传时间',
  `update_time` int(10) NOT NULL DEFAULT 0 COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '附件表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_attachment
-- ----------------------------
INSERT INTO `ape_attachment` VALUES (2, 1, 'image/20220228\\ca46bd04e1d32911de549862f6db1b8e.png', '/upload/image/20220228/ca46bd04e1d32911de549862f6db1b8e.png', 'image', 'image/png', '32120', 1, 1646028504, 1646028504);
INSERT INTO `ape_attachment` VALUES (3, 2, 'image/20220228\\77e53705a8651dbd30d7e5c3eea8313c.jpg', '/upload/image/20220228/77e53705a8651dbd30d7e5c3eea8313c.jpg', 'image', 'image/jpeg', '262966', 1, 1646030013, 1646030013);

-- ----------------------------
-- Table structure for ape_attachment_category
-- ----------------------------
DROP TABLE IF EXISTS `ape_attachment_category`;
CREATE TABLE `ape_attachment_category`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '目录ID',
  `pid` int(10) NOT NULL DEFAULT 0 COMMENT '上级分类',
  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '目录名称',
  `type` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '所属附件类型',
  `create_user` int(10) NOT NULL DEFAULT 0 COMMENT '添加人',
  `update_user` int(10) NOT NULL DEFAULT 0 COMMENT '修改时间',
  `create_time` int(11) NOT NULL DEFAULT 0 COMMENT '添加时间',
  `update_time` int(11) NOT NULL DEFAULT 0 COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '附件分类' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_attachment_category
-- ----------------------------
INSERT INTO `ape_attachment_category` VALUES (1, 0, '头像', 'image', 1, 0, 1646018678, 1646018678);
INSERT INTO `ape_attachment_category` VALUES (2, 0, 'banner', 'image', 1, 0, 1646029908, 1646029908);

-- ----------------------------
-- Table structure for ape_comment
-- ----------------------------
DROP TABLE IF EXISTS `ape_comment`;
CREATE TABLE `ape_comment`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `author` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '评论者姓名',
  `email` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '评论者邮箱',
  `url` varchar(40) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '评论者网站',
  `content` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '评论者内容',
  `user_id` int(11) NOT NULL DEFAULT 0 COMMENT '评论者ID',
  `cover_path` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '评论头像地址',
  `pid` int(11) NOT NULL DEFAULT 0 COMMENT '评论谁',
  `document_id` int(11) NOT NULL DEFAULT 0 COMMENT '文章ID',
  `status` int(11) NOT NULL DEFAULT 0 COMMENT '状态 0不显示 1显示',
  `create_time` int(11) NOT NULL DEFAULT 0 COMMENT '评论时间',
  `update_time` int(11) NOT NULL DEFAULT 0 COMMENT '评论时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '评论表' ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of ape_comment
-- ----------------------------
INSERT INTO `ape_comment` VALUES (1, '影子', 'hewa@belloai.com', 'https://www.iqiyi.com/a_19rrhbd5ml.html', 'ewrwer[f=weiqu][f=yinxian]', 0, '', 0, 1, 0, 1646030054, 1646030076);

-- ----------------------------
-- Table structure for ape_document
-- ----------------------------
DROP TABLE IF EXISTS `ape_document`;
CREATE TABLE `ape_document`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `alias` varchar(40) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '别名',
  `uid` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '用户ID',
  `author` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '作者',
  `title` char(80) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '标题',
  `category_id` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '所属分类',
  `cover_path` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '封面',
  `type` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'article' COMMENT '内容类型',
  `theme` varchar(40) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '主题模板',
  `is_recommend` tinyint(4) NOT NULL DEFAULT 0 COMMENT '是否推荐',
  `is_top` tinyint(4) NOT NULL DEFAULT 0 COMMENT '是否置顶',
  `is_hot` tinyint(4) NOT NULL DEFAULT 0 COMMENT '是否热门',
  `link_str` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '外链',
  `display` tinyint(3) UNSIGNED NOT NULL DEFAULT 0 COMMENT '可见性',
  `view` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '浏览量',
  `tags` char(40) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '标识',
  `abstract` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '摘要',
  `keywords` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `description` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '描述',
  `sort` int(10) NOT NULL DEFAULT 0 COMMENT '排序',
  `create_date` date NOT NULL COMMENT '创建日期',
  `create_time` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '创建时间',
  `update_time` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '更新时间',
  `status` tinyint(4) NOT NULL DEFAULT 0 COMMENT '数据状态',
  `password` varchar(40) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '文章密码',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `alias`(`alias`) USING BTREE,
  INDEX `idx_category_status`(`category_id`, `status`) USING BTREE,
  INDEX `idx_status_type_pid`(`status`, `uid`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 110 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '文档模型基础表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_document
-- ----------------------------
INSERT INTO `ape_document` VALUES (1, 'about', 1, '超级管理员', '关于源码云博客', 1, '/upload/image/image/20220228/05e4cabf56f07a0e39337dc1ce63867a.png', 'article', '', 1, 1, 1, '', 1, 92, '源码云,博客,源码云博客', '关于源码云博客', '源码云博客,源码云,博客,关于', '源码云博客最好用的博客程序', 98, '2022-01-14', 1642089660, 1646011628, 1, '');
INSERT INTO `ape_document` VALUES (2, '2', 1, '超级管理员', '原生php 文件列表遍历方法', 3, '/upload/image/2017-07-31/597ef3ca022ed.png', 'article', '', 0, 0, 0, '', 1, 90, '', '', '', '', 0, '2017-07-31', 1501492173, 1502097307, 1, '');
INSERT INTO `ape_document` VALUES (3, '3', 1, '超级管理员', '原生php 获取准确浏览器类型代码', 2, '/upload/image/2017-08-01/598022ef8785b.jpg', 'article', '', 0, 0, 0, '', 1, 93, '', '', '', '', 0, '2017-08-01', 1501569778, 1502097289, 1, '');
INSERT INTO `ape_document` VALUES (4, '4', 1, '超级管理员', 'thinkphp比较两个时间戳之间消耗时间方法', 2, '/upload/image/2017-08-07/59882e87b2f09.jpg', 'article', '', 0, 0, 0, '', 1, 74, '', '', '', '', 0, '2017-08-07', 1502097034, 1502097255, 1, '');
INSERT INTO `ape_document` VALUES (5, '5', 1, '超级管理员', 'linux 安装php拓展,版本不匹配的解决办法', 3, '/upload/image/2017-08-08/598925c580246.png', 'article', '', 0, 0, 0, '', 1, 82, '', '', '', '', 0, '2017-08-08', 1502160327, 1502160327, 1, '');
INSERT INTO `ape_document` VALUES (6, '6', 1, '超级管理员', 'CI 3.X 系列  session 设置    session 路径创建失败问', 3, '/upload/image/2017-09-26/59c9bea994d51.png', 'article', '', 0, 0, 0, '', 1, 97, '', '', '', '', 0, '2017-09-26', 1506393771, 1506393771, 1, '');
INSERT INTO `ape_document` VALUES (7, '7', 1, '超级管理员', 'thinkphp 使用iframe类框架跳转问题', 2, '/upload/image/2017-11-17/5a0e554b1c465.png', 'article', '', 0, 0, 0, '', 1, 81, '', '', '', '', 0, '2017-11-17', 1510888781, 1510906941, 1, '');
INSERT INTO `ape_document` VALUES (8, '8', 1, '超级管理员', 'Win10风格前端解决方案 扒站源码', 31, '/upload/image/2017-11-17/5a0e5753dc61b.png', 'article', '', 0, 0, 0, '', 1, 126, '', '', '', '', 0, '2017-11-17', 1510889420, 1568253320, 1, '');
INSERT INTO `ape_document` VALUES (9, '9', 1, '超级管理员', 'Redis Session共享类，【负载均衡使用】', 30, '/upload/image/2017-11-17/5a0e59e32e8d6.jpg', 'article', '', 0, 0, 0, '', 1, 110, '', '', '', '', 0, '2017-11-17', 1510889958, 1510889958, 1, '');
INSERT INTO `ape_document` VALUES (10, '10', 1, '超级管理员', 'CI 3.x  使用iframe类框架跳转问题', 30, '/upload/image/2017-11-17/5a0ea4b40ec3a.png', 'article', '', 0, 0, 0, '', 1, 117, '', '', '', '', 0, '2017-11-17', 1510909110, 1510909135, 1, '');
INSERT INTO `ape_document` VALUES (11, '11', 1, '超级管理员', 'php 调用ffmpeg获取视频信息的方法', 30, '/upload/image/2017-11-25/5a18aa36e6058.jpg', 'article', '', 0, 0, 0, '', 1, 114, '', '', '', '', 0, '2017-11-25', 1511565881, 1511565881, 1, '');
INSERT INTO `ape_document` VALUES (12, '12', 1, '超级管理员', '超级简单的 Nginx 反代网站教程', 22, '/upload/image/2017-11-27/5a1be72822fb9.jpg', 'article', '', 0, 0, 0, '', 1, 82, '', '', '', '', 0, '2017-11-27', 1511778090, 1511778090, 1, '');
INSERT INTO `ape_document` VALUES (13, '13', 1, '超级管理员', 'ffmpeg 视频抽取音频，视音频分离', 22, '/upload/image/2017-11-29/5a1e5675d3476.jpg', 'article', '', 0, 0, 0, '', 1, 77, '', '', '', '', 0, '2017-11-29', 1511937656, 1511937656, 1, '');
INSERT INTO `ape_document` VALUES (14, '14', 1, '超级管理员', 'linux nfs 挂载出现 无法写入或者部分用户无法写入问题解决', 3, '/upload/image/2017-12-18/5a3728d7e751b.jpg', 'article', '', 0, 0, 0, '', 1, 82, '', '', '', '', 0, '2017-12-18', 1513564378, 1513564378, 1, '');
INSERT INTO `ape_document` VALUES (15, '15', 1, '超级管理员', 'layui 添加不能修改的 input', 31, '/upload/image/2017-12-25/5a40d38c754ab.jpg', 'article', '', 0, 0, 0, '', 1, 115, '', '', '', '', 0, '2017-12-25', 1514197857, 1519382543, 1, '');
INSERT INTO `ape_document` VALUES (16, '16', 1, '超级管理员', 'FFmpeg 常用命令DEMO', 22, '/upload/image/2017-12-27/5a42ffb757a23.jpg', 'article', '', 0, 0, 0, '', 1, 158, '', '', '', '', 0, '2017-12-27', 1514340282, 1514340282, 1, '');
INSERT INTO `ape_document` VALUES (17, '17', 1, '超级管理员', 'Windows 安装php composer 显示找不到ext 目录安装失败解决', 2, '/upload/image/2018-01-03/5a4c8c0244e9d.jpg', 'article', '', 0, 0, 0, '', 1, 73, '', '', '', '', 0, '2018-01-03', 1514966020, 1514966046, 1, '');
INSERT INTO `ape_document` VALUES (18, '18', 1, '超级管理员', 'Apache禁用测试页（默认页）', 22, '/upload/image/2018-01-03/5a4cb5ed576a3.jpg', 'article', '', 0, 0, 0, '', 1, 85, '', '', '', '', 0, '2018-01-03', 1514976751, 1514976751, 1, '');
INSERT INTO `ape_document` VALUES (19, '19', 1, '超级管理员', '远程登录CentOS，短时间就断线的处理', 22, '/upload/image/2018-01-05/5a4f279027ef2.jpg', 'article', '', 0, 0, 0, '', 1, 78, '', '', '', '', 0, '2018-01-05', 1515136914, 1515136914, 1, '');
INSERT INTO `ape_document` VALUES (20, '20', 1, '超级管理员', 'js作用域声明及需要注意的地方', 23, '/upload/image/2018-01-17/5a5ebeac41cd8.jpg', 'article', '', 0, 0, 0, '', 1, 105, '', '', '', '', 0, '2018-01-17', 1516158638, 1516158638, 1, '');
INSERT INTO `ape_document` VALUES (21, '21', 1, '超级管理员', 'ffmpeng视频或音频转码命令及常用命令', 22, '/upload/image/2018-01-17/5a5ec061b1d6f.jpg', 'article', '', 0, 0, 0, '', 1, 98, '', '', '', '', 0, '2018-01-17', 1516159364, 1516269115, 1, '');
INSERT INTO `ape_document` VALUES (22, '22', 1, '超级管理员', 'php支持断点续传的文件下载类', 2, '/upload/image/2018-01-18/5a6061eb45934.jpg', 'article', '', 0, 0, 0, '', 1, 79, '', '', '', '', 0, '2018-01-18', 1516265966, 1516265966, 1, '');
INSERT INTO `ape_document` VALUES (23, '23', 1, '超级管理员', 'php 支持断点续传的文件下载方法和Thinkphp使用方法', 3, '/upload/image/2018-01-18/5a6062cbb49ea.jpg', 'article', '', 0, 0, 0, '', 1, 95, '', '', '', '', 0, '2018-01-18', 1516266190, 1516266253, 1, '');
INSERT INTO `ape_document` VALUES (24, '24', 1, '超级管理员', 'git 常用命令备忘', 22, '/upload/image/2018-02-23/5a8f7cfda9159.jpg', 'article', '', 0, 0, 0, '', 1, 80, '', '', '', '', 0, '2018-02-23', 1519353087, 1519357373, 1, '');
INSERT INTO `ape_document` VALUES (25, '25', 1, '超级管理员', 'php论坛中常用的两个时间差(多少分钟前,多少小时前,多少天前)', 2, '/upload/image/2018-02-23/5a8f8aa14d547.jpg', 'article', '', 0, 0, 0, '', 1, 87, '', '', '', '', 0, '2018-02-23', 1519356579, 1519357213, 1, '');
INSERT INTO `ape_document` VALUES (26, '26', 1, '超级管理员', '8个常用的PHP安全函数', 2, '/upload/image/2018-02-23/5a8f8d66aaf9e.jpg', 'article', '', 0, 0, 0, '', 1, 91, '', '', '', '', 0, '2018-02-23', 1519357289, 1519357289, 1, '');
INSERT INTO `ape_document` VALUES (27, '27', 1, '超级管理员', 'MySQL数据类型选择指南', 34, '/upload/image/2018-02-23/5a8f8f457f5e9.jpg', 'article', '', 0, 0, 0, '', 1, 122, '', '', '', '', 0, '2018-02-23', 1519357768, 1519357768, 1, '');
INSERT INTO `ape_document` VALUES (28, '28', 1, '超级管理员', 'MySQL常用命令大全', 34, '/upload/image/2018-02-23/5a8f8f73ac342.jpg', 'article', '', 0, 0, 0, '', 1, 101, '', '', '', '', 0, '2018-02-23', 1519357843, 1519357843, 1, '');
INSERT INTO `ape_document` VALUES (29, '29', 1, '超级管理员', '【文件/文件夹操作】php文件夹/文件目录操作函数', 2, '/upload/image/2018-02-28/5a9611d4e9ddb.jpg', 'article', '', 0, 0, 0, '', 1, 79, '', '', '', '', 0, '2018-02-28', 1519784409, 1519784409, 1, '');
INSERT INTO `ape_document` VALUES (30, '30', 1, '超级管理员', 'thinkphp多表查询两表有重复相同字段解决方法', 3, '/upload/image/2018-03-02/5a98c308a7dda.jpg', 'article', '', 0, 0, 0, '', 1, 91, '', '', '', '', 0, '2018-03-02', 1519960842, 1519960842, 1, '');
INSERT INTO `ape_document` VALUES (31, '31', 1, '超级管理员', 'php文件夹遍历的N种办法', 2, '/upload/image/2018-03-12/5aa5f607c2ec8.jpg', 'article', '', 0, 0, 0, '', 1, 97, '', '', '', '', 0, '2018-03-12', 1520825866, 1520825866, 1, '');
INSERT INTO `ape_document` VALUES (32, '32', 1, '超级管理员', '借助jquery插件实现高斯模糊背景', 24, '/upload/image/2018-03-15/5aaa310d7d0ec.png', 'article', '', 0, 0, 0, '', 1, 131, '', '', '', '', 0, '2018-03-15', 1521103154, 1521103154, 1, '');
INSERT INTO `ape_document` VALUES (33, '33', 1, '超级管理员', 'mysql常用语句及复习资料', 34, '/upload/image/2018-03-19/5aaf69d92507f.jpg', 'article', '', 0, 0, 0, '', 1, 163, '', '', '', '', 0, '2018-03-19', 1521445343, 1521445343, 1, '');
INSERT INTO `ape_document` VALUES (34, '34', 1, '超级管理员', 'html5 屏蔽全屏和下载按钮 以及屏蔽右键', 3, '/upload/image/2018-03-21/5ab209faa9958.jpg', 'article', '', 0, 0, 0, '', 1, 104, '', '', '', '', 0, '2018-03-21', 1521617404, 1521617404, 1, '');
INSERT INTO `ape_document` VALUES (35, '35', 1, '超级管理员', 'PHP丨如何实现自判断访问是否为手机端来源', 3, '/upload/image/2018-04-04/5ac4444660b36.jpg', 'article', '', 0, 0, 0, '', 1, 120, '', '相信很多人都会在手机端背景上花心思--因为图片适应了PC端,PE端效果就惨不忍睹。适应了PE端,PC端的背景单调的可怜,对于像西顾这种完美主义者来说,一看到这种丑八怪背景就想关站跑路了。', '', '', 0, '2018-04-04', 1522810898, 1522811976, 1, '');
INSERT INTO `ape_document` VALUES (36, '36', 1, '超级管理员', '自适应丨Html5响应式（自适应）网页设计', 3, '/upload/image/2018-04-04/5ac43e50961a0.jpg', 'article', '', 0, 0, 0, '', 1, 94, '', '', '', '', 0, '2018-04-04', 1522812283, 1522812283, 1, '');
INSERT INTO `ape_document` VALUES (37, '37', 1, '超级管理员', 'php防止sql注入', 2, '/upload/image/2018-04-12/5acf1c92c100f.jpg', 'article', '', 0, 0, 0, '', 1, 99, '', '', '', '', 0, '2018-04-12', 1523522708, 1523522708, 1, '');
INSERT INTO `ape_document` VALUES (38, '38', 1, '超级管理员', 'go语言基础语法结构总结', 35, '/upload/image/2018-04-20/5ad95277726c5.jpg', 'article', '', 0, 0, 0, '', 1, 122, '', '', '', '', 0, '2018-04-20', 1524191868, 1524191868, 1, '');
INSERT INTO `ape_document` VALUES (39, '39', 1, '超级管理员', 'go自我理解数据类型', 35, '/upload/image/2018-04-20/5ad978fb05c3c.png', 'article', '', 0, 0, 0, '', 1, 105, '', '', '', '', 0, '2018-04-20', 1524199528, 1524201933, 1, '');
INSERT INTO `ape_document` VALUES (40, '40', 1, '超级管理员', 'php使用for循环、while循环和递归写出3个函数来计算给定数列的总和', 2, '/upload/image/2018-04-20/5ad98462ea09e.jpg', 'article', '', 0, 0, 0, '', 1, 98, '', '', '', '', 0, '2018-04-20', 1524204649, 1524205107, 1, '');
INSERT INTO `ape_document` VALUES (41, '41', 1, '超级管理员', 'php实现斐波那契数列', 2, '/upload/image/2018-04-20/5ad98dc5e0618.jpg', 'article', '', 0, 0, 0, '', 1, 90, '', '', '', '', 0, '2018-04-20', 1524207052, 1524207052, 1, '');
INSERT INTO `ape_document` VALUES (42, '42', 1, '超级管理员', 'Go 语言类型转换', 3, '/upload/image/2018-04-20/5ad9a10a16fd8.jpg', 'article', '', 0, 0, 0, '', 1, 97, '', '', '', '', 0, '2018-04-20', 1524211979, 1524211979, 1, '');
INSERT INTO `ape_document` VALUES (43, '43', 1, '超级管理员', '随机拿出一个0到100的数,猜数算法', 2, '/upload/image/2018-04-20/5ad9b817ea10f.jpg', 'article', '', 0, 0, 0, '', 1, 90, '', '', '', '', 0, '2018-04-20', 1524217881, 1524217960, 1, '');
INSERT INTO `ape_document` VALUES (44, '44', 1, '超级管理员', '从mysql 查询模型解释 as 在 where中为什么不生效', 34, '/upload/image/2018-04-24/5adf09196c8db.jpg', 'article', '', 0, 0, 0, '', 1, 97, '', '', '', '', 0, '2018-04-24', 1524566301, 1524566301, 1, '');
INSERT INTO `ape_document` VALUES (45, '45', 1, '超级管理员', 'php 面向对象 接口和抽象类', 2, '/upload/image/2018-04-26/5ae186e03f643.jpg', 'article', '', 0, 0, 0, '', 1, 87, '', '', '', '', 0, '2018-04-26', 1524729570, 1524729688, 1, '');
INSERT INTO `ape_document` VALUES (46, '46', 1, '超级管理员', 'html添加 base解决资源路劲问题', 23, '/upload/image/2018-04-27/5ae2d152e957c.png', 'article', '', 0, 0, 0, '', 1, 112, '', '', '', '', 0, '2018-04-27', 1524814202, 1524814336, 1, '');
INSERT INTO `ape_document` VALUES (47, '47', 1, '超级管理员', 'notepad++ 去除 扒站小偷 tel产生的冗余代码', 8, '/upload/image/2018-04-28/5ae4463396c7e.jpg', 'article', '', 0, 0, 0, '', 1, 123, '', '', '', '', 0, '2018-04-28', 1524909624, 1524909624, 1, '');
INSERT INTO `ape_document` VALUES (48, '48', 1, '超级管理员', 'php统计脚本内存消耗和运行时间', 2, '/upload/image/2019-07-19/5d312a6e95ac8.png', 'article', '', 0, 0, 0, '', 1, 89, '', '', '', '', 0, '2019-07-19', 1563503216, 1571109951, 1, '');
INSERT INTO `ape_document` VALUES (49, '49', 1, '超级管理员', 'setcookie刷新后才生效问题', 2, '/upload/image/2019-08-01/5d4250b0054ac.jpg', 'article', '', 0, 0, 0, '', 1, 81, '', '', '', '', 0, '2019-08-01', 1564627123, 1564627123, 1, '');
INSERT INTO `ape_document` VALUES (50, '50', 1, '超级管理员', 'Composer 国内加速，修改镜像源', 2, '/upload/image/2019-08-22/5d5ea374df5e2.jpg', 'article', '', 0, 0, 0, '', 1, 90, '', '', '', '', 0, '2019-08-22', 1566483320, 1580887447, 1, '');
INSERT INTO `ape_document` VALUES (51, '51', 1, '超级管理员', '视频解析接口列表', 30, '/upload/image/2019-08-23/5d5faacbafdf0.jpg', 'article', '', 0, 0, 0, '', 1, 154, '', '', '', '', 0, '2019-08-23', 1566550743, 1581504377, 1, '');
INSERT INTO `ape_document` VALUES (52, '52', 1, '超级管理员', '参考爱奇艺全网影视做多平台融合时地址 URL自动关联转换函数', 3, '/upload/image/2019-08-29/5d676e3cc77f7.jpg', 'article', '', 0, 0, 0, '', 1, 110, '', '', '', '', 0, '2019-08-29', 1567059557, 1567059557, 1, '');
INSERT INTO `ape_document` VALUES (53, '53', 1, '超级管理员', '页面中的http请求转为https请求', 22, '/upload/image/2019-09-12/5d79a4ae9613c.jpg', 'article', '', 0, 0, 0, '', 1, 107, '', '', '', '', 0, '2019-09-12', 1568253105, 1568253105, 1, '');
INSERT INTO `ape_document` VALUES (54, '54', 1, '超级管理员', 'linux杀死相关所有进程', 3, '/upload/image/2019-09-16/5d7f3b6dc3b69.jpg', 'article', '', 0, 0, 0, '', 1, 101, '', '', '', '', 0, '2019-09-16', 1568619381, 1568619381, 1, '');
INSERT INTO `ape_document` VALUES (55, '55', 1, '超级管理员', 'Linux查找并杀死僵尸进程', 22, '/upload/image/2019-09-20/5d84753455d30.jpg', 'article', '', 0, 0, 0, '', 1, 168, '', '', '', '', 0, '2019-09-20', 1568961846, 1569203732, 1, '');
INSERT INTO `ape_document` VALUES (56, '56', 1, '超级管理员', 'QueryList 优酷列表抓取DEMO代码', 2, '/upload/image/2019-09-21/5d862aaff1e87.jpg', 'article', '', 0, 0, 0, '', 1, 189, '', '', '', '', 0, '2019-09-21', 1569073841, 1569073841, 1, '');
INSERT INTO `ape_document` VALUES (57, '57', 1, '超级管理员', 'mac下PHPStorm2019.2破解教程', 2, '/upload/image/2019-09-22/5d8738aa5e832.jpg', 'article', '', 0, 0, 0, '', 1, 187, '', '', '', '', 0, '2019-09-22', 1569142957, 1569142957, 1, '');
INSERT INTO `ape_document` VALUES (58, '58', 1, '超级管理员', 'MySQL查询和删除重复记录', 34, '/upload/image/2019-09-29/5d906140d7e76.jpg', 'article', '', 0, 0, 0, '', 1, 204, '', '', '', '', 0, '2019-09-29', 1569743172, 1569743172, 1, '');
INSERT INTO `ape_document` VALUES (59, '59', 1, '超级管理员', 'php foreach遍历时unset不能删除', 2, '/upload/image/2019-10-08/5d9c05649826d.jpg', 'article', '', 0, 0, 0, '', 1, 175, '', '', '', '', 0, '2019-10-08', 1570506087, 1570506107, 1, '');
INSERT INTO `ape_document` VALUES (60, '60', 1, '超级管理员', ' macOS 下使用 PHP-version 切换 PHP 版本', 37, '/upload/image/2019-10-18/5da9d40464c99.jpg', 'article', '', 0, 0, 0, '', 1, 219, '', '', '', '', 0, '2019-10-18', 1571410951, 1571410951, 1, '');
INSERT INTO `ape_document` VALUES (61, '61', 1, '超级管理员', '影视API接口XyplayerX3.91正式版智能影视解析系统完整版源码', 2, '/upload/image/2019-10-23/5db074224355c.jpg', 'article', '', 0, 0, 0, '', 1, 240, '', '', '', '', 0, '2019-10-23', 1571845156, 1580887418, 1, '');
INSERT INTO `ape_document` VALUES (62, '62', 1, '超级管理员', '优酷剧集获取纯php实现', 2, '/upload/image/2019-10-24/5db13ed43b192.jpg', 'article', '', 0, 0, 0, '', 1, 607, '', '', '', '', 0, '2019-10-24', 1571897127, 1580887407, 1, '');
INSERT INTO `ape_document` VALUES (63, '63', 1, '超级管理员', 'Redis批量删除key的小技巧', 22, '/upload/image/2019-11-05/5dc0e2118ea92.jpg', 'article', '', 0, 0, 0, '', 1, 224, '', '', '', '', 0, '2019-11-05', 1572921877, 1572921893, 1, '');
INSERT INTO `ape_document` VALUES (64, '64', 1, '超级管理员', 'composer爆错：zlib_decode():data error', 2, '/upload/image/2019-11-10/5dc822493c6cd.jpg', 'article', '', 0, 0, 0, '', 1, 122, '', '', '', '', 0, '2019-11-10', 1573397067, 1573397067, 1, '');
INSERT INTO `ape_document` VALUES (65, '65', 1, '超级管理员', '视频完美切片存储方案 附自动化处理脚本', 2, '/upload/image/2020-01-14/5e1d7c535e272.png', 'article', '', 0, 0, 0, '', 1, 119, '', '', '', '', 0, '2020-01-14', 1578990678, 1580887385, 1, '');
INSERT INTO `ape_document` VALUES (66, '66', 1, '超级管理员', 'PHP-全民K歌直链信息解析源码', 2, '/upload/image/2020-01-14/5e1d7d7940b97.jpg', 'article', '', 0, 0, 0, '', 1, 195, '', '', '', '', 0, '2020-01-14', 1578990972, 1580887355, 1, '');
INSERT INTO `ape_document` VALUES (67, '67', 1, '超级管理员', '为您的网站添加MySSL安全认证签章', 22, '/upload/image/2020-01-17/5e211e3accfd3.jpg', 'article', '', 0, 0, 0, '', 1, 102, '', '', '', '', 0, '2020-01-17', 1579228733, 1579228733, 1, '');
INSERT INTO `ape_document` VALUES (68, '68', 1, '超级管理员', 'PHP 采集专用curl函数封装', 2, '/upload/image/2020-02-01/5e353d7a370bf.png', 'article', '', 0, 0, 0, '', 1, 118, '', '', '', '', 0, '2020-02-01', 1580547452, 1580547452, 1, '');
INSERT INTO `ape_document` VALUES (69, '69', 1, '超级管理员', '[layui] layedit如何同步编辑器内容到textarea或者form提', 23, '/upload/image/2020-03-16/5e6f20d304fab.jpg', 'article', '', 0, 0, 0, '', 1, 440, '', '', '', '', 0, '2020-03-16', 1584341204, 1584341204, 1, '');
INSERT INTO `ape_document` VALUES (70, '70', 1, '超级管理员', '实战中如何使用Git', 2, '/upload/image/2020-03-26/5e7cb7c59c77e.jpg', 'article', '', 0, 0, 0, '', 1, 101, '', '', '', '', 0, '2020-03-26', 1585231818, 1585231873, 1, '');
INSERT INTO `ape_document` VALUES (71, '71', 1, '超级管理员', 'Redis持久化', 22, '/upload/image/2020-03-30/5e817bf5c9bd9.jpg', 'article', '', 0, 0, 0, '', 1, 98, '', '', '', '', 0, '2020-03-30', 1585544187, 1585544187, 1, '');
INSERT INTO `ape_document` VALUES (72, '72', 1, '超级管理员', '搭建高可用负载均衡器: haproxy+keepalived', 22, '/upload/image/2020-04-01/5e849e2352091.jpg', 'article', '', 0, 0, 0, '', 1, 133, '', '', '', '', 0, '2020-04-01', 1585749544, 1585749544, 1, '');
INSERT INTO `ape_document` VALUES (73, '73', 1, '超级管理员', 'LVS+KeepAlived+Nginx高可用实现方案之DR模式', 22, '/upload/image/2020-04-03/5e870f5f4c02e.jpg', 'article', '', 0, 0, 0, '', 1, 110, '', '', '', '', 0, '2020-04-03', 1585909603, 1585909603, 1, '');
INSERT INTO `ape_document` VALUES (74, '74', 1, '超级管理员', 'nginx 负载均衡的配置', 22, '/upload/image/2020-04-04/5e883ce833627.jpg', 'article', '', 0, 0, 0, '', 1, 141, '', '', '', '', 0, '2020-04-04', 1585986795, 1585986795, 1, '');
INSERT INTO `ape_document` VALUES (75, '75', 1, '超级管理员', '哀悼抗疫英雄！网站黑白背景设置教程', 8, '/upload/image/2020-04-04/5e884ff821f2c.jpg', 'article', '', 0, 0, 0, '', 1, 232, '', '', '', '', 0, '2020-04-04', 1585991725, 1585991725, 1, '');
INSERT INTO `ape_document` VALUES (76, '76', 1, '超级管理员', '5 分钟完成 Nginx 直播服务部署（直播 + 分流 + 画面水印）', 22, '/upload/image/2020-04-09/5e8f1aa470fd8.png', 'article', '', 0, 0, 0, '', 1, 153, '', '', '', '', 0, '2020-04-09', 1586437034, 1586438692, 1, '');
INSERT INTO `ape_document` VALUES (77, '77', 1, '超级管理员', '让PHP程序永远在后台运行', 3, '/upload/image/2020-04-12/5e92fd04025f5.jpg', 'article', '', 0, 0, 0, '', 1, 159, '', '', '', '', 0, '2020-04-12', 1586691334, 1586691334, 1, '');
INSERT INTO `ape_document` VALUES (78, '78', 1, '超级管理员', '图解：实战最左前缀原则', 3, '/upload/image/2020-04-14/5e9536361d1d1.jpg', 'article', '', 0, 0, 0, '', 1, 271, '', '', '', '', 0, '2020-04-14', 1586837051, 1586837051, 1, '');
INSERT INTO `ape_document` VALUES (79, '79', 1, '超级管理员', 'upervisor做守护进程', 22, '/upload/image/2020-04-21/5e9ee94cbebc9.jpg', 'article', '', 0, 0, 0, '', 1, 256, '', '', '', '', 0, '2020-04-21', 1587472721, 1587472721, 1, '');
INSERT INTO `ape_document` VALUES (80, '80', 1, '超级管理员', 'thinkphp mysql5.7数据迁移datetime默认值问题解决', 2, '/upload/image/2020-05-15/5ebe5915862da.jpg', 'article', '', 0, 0, 0, '', 1, 172, '', '', '', '', 0, '2020-05-15', 1589532951, 1589532964, 1, '');
INSERT INTO `ape_document` VALUES (81, '81', 1, '超级管理员', 'PHP CURL方法封装', 3, '/upload/image/2020-07-21/5f167f41be080.jpg', 'article', '', 0, 0, 0, '', 1, 140, '', '', '', '', 0, '2020-07-21', 1595309893, 1595309893, 1, '');
INSERT INTO `ape_document` VALUES (82, '82', 1, '超级管理员', 'git 添加密码拉去代码，免去每次输入账号密码的问题', 3, '/upload/image/2020-08-24/5f43329de5c8a.jpg', 'article', '', 0, 0, 0, '', 1, 100, '', '', '', '', 0, '2020-08-24', 1598239399, 1610954004, 1, '');
INSERT INTO `ape_document` VALUES (83, '83', 1, '超级管理员', 'array_diff 使用栽坑记录', 30, '/upload/image/2020-08-26/5f45fa690e092.jpg', 'article', '', 0, 0, 0, '', 1, 116, '', '', '', '', 0, '2020-08-26', 1598421611, 1598421611, 1, '');
INSERT INTO `ape_document` VALUES (84, '84', 1, '超级管理员', 'tp6 API 结合jwt自动获取user_id', 3, '/upload/image/2020-11-04/5fa2557c624e0.jpg', 'article', '', 0, 0, 0, '', 1, 58, '', '', '', '', 0, '2020-11-04', 1604474238, 1604474238, 1, '');
INSERT INTO `ape_document` VALUES (85, '85', 1, '超级管理员', '禁止鼠标右键和禁止F12', 24, '/upload/image/2020-11-08/5fa7f3637d0aa.jpg', 'article', '', 0, 0, 0, '', 1, 53, '', '', '', '', 0, '2020-11-08', 1604842341, 1604842341, 1, '');
INSERT INTO `ape_document` VALUES (86, '86', 1, '超级管理员', '最全的常用正则表达式大全——包括校验数字、字符、一些特殊的需求等等', 3, '/upload/image/2020-11-11/5fab93bf32d1c.jpg', 'article', '', 0, 0, 0, '', 1, 51, '', '', '', '', 0, '2020-11-11', 1605080001, 1605080001, 1, '');
INSERT INTO `ape_document` VALUES (87, '87', 1, '超级管理员', 'PHP读取docx文档内容', 3, '/upload/image/2020-11-23/5fbb8eaa40498.png', 'article', '', 0, 0, 0, '', 1, 42, '', '', '', '', 0, '2020-11-23', 1606127420, 1606127420, 1, '');
INSERT INTO `ape_document` VALUES (88, '88', 1, '超级管理员', 'jquery.confirm 和 modal 弹窗同时打开的bug', 24, '/upload/image/2020-11-25/5fbe1d070f48b.jpg', 'article', '', 0, 0, 0, '', 1, 41, '', '', '', '', 0, '2020-11-25', 1606294792, 1606294850, 1, '');
INSERT INTO `ape_document` VALUES (89, '89', 1, '超级管理员', 'webuploader上传文件夹', 3, '/upload/image/2020-11-27/5fc0b4f09911e.jpg', 'article', '', 0, 0, 0, '', 1, 43, '', '', '', '', 0, '2020-11-27', 1606464753, 1606464753, 1, '');
INSERT INTO `ape_document` VALUES (90, '90', 1, '超级管理员', 'phpspreadsheet 工具类导出整合优化,非原创', 2, '/upload/image/2020-12-11/5fd3424b71c87.jpeg', 'article', '', 0, 0, 0, '', 1, 39, '', '', '', '', 0, '2020-12-11', 1607680589, 1607680710, 1, '');
INSERT INTO `ape_document` VALUES (91, '91', 1, '超级管理员', '解决js生成的html和原生html的样式不一致的问题', 24, '/upload/image/2020-12-15/5fd8509e9e9b8.jpeg', 'article', '', 0, 0, 0, '', 1, 37, '', '', '', '', 0, '2020-12-15', 1608011935, 1608011935, 1, '');
INSERT INTO `ape_document` VALUES (92, '92', 1, '超级管理员', '解决 Light Year Admin 标签元素距离太近上下样式粘在一起', 3, '/upload/image/2020-12-15/5fd851f013881.jpg', 'article', '', 0, 0, 0, '', 1, 37, '', '', '', '', 0, '2020-12-15', 1608012273, 1608012273, 1, '');
INSERT INTO `ape_document` VALUES (93, '93', 1, '超级管理员', 'jq tree_table  动态生成加载，不同的column', 24, '/upload/image/2020-12-17/5fdaebd057ca8.png', 'article', '', 0, 0, 0, '', 1, 35, '', '', '', '', 0, '2020-12-17', 1608182738, 1608182749, 1, '');
INSERT INTO `ape_document` VALUES (94, '94', 1, '超级管理员', 'js数字格式化为千分位', 23, '/upload/image/2020-12-17/5fdafc90b349a.gif', 'article', '', 0, 0, 0, '', 1, 52, '', '', '', '', 0, '2020-12-17', 1608187026, 1608187026, 1, '');
INSERT INTO `ape_document` VALUES (95, '95', 1, '超级管理员', 'bootstrap-table的一些操作', 3, '/upload/image/2020-12-29/5feb009c7d688.png', 'article', '', 0, 0, 0, '', 1, 42, '', '', '', '', 0, '2020-12-29', 1609236638, 1609236638, 1, '');
INSERT INTO `ape_document` VALUES (96, '96', 1, '超级管理员', 'js 简易缓存类', 3, '/upload/image/2020-12-29/5feb01345780c.jpg', 'article', '', 0, 0, 0, '', 1, 49, '', '', '', '', 0, '2020-12-29', 1609236790, 1609236790, 1, '');
INSERT INTO `ape_document` VALUES (97, '97', 1, '超级管理员', 'php 使用jieba分词', 2, '/upload/image/2021-01-05/5ff4138f7cb12.jpg', 'article', '', 0, 0, 0, '', 1, 51, '', '', '', '', 0, '2021-01-05', 1609831313, 1609834299, 1, '');
INSERT INTO `ape_document` VALUES (98, '98', 1, '超级管理员', 'vue 未登录隐藏敏感信息', 23, '/upload/image/2021-01-31/601687638c5d8.png', 'article', '', 0, 0, 0, '', 1, 43, '', '', '', '', 0, '2021-01-05', 1609834231, 1612089189, 1, '');
INSERT INTO `ape_document` VALUES (99, '99', 1, '超级管理员', '联想小新13pro更新驱动开机特别慢解决办法', 1, '/upload/image/2021-01-05/5ff436ede9f71.jpg', 'article', '', 0, 0, 0, '', 1, 45, '', '', '', '', 0, '2021-01-05', 1609840400, 1609840444, 1, '');
INSERT INTO `ape_document` VALUES (100, '100', 1, '超级管理员', 'thinkphp6 分页加参数', 2, '/upload/image/2021-01-07/5ff72cc3698e7.png', 'article', '', 0, 0, 0, '', 1, 47, '', 'tp6 分页类使用分页实现ThinkPHP内置了分页实现，要给数据添加分页输出功能变得非常简单，可以直接在Db类查询的时候调用paginate方法：// 查询状态为1的用户数据 并且每页显示10条数据', '', '', 0, '2021-01-07', 1610034375, 1610034375, 1, '');
INSERT INTO `ape_document` VALUES (101, '101', 1, '超级管理员', 'centos8安装elasticsearch', 22, '/upload/image/2021-01-31/601584706104c.jpg', 'article', '', 0, 0, 0, '', 1, 21, '', '', '', '', 0, '2021-01-31', 1612023058, 1612023058, 1, '');
INSERT INTO `ape_document` VALUES (102, '102', 1, '超级管理员', 'mac 安装 hp 2132打印机驱动', 37, '/upload/image/2021-02-01/601811206abae.png', 'article', '', 0, 0, 0, '', 1, 22, '', '', '', '', 0, '2021-02-01', 1612189987, 1612245400, 1, '');
INSERT INTO `ape_document` VALUES (103, '103', 1, '超级管理员', 'html 年-月-周 筛选视图', 31, '/upload/image/2021-02-02/601930231e83f.png', 'article', '', 0, 0, 0, '', 1, 71, '', '', '', '', 0, '2021-02-02', 1612263461, 1612263536, 1, '');
INSERT INTO `ape_document` VALUES (104, '', 1, '超级管理员', '测试新文章', 2, '/upload/image/20220410/611aab371fb34fc01b741a46ee1a360f.jpeg', 'article', '', 0, 0, 0, '', 1, 8, '新文章', '新文章', '', '', 99, '2022-04-10', 1649556547, 1649556547, 1, '');
INSERT INTO `ape_document` VALUES (107, '5f76511', 1, '超级管理员', '测试别名', 2, '/upload/image/20220411/9df48988fc52e476a4bc6e6c2e47987a.jpeg', 'article', '', 0, 0, 0, '', 1, 2, '', 'abstractabstractabstractabstractabstract', '', '', 99, '2022-04-11', 1649673280, 1649673280, 1, '');
INSERT INTO `ape_document` VALUES (108, 'ceshi', 1, '超级管理员', '测试', 2, '/upload/image/20220601/35bf7a1f725be872e1dbac735f86d57e.jpg', 'article', '', 0, 0, 0, '', 1, 0, '', '2131231', '', '', 99, '2022-06-01', 1654046163, 1654046163, 1, '');
INSERT INTO `ape_document` VALUES (109, '5b8ca4', 1, '超级管理员', '长安十二时辰11', 3, '/upload/image/20220601/0ae3eaf3371fdc892dc592a94236a8ba.jpg', 'article', '', 0, 0, 0, '', 1, 0, '', '222', '', '', 99, '2022-06-01', 1654047996, 1654047996, 1, '');

-- ----------------------------
-- Table structure for ape_document_article
-- ----------------------------
DROP TABLE IF EXISTS `ape_document_article`;
CREATE TABLE `ape_document_article`  (
  `id` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '文档ID',
  `content` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '文章内容',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '文档模型文章表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_document_article
-- ----------------------------
INSERT INTO `ape_document_article` VALUES (1, '<p>源码云博客</p>\r\n<p>&nbsp;</p>');
INSERT INTO `ape_document_article` VALUES (2, '<p>代码如下</p><p>支持 单一文件后缀遍历,支持所有文件遍历</p><pre><code class=\"lang-php\">&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* 递归获取文件列表\r\n&nbsp; &nbsp; &nbsp;* @param $dir &nbsp;文件地址\r\n&nbsp; &nbsp; &nbsp;* @param $ext &nbsp;允许文件类型 可指定查找 不设置则表示所有的\r\n&nbsp; &nbsp; &nbsp;* @return array\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; public &nbsp;function get_file_list($dir,$ext=\'\'){\r\n&nbsp; &nbsp; &nbsp; &nbsp; $file_list = array();\r\n&nbsp; &nbsp; &nbsp; &nbsp; $file_dir_list = array();\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; $dir_list = scandir($dir); //查找目录 &nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; foreach ($dir_list as $r)\r\n&nbsp; &nbsp; &nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ($r == \'.\' || $r == \'..\'){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $new_dir = $dir . \'/\' . $r;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (is_dir($new_dir)) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $file_dir = get_file_list($new_dir,$ext);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $file_dir_list = array_merge($file_dir_list, $file_dir);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else{\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ($ext) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $pathinfo=pathinfo($new_dir);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $ext2=$pathinfo[\'extension\'];\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if($ext2==$ext){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;$file_list[] = $new_dir;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else{\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $file_list[] = $new_dir;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; return array_merge($file_list, $file_dir_list);\r\n&nbsp; &nbsp; }\r\n<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (3, '<pre><code class=\"lang-php\"><!--?php\r\n \r\n// $ua = $_SERVER[\"HTTP_USER_AGENT\"];\r\n \r\n// $filename = \"中文 文件名.txt\";\r\n// $encoded_filename = urlencode($filename);\r\n// $encoded_filename = str_replace(\"+\", \"%20\", $encoded_filename);\r\n \r\n// header(\'Content-Type: application/octet-stream\');\r\n \r\n// if (preg_match(\"/MSIE/\", $ua)) {\r\n//     header(\'Content-Disposition: attachment; filename=\"\' . $encoded_filename . \'\"\');\r\n// } else if (preg_match(\"/Firefox/\", $ua)) {\r\n//     header(\'Content-Disposition: attachment; filename*=\"utf8\\\'\\\'\' . $filename . \'\"\');\r\n// } else {\r\n//     header(\'Content-Disposition: attachment; filename=\"\' . $filename . \'\"\');\r\n// }\r\n// \r\nvar_dump($_SERVER[\'HTTP_USER_AGENT\']);\r\n \r\n// // print \'ABC\';\r\n//      /**\r\n//      * 获取客户端浏览器类型\r\n//      * @param  string $glue 浏览器类型和版本号之间的连接符\r\n//      * @return string|array 传递连接符则连接浏览器类型和版本号返回字符串否则直接返回数组 false为未知浏览器类型\r\n//      */\r\n//     function get_client_browser($glue = null) {\r\n//         $browser = array();\r\n//         $agent = $_SERVER[\'HTTP_USER_AGENT\']; //获取客户端信息\r\n        \r\n//         /* 定义浏览器特性正则表达式 */\r\n//         $regex = array(\r\n//             \'ie\'      =--> \'/(MSIE) (\\d+\\.\\d)/\',\r\n// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'chrome\' &nbsp;=&gt; \'/(Chrome)\\/(\\d+\\.\\d+)/\',\r\n// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'firefox\' =&gt; \'/(Firefox)\\/(\\d+\\.\\d+)/\',\r\n// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'opera\' &nbsp; =&gt; \'/(Opera)\\/(\\d+\\.\\d+)/\',\r\n// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'safari\' &nbsp;=&gt; \'/Version\\/(\\d+\\.\\d+\\.\\d) (Safari)/\',\r\n// &nbsp; &nbsp; &nbsp; &nbsp; );\r\n// &nbsp; &nbsp; &nbsp; &nbsp; foreach($regex as $type =&gt; $reg) {\r\n// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; preg_match($reg, $agent, $data);\r\n// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!empty($data) &amp;&amp; is_array($data)){\r\n// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $browser = $type === \'safari\' ? array($data[2], $data[1]) : array($data[1], $data[2]);\r\n// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;\r\n// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n// &nbsp; &nbsp; &nbsp; &nbsp; }\r\n// &nbsp; &nbsp; &nbsp; &nbsp; return empty($browser) ? false : (is_null($glue) ? $browser : implode($glue, $browser));\r\n// &nbsp; &nbsp; }\r\n&nbsp;function getBrowser(){\r\n&nbsp; &nbsp; if (strpos($_SERVER[\'HTTP_USER_AGENT\'], \'Maxthon\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'Maxthon\';\r\n&nbsp; &nbsp; } elseif(strpos($_SERVER[\'HTTP_USER_AGENT\'], \'MSIE 12.0\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'IE12.0\';\r\n&nbsp; &nbsp; } elseif(strpos($_SERVER[\'HTTP_USER_AGENT\'], \'MSIE 11.0\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'IE11.0\';\r\n&nbsp; &nbsp; } elseif(strpos($_SERVER[\'HTTP_USER_AGENT\'], \'MSIE 10.0\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'IE10.0\';\r\n&nbsp; &nbsp; } elseif(strpos($_SERVER[\'HTTP_USER_AGENT\'], \'MSIE 9.0\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'IE9.0\';\r\n&nbsp; &nbsp; } elseif(strpos($_SERVER[\'HTTP_USER_AGENT\'], \'MSIE 8.0\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'IE8.0\';\r\n&nbsp; &nbsp; } elseif(strpos($_SERVER[\'HTTP_USER_AGENT\'], \'MSIE 7.0\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'IE7.0\';\r\n&nbsp; &nbsp; } elseif(strpos($_SERVER[\'HTTP_USER_AGENT\'], \'MSIE 6.0\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'IE6.0\';\r\n&nbsp; &nbsp; } elseif(strpos($_SERVER[\'HTTP_USER_AGENT\'], \'NetCaptor\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'NetCaptor\';\r\n&nbsp; &nbsp; } elseif(strpos($_SERVER[\'HTTP_USER_AGENT\'], \'Netscape\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'Netscape\';\r\n&nbsp; &nbsp; } elseif(strpos($_SERVER[\'HTTP_USER_AGENT\'], \'Lynx\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'Lynx\';\r\n&nbsp; &nbsp; } elseif(strpos($_SERVER[\'HTTP_USER_AGENT\'], \'Opera\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'Opera\';\r\n&nbsp; &nbsp; } elseif(strpos($_SERVER[\'HTTP_USER_AGENT\'], \'Chrome\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'Chrome\';\r\n&nbsp; &nbsp; } elseif(strpos($_SERVER[\'HTTP_USER_AGENT\'], \'Firefox\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'Firefox\';\r\n&nbsp; &nbsp; } elseif(strpos($_SERVER[\'HTTP_USER_AGENT\'], \'Safari\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'Safari\';\r\n&nbsp; &nbsp; } elseif(strpos($_SERVER[\'HTTP_USER_AGENT\'], \'iphone\') || strpos($_SERVER[\'HTTP_USER_AGENT\'], \'ipod\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'iphone\';\r\n&nbsp; &nbsp; } elseif(strpos($_SERVER[\'HTTP_USER_AGENT\'], \'ipad\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'iphone\';\r\n&nbsp; &nbsp; } elseif(strpos($_SERVER[\'HTTP_USER_AGENT\'], \'android\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'Android\';\r\n&nbsp; &nbsp; } else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $browser = \'other\';\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp; return $browser;\r\n}\r\n&nbsp; &nbsp;var_dump(getBrowser());\r\n?&gt;<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (4, '<p>代码如下</p><p><br></p><pre><code class=\"lang-php\">&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* 计算两个时间戳之?\r\n&nbsp; &nbsp; &nbsp;* @param $begin_time\r\n&nbsp; &nbsp; &nbsp;* @param $end_time\r\n&nbsp; &nbsp; &nbsp;* @return array\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; public function timeDiff( $begin_time, $end_time ){\r\n&nbsp; &nbsp; &nbsp; &nbsp; if ( $begin_time &lt; $end_time ) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $starttime = $begin_time;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $endtime = $end_time;\r\n&nbsp; &nbsp; &nbsp; &nbsp; } else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $starttime = $end_time;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $endtime = $begin_time;\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; $timediff = $endtime - $starttime;\r\n&nbsp; &nbsp; &nbsp; &nbsp; $days = intval( $timediff / 86400 );\r\n&nbsp; &nbsp; &nbsp; &nbsp; $remain = $timediff % 86400;\r\n&nbsp; &nbsp; &nbsp; &nbsp; $hours = intval( $remain / 3600 );\r\n&nbsp; &nbsp; &nbsp; &nbsp; $remain = $remain % 3600;\r\n&nbsp; &nbsp; &nbsp; &nbsp; $mins = intval( $remain / 60 );\r\n&nbsp; &nbsp; &nbsp; &nbsp; $secs = $remain % 60;\r\n&nbsp; &nbsp; &nbsp; &nbsp; $res = array( \"day\" =&gt; $days, \"hour\" =&gt; $hours, \"min\" =&gt; $mins, \"sec\" =&gt; $secs );\r\n&nbsp; &nbsp; &nbsp; &nbsp; return $res;\r\n&nbsp; &nbsp; }<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (5, '<p>原命令</p><pre><code class=\"lang-bash\">yum install rrdtool rrdtool-devel rrdtool-php rrdtool-perl<br></code></pre><p>例如:php5.6 则命令修改为</p><p><br></p><pre><code>yum install rrdtool rrdtool-devel rrdtool-php56w rrdtool-perl<br></code></pre><p><br></p><p>就是在 &nbsp;php后面加上版本号 &nbsp;</p>');
INSERT INTO `ape_document_article` VALUES (6, '<pre><code> \r\n\r\n$config[\'sess_driver\'] = \'files\';\r\n$config[\'sess_cookie_name\'] = \'ci_session\';\r\n$config[\'sess_expiration\'] = 7200;\r\n$config[\'sess_save_path\'] =&nbsp; APPPATH.\'system\\session\';\r\n$config[\'sess_match_ip\'] = FALSE;\r\n$config[\'sess_time_to_update\'] = 300;\r\n$config[\'sess_regenerate_destroy\'] = FALSE;\r\n\r\n</code></pre><p><br></p><p>COOKIE</p><p></p><p><code><p>$config[\'cookie_prefix\']&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = \'ipms_\';</p><p>$config[\'cookie_domain\']&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = \'\';</p><p>$config[\'cookie_path\']&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = \'/\';</p><p>$config[\'cookie_secure\']&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = FALSE;</p><p>$config[\'cookie_httponly\']&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = FALSE;</p></code></p>');
INSERT INTO `ape_document_article` VALUES (7, '<p>thinkphp 登录验证 或者其他跳转使用 &nbsp;iframe类框架 &nbsp;跳转出现 跳转内容出现在iframe框架内的问题解决</p><p>注意首页的坑</p><pre><code class=\"lang-php\">	protected function _initialize(){\r\n		//如果两个cookie有一个不存在,则返回false\r\n		if(!isset($_SESSION[\'username\'])) {\r\n			 &nbsp;//检测是否登录，若没登录则转向登录界面\r\n			 // header(\'Location:\'.U(\'Login/login\'));\r\n				// $this-&gt;redirect(\'Login/login\');\r\n			$url=U(\'Login/login\');\r\n			 echo (\'&lt;script&gt;top.location.href=\"\'.$url.\'\";&lt;/script&gt;\');\r\n			 exit;\r\n		}\r\n	}<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (8, '<p>源地址 &nbsp;<a href=\"http://www.win-ui.com/winadmin/index.html\">http://www.win-ui.com/winadmin/index.html</a><a href=\"http://www.win-ui.com/demo\"></a><br></p><p>基于Layui的前端模板，快速打造Win10风格Web前端<br></p><p>基于json &nbsp;设置</p><p>winui.js 桌面等控制&nbsp;</p><p>login.js &nbsp;登录控制 &nbsp;</p><p><img alt=\"QQ图片20171117112812.png\" src=\"/upload/image/2017-11-17/5a0e57aaf1373.png\" width=\"600\" height=\"296.875\"><br></p><p><br></p><p>源代码原作者已经开源</p><p>开源地址 :<a href=\"https://github.com/Leo0216/winadmin\">https://github.com/Leo0216/winadmin</a></p>');
INSERT INTO `ape_document_article` VALUES (9, '<pre><code class=\"lang-php\">&lt;?php\r\nclass redisSession{\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* 保存session的数据库表的信息\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $_options = array(\r\n&nbsp; &nbsp; &nbsp; &nbsp; \'handler\' =&gt; null, //数据库连接句柄\r\n&nbsp; &nbsp; &nbsp; &nbsp; \'host\' =&gt; null,\r\n&nbsp; &nbsp; &nbsp; &nbsp; \'port\' =&gt; null,\r\n&nbsp; &nbsp; &nbsp; &nbsp; \'lifeTime\' =&gt; null,\r\n&nbsp; &nbsp; &nbsp; &nbsp; \'prefix\' &nbsp; =&gt; \'PHPREDIS_SESSION:\'\r\n&nbsp; &nbsp; );\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* 构造函数\r\n&nbsp; &nbsp; &nbsp;* @param $options 设置信息数组\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; public function __construct($options=array()){\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(!class_exists(\"redis\", false)){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; die(\"必须安装redis扩展\");\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(!isset($options[\'lifeTime\']) || $options[\'lifeTime\'] &lt;= 0){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $options[\'lifeTime\'] = ini_get(\'session.gc_maxlifetime\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;_options = array_merge($this-&gt;_options, $options);\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* 开始使用该驱动的session\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; public function begin(){\r\n&nbsp; &nbsp; &nbsp; &nbsp; if($this-&gt;_options[\'host\'] === null ||\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;$this-&gt;_options[\'port\'] === null ||\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;$this-&gt;_options[\'lifeTime\'] === null\r\n&nbsp; &nbsp; &nbsp; &nbsp; ){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return false;\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; //设置session处理函数\r\n&nbsp; &nbsp; &nbsp; &nbsp; session_set_save_handler(\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; array($this, \'open\'),\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; array($this, \'close\'),\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; array($this, \'read\'),\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; array($this, \'write\'),\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; array($this, \'destory\'),\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; array($this, \'gc\')\r\n&nbsp; &nbsp; &nbsp; &nbsp; );\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* 自动开始回话或者session_start()开始回话后第一个调用的函数\r\n&nbsp; &nbsp; &nbsp;* 类似于构造函数的作用\r\n&nbsp; &nbsp; &nbsp;* @param $savePath 默认的保存路径\r\n&nbsp; &nbsp; &nbsp;* @param $sessionName 默认的参数名，PHPSESSID\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; public function open($savePath, $sessionName){\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(is_resource($this-&gt;_options[\'handler\'])) return true;\r\n&nbsp; &nbsp; &nbsp; &nbsp; //连接redis\r\n&nbsp; &nbsp; &nbsp; &nbsp; $redisHandle = new Redis();\r\n&nbsp; &nbsp; &nbsp; &nbsp; $redisHandle-&gt;connect($this-&gt;_options[\'host\'], $this-&gt;_options[\'port\']);\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(!$redisHandle){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return false;\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;_options[\'handler\'] = $redisHandle;\r\n// &nbsp; &nbsp; &nbsp; &nbsp;$this-&gt;gc(null);\r\n&nbsp; &nbsp; &nbsp; &nbsp; return true;\r\n\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* 类似于析构函数，在write之后调用或者session_write_close()函数之后调用\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; public function close(){\r\n&nbsp; &nbsp; &nbsp; &nbsp; return $this-&gt;_options[\'handler\']-&gt;close();\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* 读取session信息\r\n&nbsp; &nbsp; &nbsp;* @param $sessionId 通过该Id唯一确定对应的session数据\r\n&nbsp; &nbsp; &nbsp;* @return session信息/空串\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; public function read($sessionId){\r\n&nbsp; &nbsp; &nbsp; &nbsp; $sessionId = $this-&gt;_options[\'prefix\'].$sessionId;&nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; return $this-&gt;_options[\'handler\']-&gt;get($sessionId);\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* 写入或者修改session数据\r\n&nbsp; &nbsp; &nbsp;* @param $sessionId 要写入数据的session对应的id\r\n&nbsp; &nbsp; &nbsp;* @param $sessionData 要写入的数据，已经序列化过了\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; public function write($sessionId, $sessionData){\r\n&nbsp; &nbsp; &nbsp; &nbsp; $sessionId = $this-&gt;_options[\'prefix\'].$sessionId;&nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; return $this-&gt;_options[\'handler\']-&gt;setex($sessionId, $this-&gt;_options[\'lifeTime\'], $sessionData);\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* 主动销毁session会话\r\n&nbsp; &nbsp; &nbsp;* @param $sessionId 要销毁的会话的唯一id\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; public function destory($sessionId){\r\n&nbsp; &nbsp; &nbsp; &nbsp; $sessionId = $this-&gt;_options[\'prefix\'].$sessionId;&nbsp;\r\n// &nbsp; &nbsp; &nbsp; &nbsp;$array = $this-&gt;print_stack_trace();\r\n// &nbsp; &nbsp; &nbsp; &nbsp;log::write($array);\r\n&nbsp; &nbsp; &nbsp; &nbsp; return $this-&gt;_options[\'handler\']-&gt;delete($sessionId) &gt;= 1 ? true : false;\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* 清理绘画中的过期数据\r\n&nbsp; &nbsp; &nbsp;* @param 有效期\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; public function gc($lifeTime){\r\n&nbsp; &nbsp; &nbsp; &nbsp; //获取所有sessionid，让过期的释放掉\r\n&nbsp; &nbsp; &nbsp; &nbsp; //$this-&gt;_options[\'handler\']-&gt;keys(\"*\");\r\n&nbsp; &nbsp; &nbsp; &nbsp; return true;\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp; //打印堆栈信息\r\n&nbsp; &nbsp; public function print_stack_trace()\r\n&nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $array = debug_backtrace ();\r\n&nbsp; &nbsp; &nbsp; &nbsp; //截取用户信息\r\n&nbsp; &nbsp; &nbsp; &nbsp; $var = $this-&gt;read(session_id());\r\n&nbsp; &nbsp; &nbsp; &nbsp; $s = strpos($var, \"index_dk_user|\");\r\n&nbsp; &nbsp; &nbsp; &nbsp; $e = strpos($var, \"}authId|\");\r\n&nbsp; &nbsp; &nbsp; &nbsp; $user = substr($var,$s+14,$e-13);\r\n&nbsp; &nbsp; &nbsp; &nbsp; $user = unserialize($user);\r\n&nbsp; &nbsp; &nbsp; &nbsp; //print_r($array);//信息很齐全\r\n&nbsp; &nbsp; &nbsp; &nbsp; unset ( $array [0] );\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(!empty($user)){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $traceInfo = $user[\'id\'].\'|\'.$user[\'user_name\'].\'|\'.$user[\'user_phone\'].\'|\'.$user[\'presona_name\'].\'++++++++++++++++\\n\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; }else{\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $traceInfo = \'++++++++++++++++\\n\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; $time = date ( \"y-m-d H:i:m\" );\r\n&nbsp; &nbsp; &nbsp; &nbsp; foreach ( $array as $t ) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $traceInfo .= \'[\' . $time . \'] \' . $t [\'file\'] . \' (\' . $t [\'line\'] . \') \';\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $traceInfo .= $t [\'class\'] . $t [\'type\'] . $t [\'function\'] . \'(\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $traceInfo .= implode ( \', \', $t [\'args\'] );\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $traceInfo .= \")\\n\";\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; $traceInfo .= \'++++++++++++++++\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; return $traceInfo;\r\n&nbsp; &nbsp; }\r\n\r\n}\r\n\r\n\r\n//入口处调用\r\n$handler = new redisSession(array(\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'host\' =&gt; \"127.0.0.1\",\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'port\' =&gt; \"6379\"\r\n&nbsp; &nbsp; &nbsp; &nbsp; ));\r\n$handler-&gt;begin();<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (10, '<p>在登录时 &nbsp;首页尤其需要注意</p><pre><code class=\"lang-php\">&nbsp; &nbsp; public function __construct() { &nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; parent::__construct ();\r\n&nbsp; &nbsp; &nbsp; &nbsp; error_reporting(E_ALL^E_NOTICE);\r\n&nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;load-&gt;helper(array( &nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'form\', &nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'url\' &nbsp;&nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; )); &nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (!$this-&gt;session-&gt;userdata(\'username\')) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $url=(site_url(\'login/login\'));//获取登录地址  避免首页登录出现问题\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;echo(\'<script>top.location.href=\"\'.$url.\'\";</script>\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; 	 die();\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; } &nbsp;<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (11, '<p><a href=\"http://www.php.cn/\">首页</a>&gt;&nbsp;<a href=\"http://www.php.cn/php-weizijiaocheng.html\">php教程</a><font>&gt; 正文</font></p><p>php 调用ffmpeg获取视频信息的方法</p><p>作者： default|标签：<a href=\"http://www.php.cn/keywords-ffmpeg.html\" target=\"_blank\">ffmpeg</a>&nbsp;<a href=\"http://www.php.cn/keywords-PHP.html\" target=\"_blank\">PHP</a>&nbsp;<a href=\"http://www.php.cn/keywords-%E4%BF%A1%E6%81%AF.html\" target=\"_blank\">信息</a>|2017-7-12 10:40</p><p></p><p>FFmpeg是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序。采用LGPL或GPL许可证。它提供了录制、转换以及流化音视频的完整解决方案。它包含了非常先进的音频/视频编解码库libavcodec，为了保证高可移植性和编解码质量，libavcodec里很多code都是从头开发的。</p><p>本文将介绍使用php调用ffmpeg获取视频信息，调用ffmpeg首先需要服务器上安装了ffmpeg，安装方法很简单，可自行搜索。</p><p><strong>代码如下：</strong></p><pre><code class=\"lang-php\">&lt;?php\r\n// 定义ffmpeg路径及命令常量\r\ndefine(\'FFMPEG_CMD\',&nbsp;\'/usr/local/bin/ffmpeg -i \"%s\" 2&gt;&amp;1\');\r\n&nbsp;\r\n/**\r\n&nbsp;* 使用ffmpeg获取视频信息\r\n&nbsp;* @param String $file 视频文件\r\n&nbsp;* @return Array\r\n&nbsp;*/\r\nfunction&nbsp;getVideoInfo($file){\r\n&nbsp;ob_start();\r\n&nbsp;passthru(sprintf(FFMPEG_CMD,&nbsp;$file));\r\n&nbsp;$video_info&nbsp;= ob_get_contents();\r\n&nbsp;ob_end_clean();\r\n&nbsp;\r\n&nbsp;// 使用输出缓冲，获取ffmpeg所有输出内容\r\n&nbsp;$ret&nbsp;=&nbsp;array();\r\n&nbsp;\r\n&nbsp;// Duration: 00:33:42.64, start: 0.000000, bitrate: 152 kb/s\r\n&nbsp;if&nbsp;(preg_match(\"/Duration: (.*?), start: (.*?), bitrate: (\\d*) kb\\/s/\",&nbsp;$video_info,&nbsp;$matches)){\r\n&nbsp;&nbsp;$ret[\'duration\'] =&nbsp;$matches[1];&nbsp;// 视频长度\r\n&nbsp;&nbsp;$duration&nbsp;=&nbsp;explode(\':\',&nbsp;$matches[1]);\r\n&nbsp;&nbsp;$ret[\'seconds\'] =&nbsp;$duration[0]*3600 +&nbsp;$duration[1]*60 +&nbsp;$duration[2];&nbsp;// 转为秒数\r\n&nbsp;&nbsp;$ret[\'start\'] =&nbsp;$matches[2];&nbsp;// 开始时间\r\n&nbsp;&nbsp;$ret[\'bitrate\'] =&nbsp;$matches[3];&nbsp;// bitrate 码率 单位kb\r\n&nbsp;}\r\n&nbsp;\r\n&nbsp;// Stream #0:1: Video: rv20 (RV20 / 0x30325652), yuv420p, 352x288, 117 kb/s, 15 fps, 15 tbr, 1k tbn, 1k tbc\r\n&nbsp;if(preg_match(\"/Video: (.*?), (.*?), (.*?)[,\\s]/\",&nbsp;$video_info,&nbsp;$matches)){\r\n&nbsp;&nbsp;$ret[\'vcodec\'] =&nbsp;$matches[1];&nbsp;&nbsp;// 编码格式\r\n&nbsp;&nbsp;$ret[\'vformat\'] =&nbsp;$matches[2];&nbsp;// 视频格式\r\n&nbsp;&nbsp;$ret[\'resolution\'] =&nbsp;$matches[3];&nbsp;// 分辨率\r\n&nbsp;&nbsp;list($width,&nbsp;$height) =&nbsp;explode(\'x\',&nbsp;$matches[3]);\r\n&nbsp;&nbsp;$ret[\'width\'] =&nbsp;$width;\r\n&nbsp;&nbsp;$ret[\'height\'] =&nbsp;$height;\r\n&nbsp;}\r\n&nbsp;\r\n&nbsp;// Stream #0:0: Audio: cook (cook / 0x6B6F6F63), 22050 Hz, stereo, fltp, 32 kb/s\r\n&nbsp;if(preg_match(\"/Audio: (.*), (\\d*) Hz/\",&nbsp;$video_info,&nbsp;$matches)){\r\n&nbsp;&nbsp;$ret[\'acodec\'] =&nbsp;$matches[1];&nbsp;&nbsp;// 音频编码\r\n&nbsp;&nbsp;$ret[\'asamplerate\'] =&nbsp;$matches[2];&nbsp;// 音频采样频率\r\n&nbsp;}\r\n&nbsp;\r\n&nbsp;if(isset($ret[\'seconds\']) &amp;&amp; isset($ret[\'start\'])){\r\n&nbsp;&nbsp;$ret[\'play_time\'] =&nbsp;$ret[\'seconds\'] +&nbsp;$ret[\'start\'];&nbsp;// 实际播放时间\r\n&nbsp;}\r\n&nbsp;\r\n&nbsp;$ret[\'size\'] =&nbsp;filesize($file);&nbsp;// 视频文件大小\r\n&nbsp;$video_info&nbsp;= iconv(\'gbk\',\'utf8\',&nbsp;$video_info);\r\n&nbsp;return&nbsp;array($ret,&nbsp;$video_info);\r\n&nbsp;\r\n}\r\n&nbsp;\r\n// 输出视频信息\r\n$video_info&nbsp;= getVideoInfo(\'myvideo.avi\');\r\nprint_r($video_info[0]);\r\n?&gt;<br></code></pre><p><br></p><p>输出</p><pre><code class=\"lang-php\">Array\r\n(\r\n&nbsp;[duration] =&gt; 00:33:42.64\r\n&nbsp;[seconds] =&gt; 2022.64\r\n&nbsp;[start] =&gt; 0.000000\r\n&nbsp;[bitrate] =&gt; 152\r\n&nbsp;[vcodec] =&gt; rv20 (RV20 / 0x30325652)\r\n&nbsp;[vformat] =&gt; yuv420p\r\n&nbsp;[resolution] =&gt; 352x288\r\n&nbsp;[width] =&gt; 352\r\n&nbsp;[height] =&gt; 288\r\n&nbsp;[acodec] =&gt; cook (cook / 0x6B6F6F63)\r\n&nbsp;[asamplerate] =&gt; 22050\r\n&nbsp;[play_time] =&gt; 2022.64\r\n&nbsp;[size] =&gt; 38630744\r\n)<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (12, '<p>如果你是&nbsp;<code>Debian/Ubuntu</code>&nbsp;的话请在终端输入：</p><pre><code>apt-get install nginx\r\n</code></pre><p>CentOS</p><pre><code>yum install nginx\r\n</code></pre><p>修改配置：<br>然后, 找到你的 Nginx 配置文件添加虚拟机</p><pre><code>server    {\r\n        listen          80;\r\n        server_name     abc.com;#你的网站\r\n        location / {\r\n                proxy_set_header Accept-Encoding \"\";\r\n                proxy_pass             http://efg.com/;#你要反代的网站\r\n                proxy_redirect          off;\r\n                proxy_set_header        X-Real-IP       $remote_addr;\r\n                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\r\n                sub_filter  \'abc.com\' \'efg.com\';#替换其中所有的原网站链接\r\n                sub_filter_types *;\r\n                sub_filter_once off;\r\n\r\n        }\r\n    }\r\n</code></pre><p>重启服务：</p><pre><code> service nginx restart\r\n</code></pre><p>显示 OK 成功即可</p>');
INSERT INTO `ape_document_article` VALUES (13, '<p><span style=\"font-size: 18px;\">抽取音频命令<br>ffmpeg -i 3.mp4 -vn -y -acodec copy 3.aac<br>ffmpeg -i 3.mp4 -vn -y -acodec copy 3.m4a<br><br><br>&nbsp;提取视频 （Extract Video）<br>ffmpeg -i Life.of.Pi.has.subtitles.mkv -vcodec copy –an &nbsp;videoNoAudioSubtitle.mp4<br><br><br><br><br>音视频合成命令<br>ffmpeg -i video2.avi -i audio.mp3 -vcodec copy -acodec copy output.avi<br><br><br>查看音视频文件信息命令<br>ffmpeg -i 3.mp4<br>ffmpeg -i 3.aac<br>ffmpeg -i 3.m4a</span><br></p>');
INSERT INTO `ape_document_article` VALUES (14, '<p>在服务端&nbsp; 执行命令 </p><p><span style=\"color: rgb(51, 51, 51); font-size: 9.5pt;\"><font></font></span></p><p><code><span style=\"color: rgb(51, 51, 51); font-size: 9.5pt;\"><font>vi /etc/exports </font></span></code></p><p>修改配置文件为</p><p><span style=\"font-size: 18px;\"><font color=\"#555555\">/mnt/cephfs 192.168.192.0/8(rw,<strong>no_root_squash,</strong>async)</font><br></span></p><p><span style=\"font-size: 18px;\">既: 加入 <strong><font color=\"#555555\">no_root_squash</font></strong></span></p><p><br></p><p><br></p><p><span style=\"font-size: 18px;\"><strong>详细描述:</strong><br></span></p><p><span style=\"font-size: 18px;\">在客户机通过</span></p><p><span style=\"font-size: 18px;\">mount -o rw -t nfs 192.168.192.204:/mnt/cephfs /mnt/nfs</span></p><p><span style=\"font-size: 18px;\">命令将网络文件mount到本地。执行完成之后，目录是可以访问了，但无法写入。</span></p><p><span style=\"color: rgb(85, 85, 85); font-size: 18px;\">原因：<br>发现exports目录权限中，参数no_root_squash的其作用是：登入 NFS 主机使用分享目录的使用者，如果是root 的话，那么对于export目录来说，它就具有root的权限！<br>默认情况使用的是相反参数root_squash：在登入 NFS 主机export目录的使用者如果当root时，那么这个使用者的权限将被压缩成为匿名使用者，通常他的 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;UID 与 GID 都会变成 nobody 那个身份。<br>因为客户端是使用root登录的，自然权限被压缩为nobody了，难怪无法写入。将配置信息改为：<br>/mnt/cephfs 192.168.192.0/8(rw,no_root_squash)<br>据说有点不安全，但问题是解决了。&nbsp;</span></p>');
INSERT INTO `ape_document_article` VALUES (15, '<p>碰到 input但是内容部想让修改</p><p>类似这样<img alt=\"QQ图片20171225182708.png\" src=\"/upload/image/2017-12-25/5a40d2ec0d3ec.png\" width=\"426\" height=\"61\"><br></p><p><font color=\"#ca4440\"><span style=\"font-size: 13px;\">修改input成&nbsp;&lt;label class=\"layui-input\"&gt;xxx&lt;/label&gt; &nbsp;这样即可</span></font></p>');
INSERT INTO `ape_document_article` VALUES (16, '<p><img src=\"https://github.com/Tinywan/PHP_Experience/raw/master/Public/Common/static/images/ffmpeg.png\" alt=\"image\"></p><h2>FFmpeg 常用命令DEMO</h2><h3><img alt=\":feet:\" height=\"20\" width=\"20\" src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f43e.png\">常用</h3><ul><li>为了设定输出视频码率为64kbit/s：(码率转换很慢，尤其高码率到低码率，如：2312kbps=&gt;1024kbps)<br><code>ffmpeg -i input.avi -b:v 64k -bufsize 64k output.avi</code></li><li>为了切换帧率到24fps：<br><code>ffmpeg -i input.avi -r 24 output.avi</code></li><li>将输入的1920x1080缩小到960x540输出<br><code>ffmpeg -i ./test.mkv -vf scale=960:540 960_540.mp4</code></li></ul><h3><img alt=\":bouquet:\" height=\"20\" width=\"20\" src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f490.png\">视频</h3><ul><li>FFmpeg concat 协议：<br><code>ffmpeg -i \"concat:02.mp4|03.mp4\" -c copy concat_output.mp4</code></li><li>视频合并：<ul><li>方法一：FFmpeg concat 协议（测试通过）<br><code>ffmpeg -i \"concat:input1.mpg|input2.mpg|input3.mpg\" -c copy output.mpg</code></li><li>方法一：FFmpeg concat 协议<br><code>ffmpeg -i \"concat:02.mp4|03.mp4\" -c copy concat_output.mp4</code></li></ul></li></ul><h3><img alt=\":cherry_blossom:\" height=\"20\" width=\"20\" src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f338.png\">&nbsp;音频</h3><ul><li>FFmpeg concat 协议&nbsp;<img alt=\":satellite:\" height=\"20\" width=\"20\" src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f4e1.png\">&nbsp;：<br><code>ffmpeg -i \"concat:02.mp4|03.mp4\" -c copy concat_output.mp4</code></li></ul><h3><img alt=\":tulip:\" height=\"20\" width=\"20\" src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f337.png\">复合流</h3><ul><li><p>第一路流的视频：<br><code>ffmpeg -i ./0001.mp4 -i ./0002.mp4 -map 0:0 -c copy -y ./0001_video.mp4</code></p></li><li><p>第一路流的音频：<br><code>ffmpeg -i ./0001.mp4 -i ./0002.mp4 -map 0:1 -c copy -y ./0001_video.mp4</code></p></li><li><p>第二路流的视频：<br><code>ffmpeg -i ./0001.mp4 -i ./0002.mp4 -map 1:0 -c copy -y ./0001_video.mp4</code></p></li><li><p>第二路流的音频：<br><code>ffmpeg -i ./0001.mp4 -i ./0002.mp4 -map 1:1 -c copy -y ./0001_video.mp4</code></p></li><li><p>第一路、第二路流的混合：<br><code>ffmpeg -i ./0001.mp4 -i ./0002.mp4 -map 0:0 -map 0:1 -map 1:0 -map 1:1 -c copy -y ./0001_0002_audio_video.mp4</code></p></li></ul><h3><img alt=\":four_leaf_clover:\" height=\"20\" width=\"20\" src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f340.png\">摄像头</h3><ul><li>直接抓取笔记本摄像头视频和音频到本地存储<br><code>ffmpeg -f dshow -i video=\"USB Camera\":audio=\"麦克风 (Conexant SmartAudio HD)\" -vcodec libx264 -acodec copy -preset:v ultrafast ./tinywan_computer_out.mpg</code></li></ul><h3><img alt=\":rose:\" height=\"20\" width=\"20\" src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f339.png\">图片流</h3><ul><li>strfime选项允许你导出按时间/日期信息命名的文件 \"%Y-%m-%d_%H-%M-%S\" 模板<br><code>ffmpeg -i rtmp://live.hkstv.hk.lxdns.com/live/hks -f image2 -strftime 1 \"%Y-%m-%d_%H-%M-%S.jpg\"</code></li><li>每隔20秒截一张图<br><code>ffmpeg -i input.flv -f image2 -vf fps=fps=1/20 out%d.png</code></li><li>strfime选项允许你导出按时间/日期信息命名的文件 \"%Y-%m-%d_%H-%M-%S\" 模板<br><code>ffmpeg -i rtmp://live.hkstv.hk.lxdns.com/live/hks -f image2 -strftime 1 \"%Y-%m-%d_%H-%M-%S.jpg\"</code></li><li>Gif图片转换MP4格式视频<br><code>ffmpeg -i ./tinywanGif.gif -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" -f mp4 ./TinywanGifvideo.mp4</code></li><li>视频添加图片水印<ul><li>&nbsp;单个图片，测试成功<br><code>ffmpeg -i out.mpg -vf \"movie=amailogo.png [watermark]; [in][watermark] overlay=10:10\" tinywanVideologo.mp4</code></li></ul></li></ul><h3><img alt=\":sunflower:\" height=\"20\" width=\"20\" src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f33b.png\">RTSP</h3><ul><li>发送流到RTSP服务器<br><code>ffmpeg -rtsp_transport tcp -i \"rtsp://192.168.18.240:554/onvif/live/1\" -vcodec copy -f rtsp -muxdelay 0.1 rtsp://server/live.sdp</code><br><code>ffmpeg -re -i /input.avi -f rtsp -muxdelay 0.1 rtsp://12.34.56.78:5545/abc</code><ul><li>注意&nbsp;：<code>如果是本地视频，-re一定要加，代表按照帧率发送，否则ffmpeg会一股脑地按最高的效率发送数据</code></li><li>建议&nbsp;：<code>如果拉取的是一个摄像头的话，-re不要加</code></li><li>参数&nbsp;<code>-re</code>：按时间戳读取文件(另外一种是直接读取,文件被迅速读完)</li><li>参数&nbsp;<code>-vcodec copy</code>：要加，否则ffmpeg会重新编码输入流格式</li><li>参数&nbsp;<code>-rtsp_transport</code>：传输协议，默认UDP</li></ul></li></ul><h3><img alt=\":hibiscus:\" height=\"20\" width=\"20\" src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f33a.png\">网络流和本地流切换</h3><ul><li>使用FFmpeg转录网络直播流<ul><li><code>ffmpeg -i <a href=\"http://60.199.188.151/HLS/WG_ETTV-N/index.m3u8\" rel=\"nofollow\">http://60.199.188.151/HLS/WG_ETTV-N/index.m3u8</a> d:\\cap.mp4</code>：CPU消耗很大</li><li><code>ffmpeg -i <a href=\"http://60.199.188.151/HLS/WG_ETTV-N/index.m3u8\" rel=\"nofollow\">http://60.199.188.151/HLS/WG_ETTV-N/index.m3u8</a> -c:v copy -c:a copy -bsf:a aac_adtstoasc d:\\cap.mp4</code>：CPU消耗很小</li></ul></li><li>把文件当做直播推送至服务器 (RTMP + FLV)<br><code>ffmpeg - re -i demo.mp4 -c copy - f flv rtmp://w.gslb.letv/live/streamid</code></li><li>将直播的媒体保存到本地<br><code>ffmpeg -i rtmp://r.glsb.letv/live/streamid -c copy streamfile.flv</code></li><li>将一个直播流，视频改用h264压缩，音频改用faac压缩，送至另一个直播服务器<br><code>ffmpeg -i rtmp://r.glsb.letv/live/streamidA -c:a libfaac -ar 44100 -ab 48k -c:v libx264 -vpre slow -vpre baseline -f flv rtmp://w.glsb.letv/live/streamb</code></li><li>将一个高清流，复制为几个不同视频清晰度的流重新发布，其中音频不变<br><code>ffmpeg -re -i rtmp://server/live/high_FMLE_stream -acodec copy -vcodec x264lib -s 640×360 -b 500k -vpre medium -vpre baseline rtmp://server/live/baseline_500k -acodec copy -vcodec x264lib -s 480×272 -b 300k -vpre medium -vpre baseline rtmp://server/live/baseline_300k -acodec copy -vcodec x264lib -s 320×200 -b 150k -vpre medium -vpre baseline rtmp://server/live/baseline_150k -acodec libfaac -vn -ab 48k rtmp://server/live/audio_only_AAC_48k</code></li><li>将直播的媒体保存到本地<br><code>ffmpeg -i rtmp://r.glsb.letv/live/streamid -c copy streamfile.flv</code></li></ul>');
INSERT INTO `ape_document_article` VALUES (17, '<p>composer安装出现 &nbsp;ext 目录无法找到以及 php_bz2.dll 拓展无法找到解决办法</p><p>找到 php.ini 该版本对应的 &nbsp;</p><p>查找 &nbsp;extension_dir</p><p>将&nbsp;extension_dir= 后面的值改成windows的路径补全即类似这种 &nbsp;</p><p>extension_dir =\"E:\\xampp\\php\\ext\" &nbsp;即可解决</p>');
INSERT INTO `ape_document_article` VALUES (18, '<p>该界面是用来测试Apache服务器是否工作正常。</p><p>禁用该测试页面的方法如下：</p><p>1.打开终端，登陆到CentOS上</p><p>2.在终端中输入以下命令</p><pre><code><span class=\"hljs-built_in\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-built_in\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-built_in\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-built_in\" style=\"margin: 0px; padding: 0px;\">cd</span></span></span></span> /etc/httpd/conf.d\r\n</code></pre><p>3.继续输入命令,显示当前目录下的文件</p><pre><code><span class=\"hljs-attribute\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-attribute\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-attribute\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-attribute\" style=\"margin: 0px; padding: 0px;\">ls</span></span></span></span>\r\n</code></pre><p>4.找到名为welcome.conf的文件，并用vim打开</p><pre><code><span class=\"hljs-selector-tag\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-selector-tag\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-selector-tag\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-selector-tag\" style=\"margin: 0px; padding: 0px;\">vim</span></span></span></span> <span class=\"hljs-selector-tag\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-selector-tag\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-selector-tag\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-selector-tag\" style=\"margin: 0px; padding: 0px;\">welcome</span></span></span></span><span class=\"hljs-selector-class\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-selector-class\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-selector-class\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-selector-class\" style=\"margin: 0px; padding: 0px;\">.conf</span></span></span></span>\r\n</code></pre><p>welcome.conf的内容如下</p><pre><code><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"># </span></span></span></span>\r\n<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"># This configuration file enables the default \"Welcome\"</span></span></span></span>\r\n<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"># page if there is no default index page present for</span></span></span></span>\r\n<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"># the root URL.  To disable the Welcome page, comment</span></span></span></span>\r\n<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"># out all the lines below.</span></span></span></span>\r\n<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\">#</span></span></span></span>\r\n&lt;LocationMatch <span class=\"hljs-string\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-string\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-string\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-string\" style=\"margin: 0px; padding: 0px;\">\"^/+$\"</span></span></span></span>&gt;\r\n    Options -Indexes\r\n    ErrorDocument <span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">403</span></span></span></span> /<span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px;\">error</span></span></span></span>/noindex.html\r\n&lt;/LocationMatch&gt;\r\n</code></pre><p>文件中的说明性内容说明了该文件的主要作用，以及关闭该作用的方法。其实该文件也是一个普通的配置文件，并被包含进了Apache服务器httpd.conf主文件中，只要用\"#\"将welcome.conf的内容注释掉即可，如下:</p><pre><code><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"># </span></span></span></span>\r\n<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"># This configuration file enables the default \"Welcome\"</span></span></span></span>\r\n<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"># page if there is no default index page present for</span></span></span></span>\r\n<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"># the root URL.  To disable the Welcome page, comment</span></span></span></span>\r\n<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"># out all the lines below.</span></span></span></span>\r\n<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\">#</span></span></span></span>\r\n<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\">#&lt;LocationMatch \"^/+$\"&gt;</span></span></span></span>\r\n<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\">#    Options -Indexes</span></span></span></span>\r\n<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\">#    ErrorDocument 403 /error/noindex.html</span></span></span></span>\r\n<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px;\">#&lt;/LocationMatch&gt;</span></span></span></span>\r\n</code></pre><p>5.重新启动Apache</p><pre><code><span class=\"hljs-attribute\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-attribute\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-attribute\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-attribute\" style=\"margin: 0px; padding: 0px;\">service</span></span></span></span> httpd restart\r\n</code></pre><p><strong>注</strong>：查看noindex.html为存放路劲</p><pre><code><span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px;\">cd</span></span></span></span> /var/www/<span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px;\">error</span></span></span></span>/\r\nls</code></pre>');
INSERT INTO `ape_document_article` VALUES (19, '<p><span style=\"color: rgb(51, 51, 51); font-size: 14px;\">编辑一下CentOS的: /etc/ssh/sshd_config&nbsp;</span></p><pre><code>#TCPKeepAlive&nbsp;yes&nbsp;&nbsp;&nbsp;&nbsp;\r\n#ClientAliveInterval&nbsp;0&nbsp;&nbsp;&nbsp;</code></pre><p><span style=\"color: rgb(51, 51, 51); font-size: 14px;\">去掉前面的#号，并将0改为3&nbsp;</span></p><p><span style=\"color: rgb(51, 51, 51); font-size: 14px;\">然后重启service sshd restart&nbsp;</span></p>');
INSERT INTO `ape_document_article` VALUES (20, '<p>js作用域</p><p>先在函数体内部查找,查找不到向上查找,向上找不到再向上知道 全局windows为止</p><p><img alt=\"无标题.jpg\" src=\"/upload/image/2018-01-17/5a5ebe0e97ccc.jpg\" width=\"320\" height=\"162.5\"><br></p><p>var 作用声明变量 不加var 单纯赋值 &nbsp;如果这个变量没有声明则向上查找</p>');
INSERT INTO `ape_document_article` VALUES (21, '<p>视频转码</p><pre><code class=\"lang-bash\">ffmpeg -i test.mp4 -c:v libx264 -strict -2 1.mp4</code></pre><p>视频转为一个低质量的预览文件</p><pre><code class=\"lang-bash\">ffmpeg -i test.mp4 -c:v libx264 -vf \'scale=480:trunc(ow/a/2)*2\' -crf 30 -profile:v baseline -strict -2 1.mp4<br></code></pre><p>音频转MP4,单声音<br></p><pre><code>ffmpeg -i test.mp4 -vn -strict -2 1.mp4</code></pre><p>以及常见命令</p><h1><a href=\"http://www.cnblogs.com/dwdxdy/p/3240167.html\">【FFmpeg】FFmpeg常用基本命令</a></h1><p style=\"margin-left: auto;\"><strong>1.分离视频音频流</strong></p><pre><code>ffmpeg -i input_file -vcodec copy -an output_file_video　　<span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">//</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">分离视频流</span>\r\nffmpeg -i input_file -acodec copy -vn output_file_audio　　<span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">//</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">分离音频流</span></code></pre><p style=\"margin-left: auto;\"><strong>2.视频解复用</strong></p><pre><code>ffmpeg –i test.mp4 –vcodec copy –an –f m4v test.<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">264</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 0); line-height: 1.5 !important;\">\r\nffmpeg –i test.avi –vcodec copy –an –f m4v test.</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">264</span></code></pre><p style=\"margin-left: auto;\"><strong>3.视频转码</strong></p><pre><code>ffmpeg –i test.mp4 –vcodec h264 –s <span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">352</span>*<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">278</span> –an –f m4v test.<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">264</span>              <span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">//</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">转码为码流原始文件</span>\r\nffmpeg –i test.mp4 –vcodec h264 –bf <span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">0</span> –g <span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">25</span> –s <span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">352</span>*<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">278</span> –an –f m4v test.<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">264</span>  <span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">//</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">转码为码流原始文件</span>\r\nffmpeg –i test.avi -vcodec mpeg4 –vtag xvid –qsame test_xvid.avi            <span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">//</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">转码为封装文件\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">//</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">-bf B帧数目控制，-g 关键帧间隔控制，-s 分辨率控制</span></code></pre><p style=\"margin-left: auto;\"><strong>4.视频封装</strong></p><pre><code>ffmpeg –i video_file –i audio_file –vcodec copy –acodec copy output_file</code></pre><p style=\"margin-left: auto;\"><strong>5.视频剪切</strong></p><pre><code>ffmpeg –i test.avi –r <span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">1</span> –f image2 image-%3d.jpeg        <span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">//</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">提取图片</span>\r\nffmpeg -ss <span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">0</span>:<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">1</span>:<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">30</span> -t <span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">0</span>:<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">0</span>:<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">20</span> -i input.avi -vcodec copy -acodec copy output.avi    <span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">//</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">剪切视频\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">//</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">-r 提取图像的频率，-ss 开始时间，-t 持续时间</span></code></pre><p style=\"margin-left: auto;\"><strong>6.视频录制</strong></p><pre><code>ffmpeg –i rtsp:<span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">//</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\">192.168.3.205:5555/test –vcodec copy out.avi</span></code></pre><p style=\"margin-left: auto;\"><strong>7.YUV序列播放</strong></p><pre><code>ffplay -f rawvideo -video_size 192<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">0x1080</span> input.yuv</code></pre><p style=\"margin-left: auto;\"><strong>8.YUV序列转AVI</strong></p><pre><code>ffmpeg –s w*h –pix_fmt yuv420p –i input.yuv –vcodec mpeg4 output.avi</code></pre><p style=\"margin-left: auto;\"><strong>9.视频切片</strong></p><p style=\"margin-left: auto;\"><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">主要把视频源切成若干个.ts格式的视频片段然后生成一个.m3u8的切片文件索引提供给html5的video做hls直播源</span><br></p><pre><code>ffmpeg -i 视频源地址 -strict -2 -c:v libx264 -c:a aac -f hls m3u8文件输出地址</code></pre><p style=\"margin-left: auto;\"><strong>常用参数说明：</strong></p><p style=\"margin-left: auto;\"><strong>主要参数：</strong><br>-i 设定输入流<br>-f 设定输出格式<br>-ss 开始时间<br><strong>视频参数：</strong><br>-b 设定视频流量，默认为200Kbit/s<br>-r 设定帧速率，默认为25<br>-s 设定画面的宽与高<br>-aspect 设定画面的比例<br>-vn 不处理视频<br>-vcodec 设定视频编解码器，未设定时则使用与输入流相同的编解码器<br><strong>音频参数：</strong><br>-ar 设定采样率<br>-ac 设定声音的Channel数<br>-acodec 设定声音编解码器，未设定时则使用与输入流相同的编解码器<br>-an 不处理音频</p><p><br></p><p>其他命令</p><p><br></p><p style=\"margin-left: auto;\">如此强大的FFmpeg，能够实现视频采集、视频格式转化、视频截图、视频添加水印、视频切片、视频录制、视频推流、更改音视频参数功能等。通过终端命令如何实现这些功能，Richy在本文做一记录，以备之后查阅。</p><p style=\"margin-left: auto;\">注意：下面一一列举的命令，未归类整理，命令参数供参考。</p><p style=\"margin-left: auto;\">如果参数有误，大家可对照文章－<a href=\"https://www.jianshu.com/p/eda9c444adbe\" target=\"_blank\">FFmpeg参数命令</a>，进行修改。</p><p style=\"margin-left: auto;\">第一组</p><p style=\"margin-left: auto;\"><strong>1.分离视频音频流</strong></p><p style=\"margin-left: auto;\">ffmpeg -i input_file -vcodec copy -an output_file_video　　//分离视频流ffmpeg -i input_file -acodec copy -vn output_file_audio　　//分离音频流</p><p style=\"margin-left: auto;\"><strong>2.视频解复用</strong></p><p style=\"margin-left: auto;\">ffmpeg –i test.mp4 –vcodec copy –an –f m4v test.264</p><p style=\"margin-left: auto;\">ffmpeg –i test.avi –vcodec copy –an –f m4v test.264</p><p style=\"margin-left: auto;\"><strong>3.视频转码</strong></p><p style=\"margin-left: auto;\">ffmpeg –i test.mp4 –vcodec h264 –s 352*278 –an –f m4v test.264</p><p style=\"margin-left: auto;\">//转码为码流原始文件</p><p style=\"margin-left: auto;\">ffmpeg –i test.mp4 –vcodec h264 –bf 0 –g 25 –s 352*278 –an –f m4v test.264 //转码为码流原始文件</p><p style=\"margin-left: auto;\">ffmpeg –i test.avi -vcodec mpeg4 –vtag xvid –qsame test_xvid.avi //转码为封装文件</p><p style=\"margin-left: auto;\"><strong>说明：</strong>-bf B帧数目控制，-g 关键帧间隔控制，-s 分辨率控制</p><p style=\"margin-left: auto;\"><strong>4.视频封装</strong></p><p style=\"margin-left: auto;\">ffmpeg –i video_file –i audio_file –vcodec copy –acodec copy output_file</p><p style=\"margin-left: auto;\"><strong>5.视频剪切</strong></p><p style=\"margin-left: auto;\">ffmpeg –i test.avi –r 1 –f image2 image-%3d.jpeg //提取图片</p><p style=\"margin-left: auto;\">ffmpeg -ss 0:1:30 -t 0:0:20 -i input.avi -vcodec copy -acodec copy output.avi //剪切视频//-r 提取图像的频率，-ss 开始时间，-t 持续时间</p><p style=\"margin-left: auto;\"><strong>6.视频录制</strong></p><p style=\"margin-left: auto;\">ffmpeg –i rtsp://192.168.3.205:5555/test –vcodec copy out.avi</p><p style=\"margin-left: auto;\"><strong>7、利用ffmpeg视频切片</strong></p><p style=\"margin-left: auto;\">主要把视频源切成若干个.ts格式的视频片段然后生成一个.m3u8的切片文件索引提供给html5的video做hls直播源</p><p style=\"margin-left: auto;\">命令如下：</p><p style=\"margin-left: auto;\">ffmpeg -i 视频源地址 -strict -2 -c:v libx264 -c:a aac -f hls m3u8文件输出地址</p><p style=\"margin-left: auto;\"><strong>8、ffmpeg缩放视频</strong></p><p style=\"margin-left: auto;\">假设原始视频尺寸是 1080p（即 1920×1080 px，16:9），使用下面命令可以缩小到 480p：</p><p style=\"margin-left: auto;\">命令如下：</p><p style=\"margin-left: auto;\">ffmpeg -i 视频源地址 -vf scale=853:480 -acodec aac -vcodec h264 视频输出地址（如：out.mp4）</p><p style=\"margin-left: auto;\">各个参数的含义：-i a.mov 指定待处理视频的文件名-vf scale=853:480 vf 参数用于指定视频滤镜，其中 scale 表示缩放，后面的数字表示缩放至 853×480 px，其中的 853px 是计算而得，因为原始视频的宽高比为 16:9，所以为了让目标视频的高度为 480px，则宽度 = 480 x 9 / 16 = 853-acodec aac 指定音频使用 aac 编码。注：因为 ffmpeg 的内置 aac 编码目前（写这篇文章时）还是试验阶段，故会提示添加参数 “-strict -2” 才能继续，尽管添加即可。又或者使用外部的 libfaac（需要重新编译 ffmpeg）。-vcodec h264 指定视频使用 h264 编码。注：目前手机一般视频拍摄的格式（封装格式、文件格式）为 mov 或者 mp4，这两者的音频编码都是 aac，视频都是 h264。out.mp4 指定输出文件名上面的参数 scale=853:480 当中的宽度和高度实际应用场景中通常只需指定一个，比如指定高度为 480 或者 720，至于宽度则可以传入 “-1” 表示由原始视频的宽高比自动计算而得。即参数可以写为：scale=-1:480，当然也可以 scale=480:-1</p><p style=\"margin-left: auto;\"><strong>9、ffmpeg裁剪</strong></p><p style=\"margin-left: auto;\">有时可能只需要视频的正中一块，而两头的内容不需要，这时可以对视频进行裁剪（crop），比如有一个竖向的视频 1080 x 1920，如果指向保留中间 1080×1080 部分命令如下：ffmpeg -i 视频源地址 -strict -2 -vf crop=1080:1080:0:420 视频输出地址（如：out.mp4）</p><p style=\"margin-left: auto;\">其中的 crop=1080:1080:0:420 才裁剪参数，具体含义是 crop=width:height:x:y，其中 width 和 height 表示裁剪后的尺寸，x:y 表示裁剪区域的左上角坐标。比如当前这个示例，我们只需要保留竖向视频的中间部分，所以 x 不用偏移，故传入0，而 y 则需要向下偏移：(1920 – 1080) / 2 = 420</p><p style=\"margin-left: auto;\"><strong>10. 转视频格式</strong></p><p style=\"margin-left: auto;\">ffmpeng -i source.mp4 -c:v libx264 -crf 24 destination.flv</p><p style=\"margin-left: auto;\">其中 -crf 很重要，是控制转码后视频的质量，质量越高，文件也就越大。</p><p style=\"margin-left: auto;\">此值的范围是 0 到 51：0 表示高清无损；23 是默认值（如果没有指定此参数）；51 虽然文件最小，但效果是最差的。</p><p style=\"margin-left: auto;\">值越小，质量越高，但文件也越大，建议的值范围是 18 到 28。而值 18 是视觉上看起来无损或接近无损的，当然不代表是数据（技术上）的转码无损。</p><p style=\"margin-left: auto;\">第二组</p><p style=\"margin-left: auto;\"><strong>1.ffmpeg 把文件当做直播推送至服务器 (RTMP + FLV)</strong></p><p style=\"margin-left: auto;\">ffmpeg - re -i demo.mp4 -c copy - f flv rtmp://w.gslb.letv/live/streamid</p><p style=\"margin-left: auto;\"><strong>2.将直播的媒体保存到本地</strong></p><p style=\"margin-left: auto;\">ffmpeg -i rtmp://r.glsb.letv/live/streamid -c copy streamfile.flv</p><p style=\"margin-left: auto;\"><strong>3.将一个直播流，视频改用h264压缩，音频改用faac压缩，送至另一个直播服务器</strong></p><p style=\"margin-left: auto;\">ffmpeg -i rtmp://r.glsb.letv/live/streamidA -c:a libfaac -ar 44100 -ab 48k -c:v libx264 -vpre slow -vpre baseline -f flv rtmp://w.glsb.letv/live/streamb</p><p style=\"margin-left: auto;\"><strong>4.提取视频中的音频,并保存为mp3 然后输出</strong></p><p style=\"margin-left: auto;\">ffmpeg -i input.avi -b:a 128k output.mp3</p><p style=\"margin-left: auto;\">第三组</p><p style=\"margin-left: auto;\"><strong>1.获取视频的信息</strong></p><p style=\"margin-left: auto;\">ffmpeg -i video.avi</p><p style=\"margin-left: auto;\"><strong>2.将图片序列合成视频</strong></p><p style=\"margin-left: auto;\">ffmpeg -f image2 -i image%d.jpg video.mpg</p><p style=\"margin-left: auto;\">上面的命令会把当前目录下的图片（名字如：image1.jpg. image2.jpg. 等...）合并成video.mpg</p><p style=\"margin-left: auto;\"><strong>3.将视频分解成图片序列</strong></p><p style=\"margin-left: auto;\">ffmpeg -i video.mpg image%d.jpg</p><p style=\"margin-left: auto;\">上面的命令会生成image1.jpg. image2.jpg. ...</p><p style=\"margin-left: auto;\">支持的图片格式有：PGM. PPM. PAM. PGMYUV. JPEG. GIF. PNG. TIFF. SGI</p><p style=\"margin-left: auto;\"><strong>4.为视频重新编码以适合在iPod/iPhone上播放</strong></p><p style=\"margin-left: auto;\">ffmpeg -i source_video.avi input -acodec aac -ab 128kb -vcodec mpeg4 -b 1200kb -mbd 2 -flags +4mv+trell -aic 2 -cmp 2 -subcmp 2 -s 320x180 -title X final_video.mp4</p><p style=\"margin-left: auto;\"><strong>5.为视频重新编码以适合在PSP上播放</strong></p><p style=\"margin-left: auto;\">ffmpeg -i source_video.avi -b 300 -s 320x240 -vcodec xvid -ab 32 -ar 24000 -acodec aac final_video.mp4</p><p style=\"margin-left: auto;\"><strong>6.从视频抽出声音.并存为Mp3</strong></p><p style=\"margin-left: auto;\">ffmpeg -i source_video.avi -vn -ar 44100 -ac 2 -ab 192 -f mp3 sound.mp3</p><p style=\"margin-left: auto;\"><strong>7.将wav文件转成Mp3</strong></p><p style=\"margin-left: auto;\">ffmpeg -i son_origine.avi -vn -ar 44100 -ac 2 -ab 192 -f mp3 son_final.mp3</p><p style=\"margin-left: auto;\">8.将.avi视频转成.mpg</p><p style=\"margin-left: auto;\">ffmpeg -i video_origine.avi video_finale.mpg</p><p style=\"margin-left: auto;\">9.将.mpg转成.avi</p><p style=\"margin-left: auto;\">ffmpeg -i video_origine.mpg video_finale.avi</p><p style=\"margin-left: auto;\">10.将.avi转成gif动画（未压缩）</p><p style=\"margin-left: auto;\">ffmpeg -i video_origine.avi gif_anime.gif</p><p style=\"margin-left: auto;\">11.合成视频和音频</p><p style=\"margin-left: auto;\">ffmpeg -i son.wav -i video_origine.avi video_finale.mpg</p><p style=\"margin-left: auto;\">12.将.avi转成.flv</p><p style=\"margin-left: auto;\">ffmpeg -i video_origine.avi -ab 56 -ar 44100 -b 200 -r 15 -s 320x240 -f flv video_finale.flv</p><p style=\"margin-left: auto;\">13.将.avi转成dv</p><p style=\"margin-left: auto;\">ffmpeg -i video_origine.avi -s pal -r pal -aspect 4:3 -ar 48000 -ac 2 video_finale.dv</p><p style=\"margin-left: auto;\">或者：</p><p style=\"margin-left: auto;\">ffmpeg -i video_origine.avi -target pal-dv video_finale.dv</p><p style=\"margin-left: auto;\">14.将.avi压缩成divx</p><p style=\"margin-left: auto;\">ffmpeg -i video_origine.avi -s 320x240 -vcodec msmpeg4v2 video_finale.avi</p><p style=\"margin-left: auto;\">15.将Ogg Theora压缩成Mpeg dvd</p><p style=\"margin-left: auto;\">ffmpeg -i film_sortie_cinelerra.ogm -s 720x576 -vcodec mpeg2video -acodec mp3 film_terminate.mpg</p><p style=\"margin-left: auto;\">16.将.avi压缩成SVCD mpeg2</p><p style=\"margin-left: auto;\">NTSC格式：</p><p style=\"margin-left: auto;\">ffmpeg -i video_origine.avi -target ntsc-svcd video_finale.mpg</p><p style=\"margin-left: auto;\">PAL格式：</p><p style=\"margin-left: auto;\">ffmpeg -i video_origine.avi -target pal-dvcd video_finale.mpg</p><p style=\"margin-left: auto;\">17.将.avi压缩成VCD mpeg2</p><p style=\"margin-left: auto;\">NTSC格式：</p><p style=\"margin-left: auto;\">ffmpeg -i video_origine.avi -target ntsc-vcd video_finale.mpg</p><p style=\"margin-left: auto;\">PAL格式：</p><p style=\"margin-left: auto;\">ffmpeg -i video_origine.avi -target pal-vcd video_finale.mpg</p><p style=\"margin-left: auto;\">18.多通道编码</p><p style=\"margin-left: auto;\">ffmpeg -i fichierentree -pass 2 -passlogfile ffmpeg2pass fichiersortie-2</p><p style=\"margin-left: auto;\"><strong>19.从flv提取mp3</strong></p><p style=\"margin-left: auto;\">ffmpeg -i source.flv -ab 128k dest.mp3</p><p style=\"margin-left: auto;\">第四组</p><p style=\"margin-left: auto;\"><strong>1、将文件当做直播送至live</strong></p><p style=\"margin-left: auto;\">ffmpeg -re -i localFile.mp4 -c copy -f flv rtmp://server/live/streamName</p><p style=\"margin-left: auto;\"><strong>2、将直播媒体保存至本地文件</strong></p><p style=\"margin-left: auto;\">ffmpeg -i rtmp://server/live/streamName -c copy dump.flv</p><p style=\"margin-left: auto;\"><strong>3、将其中一个直播流，视频改用h264压缩，音频不变，送至另外一个直播服务流</strong></p><p style=\"margin-left: auto;\">ffmpeg -i rtmp://server/live/originalStream -c:a copy -c:v libx264 -vpre slow -f flv rtmp://server/live/h264Stream</p><p style=\"margin-left: auto;\"><strong>4、将其中一个直播流，视频改用h264压缩，音频改用faac压缩，送至另外一个直播服务流</strong></p><p style=\"margin-left: auto;\">ffmpeg -i rtmp://server/live/originalStream -c:a libfaac -ar 44100 -ab 48k -c:v libx264 -vpre slow -vpre baseline -f flv rtmp://server/live/h264Stream</p><p style=\"margin-left: auto;\"><strong>5、将其中一个直播流，视频不变，音频改用faac压缩，送至另外一个直播服务流</strong></p><p style=\"margin-left: auto;\">ffmpeg -i rtmp://server/live/originalStream -acodec libfaac -ar 44100 -ab 48k -vcodec copy -f flv rtmp://server/live/h264_AAC_Stream</p><p style=\"margin-left: auto;\"><strong>6、将一个高清流，复制为几个不同视频清晰度的流重新发布，其中音频不变</strong></p><p style=\"margin-left: auto;\">ffmpeg -re -i rtmp://server/live/high_FMLE_stream -acodec copy -vcodec x264lib -s 640×360 -b 500k -vpre medium -vpre baseline rtmp://server/live/baseline_500k -acodec copy -vcodec x264lib -s 480×272 -b 300k -vpre medium -vpre baseline rtmp://server/live/baseline_300k -acodec copy -vcodec x264lib -s 320×200 -b 150k -vpre medium -vpre baseline rtmp://server/live/baseline_150k -acodec libfaac -vn -ab 48k rtmp://server/live/audio_only_AAC_48k</p><p style=\"margin-left: auto;\"><strong>7、功能一样，只是采用-x264opts选项</strong></p><p style=\"margin-left: auto;\">ffmpeg -re -i rtmp://server/live/high_FMLE_stream -c:a copy -c:v x264lib -s 640×360 -x264opts bitrate=500:profile=baseline:preset=slow rtmp://server/live/baseline_500k -c:a copy -c:v x264lib -s 480×272 -x264opts bitrate=300:profile=baseline:preset=slow rtmp://server/live/baseline_300k -c:a copy -c:v x264lib -s 320×200 -x264opts bitrate=150:profile=baseline:preset=slow rtmp://server/live/baseline_150k -c:a libfaac -vn -b:a 48k rtmp://server/live/audio_only_AAC_48k</p><p style=\"margin-left: auto;\"><strong>8、将当前摄像头及音频通过DSSHOW采集，视频h264、音频faac压缩后发布</strong></p><p style=\"margin-left: auto;\">ffmpeg -r 25 -f dshow -s 640×480 -i video=”video source name”:audio=”audio source name” -vcodec libx264 -b 600k -vpre slow -acodec libfaac -ab 128k -f flv rtmp://server/application/stream_name</p><p style=\"margin-left: auto;\"><strong>9、将一个JPG图片经过h264压缩循环输出为mp4视频</strong></p><p style=\"margin-left: auto;\">ffmpeg.exe -i INPUT.jpg -an -vcodec libx264 -coder 1 -flags +loop -cmp +chroma -subq 10 -qcomp 0.6 -qmin 10 -qmax 51 -qdiff 4 -flags2 +dct8x8 -trellis 2 -partitions +parti8x8+parti4x4 -crf 24 -threads 0 -r 25 -g 25 -y OUTPUT.mp4</p><p style=\"margin-left: auto;\"><strong>10、将普通流视频改用h264压缩，音频不变，送至高清流服务(新版本FMS live=1)</strong></p><p style=\"margin-left: auto;\">ffmpeg -i rtmp://server/live/originalStream -c:a copy -c:v libx264 -vpre slow -f flv “rtmp://server/live/h264Stream live=1〃</p>');
INSERT INTO `ape_document_article` VALUES (22, '<h3 style=\"text-align: left;\"><span style=\"font-size: 18px; color: rgb(51, 51, 51);\">php支持断点续传的文件下载类</span></h3><p>下载类</p><pre><code class=\"lang-php\">&lt;?php\r\n/** php下载类,支持断点续传\r\n*&nbsp;&nbsp; Date:&nbsp;&nbsp; 2013-06-30\r\n*&nbsp;&nbsp; Author: fdipzone\r\n*&nbsp;&nbsp; Ver:&nbsp;&nbsp;&nbsp; 1.0\r\n*\r\n*&nbsp;&nbsp; Func:\r\n*&nbsp;&nbsp; download: 下载文件\r\n*&nbsp;&nbsp; setSpeed: 设置下载速度\r\n*&nbsp;&nbsp; getRange: 获取header中Range\r\n*/\r\n\r\nclass FileDownload{ // class start\r\n\r\n&nbsp;&nbsp;&nbsp; private $_speed = 512;&nbsp;&nbsp; // 下载速度\r\n\r\n\r\n&nbsp;&nbsp;&nbsp; /** 下载\r\n&nbsp;&nbsp;&nbsp; * @param String&nbsp; $file&nbsp;&nbsp; 要下载的文件路径\r\n&nbsp;&nbsp;&nbsp; * @param String&nbsp; $name&nbsp;&nbsp; 文件名称,为空则与下载的文件名称一样\r\n&nbsp;&nbsp;&nbsp; * @param boolean $reload 是否开启断点续传\r\n&nbsp;&nbsp;&nbsp; */\r\n&nbsp;&nbsp;&nbsp; public function download($file, $name=\'\', $reload=false){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(file_exists($file)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if($name==\'\'){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $name = basename($file);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $fp = fopen($file, \'rb\');\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $file_size = filesize($file);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ranges = $this-&gt;getRange($file_size);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; header(\'cache-control:public\');\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; header(\'content-type:application/octet-stream\');\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; header(\'content-disposition:attachment; filename=\'.$name);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if($reload &amp;&amp; $ranges!=null){ // 使用续传\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; header(\'HTTP/1.1 206 Partial Content\');\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; header(\'Accept-Ranges:bytes\');\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 剩余长度\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; header(sprintf(\'content-length:%u\',$ranges[\'end\']-$ranges[\'start\']));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // range信息\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; header(sprintf(\'content-range:bytes %s-%s/%s\', $ranges[\'start\'], $ranges[\'end\'], $file_size));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // fp指针跳到断点位置\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fseek($fp, sprintf(\'%u\', $ranges[\'start\']));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; header(\'HTTP/1.1 200 OK\');\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; header(\'content-length:\'.$file_size);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(!feof($fp)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo fread($fp, round($this-&gt;_speed*1024,0));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ob_flush();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //sleep(1); // 用于测试,减慢下载速度\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ($fp!=null) &amp;&amp; fclose($fp);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return \'\';\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n&nbsp;&nbsp;&nbsp; }\r\n\r\n\r\n&nbsp;&nbsp;&nbsp; /** 设置下载速度\r\n&nbsp;&nbsp;&nbsp; * @param int $speed\r\n&nbsp;&nbsp;&nbsp; */\r\n&nbsp;&nbsp;&nbsp; public function setSpeed($speed){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(is_numeric($speed) &amp;&amp; $speed&gt;16 &amp;&amp; $speed&lt;4096){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;_speed = $speed;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n&nbsp;&nbsp;&nbsp; }\r\n\r\n\r\n&nbsp;&nbsp;&nbsp; /** 获取header range信息\r\n&nbsp;&nbsp;&nbsp; * @param&nbsp; int&nbsp;&nbsp; $file_size 文件大小\r\n&nbsp;&nbsp;&nbsp; * @return Array\r\n&nbsp;&nbsp;&nbsp; */\r\n&nbsp;&nbsp;&nbsp; private function getRange($file_size){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(isset($_SERVER[\'HTTP_RANGE\']) &amp;&amp; !empty($_SERVER[\'HTTP_RANGE\'])){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $range = $_SERVER[\'HTTP_RANGE\'];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $range = preg_replace(\'/[\\s|,].*/\', \'\', $range);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $range = explode(\'-\', substr($range, 6));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(count($range)&lt;2){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $range[1] = $file_size;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $range = array_combine(array(\'start\',\'end\'), $range);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(empty($range[\'start\'])){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $range[\'start\'] = 0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(empty($range[\'end\'])){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $range[\'end\'] = $file_size;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return $range;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return null;\r\n&nbsp;&nbsp;&nbsp; }\r\n\r\n} // class end\r\n\r\n?&gt;<br></code></pre><p><br></p><p>调用方法</p><pre><code class=\"lang-php\">&lt;?php\r\n\r\nrequire(\'FileDownload.class.php\');\r\n$file = \'book.zip\';\r\n$name = time().\'.zip\';\r\n$obj = new FileDownload();\r\n$flag = $obj-&gt;download($file, $name);\r\n//$flag = $obj-&gt;download($file, $name, true); // 断点续传\r\n\r\nif(!$flag){\r\n&nbsp;&nbsp;&nbsp; echo \'file not exists\';\r\n}\r\n\r\n?&gt;<br></code></pre><p><strong style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(255, 0, 0);\"><br></span></strong></p><p><strong style=\"color: rgb(85, 85, 85);\"><span style=\"color: rgb(255, 0, 0);\">断点续传测试方法:</span></strong></p><p><span style=\"color: rgb(85, 85, 85); font-size: 14px;\">使用linux&nbsp;</span><span style=\"font-size: 14px; color: rgb(255, 0, 0);\">wget</span><span style=\"color: rgb(85, 85, 85); font-size: 14px;\">命令去测试下载, wget -c -O file <a href=\"http://xxx\" rel=\"nofollow\">http://xxx</a></span></p>');
INSERT INTO `ape_document_article` VALUES (23, '<p>php 支持断点续传的文件下载方法<br></p><pre><code><!--?php<br-->/** php下载类,支持断点续传<br>*   Date:   2013-06-30<br>*   Author: fdipzone<br>*   Ver:    1.0<br>*<br>*   Func:<br>*   download: 下载文件<br>*   setSpeed: 设置下载速度<br>*   getRange: 获取header中Range<br>*/<br><br>    /** 下载<br>    * @param String  $file   要下载的文件路径<br>    * @param String  $name   文件名称,为空则与下载的文件名称一样<br>    * @param int 	 $speed	下载速度<br>    * @param boolean $reload 是否开启断点续传<br>    */<br>    function download($file, $name=\'\',$speed=512, $reload=false){<br>        if(file_exists($file)){<br>            if($name==\'\'){<br>                $name = basename($file);<br>            }<br>			if(is_numeric($speed) &amp;&amp; $speed&gt;16 &amp;&amp; $speed&lt;4096){<br>				$_speed = $speed;<br>			}else{<br>				$_speed=512;<br>			}<br>            $fp = fopen($file, \'rb\');<br>            $file_size = filesize($file);<br>            $ranges =getRange($file_size);<br><br>            header(\'cache-control:public\');<br>            header(\'content-type:application/octet-stream\');<br>            header(\'content-disposition:attachment; filename=\'.$name);<br><br>            if($reload &amp;&amp; $ranges!=null){ // 使用续传<br>                header(\'HTTP/1.1 206 Partial Content\');<br>                header(\'Accept-Ranges:bytes\');<br>                <br>                // 剩余长度<br>                header(sprintf(\'content-length:%u\',$ranges[\'end\']-$ranges[\'start\']));<br>                <br>                // range信息<br>                header(sprintf(\'content-range:bytes %s-%s/%s\', $ranges[\'start\'], $ranges[\'end\'], $file_size));<br>                <br>                // fp指针跳到断点位置<br>                fseek($fp, sprintf(\'%u\', $ranges[\'start\']));<br>            }else{<br>                header(\'HTTP/1.1 200 OK\');<br>                header(\'content-length:\'.$file_size);<br>            }<br><br>            while(!feof($fp)){<br>                echo fread($fp, round($_speed*1024,0));<br>                ob_flush();<br>                //sleep(1); // 用于测试,减慢下载速度<br>            }<br><br>            ($fp!=null) &amp;&amp; fclose($fp);<br><br>        }else{<br>            return \'\';<br>        }<br>    }<br><br><br>    /** 获取header range信息<br>    * @param  int   $file_size 文件大小<br>    * @return Array<br>    */<br>    function getRange($file_size){<br>        if(isset($_SERVER[\'HTTP_RANGE\']) &amp;&amp; !empty($_SERVER[\'HTTP_RANGE\'])){<br>            $range = $_SERVER[\'HTTP_RANGE\'];<br>            $range = preg_replace(\'/[\\s|,].*/\', \'\', $range);<br>            $range = explode(\'-\', substr($range, 6));<br>            if(count($range)&lt;2){<br>                $range[1] = $file_size;<br>            }<br>            $range = array_combine(array(\'start\',\'end\'), $range);<br>            if(empty($range[\'start\'])){<br>                $range[\'start\'] = 0;<br>            }<br>            if(empty($range[\'end\'])){<br>                $range[\'end\'] = $file_size;<br>            }<br>            return $range;<br>        }<br>        return null;<br>    }<br>   download(\'visualparadigmshisi.rar\');<br><br></code></pre><p><br></p><p>thinkphp使用或类使用方法</p><pre><code><!--?php<br-->    /** 下载<br>    * @param String  $file   要下载的文件路径<br>    * @param String  $name   文件名称,为空则与下载的文件名称一样<br>    * @param int 	 $speed	下载速度<br>    * @param boolean $reload 是否开启断点续传<br>    */<br>    public function download($file, $name=\'\',$speed=512, $reload=false){<br>        if(file_exists($file)){<br>            if($name==\'\'){<br>                $name = basename($file);<br>            }<br>			if(is_numeric($speed) &amp;&amp; $speed&gt;16 &amp;&amp; $speed&lt;4096){<br>				$_speed = $speed;<br>			}else{<br>				$_speed=512;<br>			}<br>            $fp = fopen($file, \'rb\');<br>            $file_size = filesize($file);<br>            $ranges =$this-&gt;getRange($file_size);<br><br>            header(\'cache-control:public\');<br>            header(\'content-type:application/octet-stream\');<br>            header(\'content-disposition:attachment; filename=\'.$name);<br><br>            if($reload &amp;&amp; $ranges!=null){ // 使用续传<br>                header(\'HTTP/1.1 206 Partial Content\');<br>                header(\'Accept-Ranges:bytes\');<br>                <br>                // 剩余长度<br>                header(sprintf(\'content-length:%u\',$ranges[\'end\']-$ranges[\'start\']));<br>                <br>                // range信息<br>                header(sprintf(\'content-range:bytes %s-%s/%s\', $ranges[\'start\'], $ranges[\'end\'], $file_size));<br>                <br>                // fp指针跳到断点位置<br>                fseek($fp, sprintf(\'%u\', $ranges[\'start\']));<br>            }else{<br>                header(\'HTTP/1.1 200 OK\');<br>                header(\'content-length:\'.$file_size);<br>            }<br><br>            while(!feof($fp)){<br>                echo fread($fp, round($_speed*1024,0));<br>                ob_flush();<br>                //sleep(1); // 用于测试,减慢下载速度<br>            }<br><br>            ($fp!=null) &amp;&amp; fclose($fp);<br><br>        }else{<br>            return \'\';<br>        }<br>    }<br><br><br>    /** 获取header range信息<br>    * @param  int   $file_size 文件大小<br>    * @return Array<br>    */<br>    public  function getRange($file_size){<br>        if(isset($_SERVER[\'HTTP_RANGE\']) &amp;&amp; !empty($_SERVER[\'HTTP_RANGE\'])){<br>            $range = $_SERVER[\'HTTP_RANGE\'];<br>            $range = preg_replace(\'/[\\s|,].*/\', \'\', $range);<br>            $range = explode(\'-\', substr($range, 6));<br>            if(count($range)&lt;2){<br>                $range[1] = $file_size;<br>            }<br>            $range = array_combine(array(\'start\',\'end\'), $range);<br>            if(empty($range[\'start\'])){<br>                $range[\'start\'] = 0;<br>            }<br>            if(empty($range[\'end\'])){<br>                $range[\'end\'] = $file_size;<br>            }<br>            return $range;<br>        }<br>        return null;<br>    }<br>   $this-&gt;download(\'visualparadigmshisi.rar\');<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (24, '<p>新创建一个项目初始化</p><p>项目创建在网页完成</p><p>初始化</p><p>echo \"# mzui\" &gt;&gt; README.md</p><p>git init</p><p>git add README.md</p><p>git commit -m \"first commit\"</p><p>git remote add origin <a href=\"https://github.com/1099438829/mzui.git\">https://github.com/1099438829/mzui.git</a></p><p>git push -u origin master</p><p>更新文件命令</p><p>git remote add origin <a href=\"https://github.com/1099438829/mzui.git\">https://github.com/1099438829/mzui.git</a></p><p>git push -u origin master</p><p><br></p><h2>1 常用</h2><pre><code>$ git remote add origin git@github.<span class=\"hljs-symbol\" style=\"box-sizing: inherit; color: rgb(0, 134, 179);\">com:</span>yeszao/dofiler.git         <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 配置远程git版本库</span>\r\n$ git pull origin master                                          <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 下载代码及快速合并 </span>\r\n$ git push origin master                                          <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 上传代码及快速合并</span>\r\n$ git fetch origin                                                <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 从远程库获取代码</span>\r\n\r\n$ git branch                                                      <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 显示所有分支</span>\r\n$&nbsp;git checkout master                                             <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 切换到master分支</span>\r\n$ git checkout -b dev                                             <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 创建并切换到dev分支</span>\r\n$&nbsp;git commit -m <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\"first version\"</span>                                   <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 提交</span>\r\n\r\n$&nbsp;git status                                                      <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 查看状态</span>\r\n$ git log                                                         <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 查看提交历史</span>\r\n\r\n$ git config core.ignorecase <span class=\"hljs-literal\" style=\"box-sizing: inherit; color: rgb(0, 134, 179);\">false</span>                                <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 设置大小写敏感</span>\r\n$ git config --global user.name <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\"YOUR NAME\"</span>                       <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 设置用户名</span>\r\n$ git config --global user.email <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\"YOUR EMAIL ADDRESS\"</span>             <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 设置邮箱</span></code></pre><h2>2 别名Alias</h2><pre><code>$ git config --<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">global</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">alias</span>.br=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\"branch\"</span>                 <span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 创建/查看本地分支</span>\r\n$ git config --<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">global</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">alias</span>.co=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\"checkout\"</span>               <span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 切换分支</span>\r\n$ git config --<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">global</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">alias</span>.cb=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\"checkout -b\"</span>            <span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 创建并切换到新分支</span>\r\n$ git config --<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">global</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">alias</span>.cm=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\"commit -m\"</span>              <span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 提交</span>\r\n$ git config --<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">global</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">alias</span>.st=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\"status\"</span>                 <span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 查看状态</span>\r\n$ git config --<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">global</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">alias</span>.pullm=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\"pull origin master\"</span>  <span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 拉取分支</span>\r\n$ git config --<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">global</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">alias</span>.pushm=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\"push origin master\"</span>  <span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 提交分支</span>\r\n$ git config --<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">global</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">alias</span>.log=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\"git log --oneline --graph --decorate --color=always\"</span> <span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 单行、分颜色显示记录</span>\r\n$ git config --<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">global</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">alias</span>.logg=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\"git log --graph --all --format=format:\'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)— %an%C(reset)%C(bold yellow)%d%C(reset)\' --abbrev-commit --date=relative\"</span> <span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 复杂显示</span></code></pre><h2>3 创建版本库</h2><pre><code>$ git clone &lt;url&gt;                 <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 克隆远程版本库</span>\r\n$ git init                        <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 初始化本地版本库</span></code></pre><h2>4 修改和提交</h2><pre><code>$ git status                      <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 查看状态</span>\r\n$ git diff                        <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 查看变更内容</span>\r\n$ git add .&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;      <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 跟踪所有改动过的文件</span>\r\n$ git add &lt;file&gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 跟踪指定的文件</span>\r\n$ git mv &lt;old&gt; &lt;new&gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 文件改名</span>\r\n$ git rm &lt;file&gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 删除文件</span>\r\n$ git rm --cached &lt;file&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 停止跟踪文件但不删除</span>\r\n$ git commit -m “commit message”  <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 提交所有更新过的文件</span>\r\n$ git commit --amend &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 修改最后一次提交</span></code></pre><h2>5 查看提交历史</h2><pre><code>$ git log &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 查看提交历史</span>\r\n$ git log -p &lt;file&gt; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 查看指定文件的提交历史</span>\r\n$ git blame &lt;file&gt; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 以列表方式查看指定文件的提交历史</span></code></pre><h2>6 撤消</h2><pre><code>$ git reset --hard HEAD &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;  <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 撤消工作目录中所有未提交文件的修改内容</span>\r\n$ git reset --hard &lt;version&gt;      <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 撤销到某个特定版本</span>\r\n$ git checkout HEAD &lt;file&gt; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 撤消指定的未提交文件的修改内容</span>\r\n$ git checkout -- &lt;file&gt;          <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 同上一个命令</span>\r\n$ git revert &lt;commit&gt; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 撤消指定的提交</span></code></pre><h2>7 分支与标签</h2><pre><code>$ git branch&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 显示所有本地分支</span>\r\n$ git checkout &lt;branch/tag&gt; &nbsp; &nbsp;&nbsp;&nbsp; <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 切换到指定分支或标签</span>\r\n$ git branch &lt;new-branch&gt; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 创建新分支</span>\r\n$ git branch -d &lt;branch&gt; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 删除本地分支</span>\r\n$ git tag &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 列出所有本地标签</span>\r\n$ git tag &lt;tagname&gt; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;  <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 基于最新提交创建标签</span>\r\n$ git tag -a <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\"v1.0\"</span> -m <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\"一些说明\"</span>  <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># -a指定标签名称，-m指定标签说明</span>\r\n$ git tag -d &lt;tagname&gt; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 删除标签</span>\r\n\r\n$ git checkout dev                <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 合并特定的commit到dev分支上</span>\r\n$ git cherry-pick <span class=\"hljs-number\" style=\"box-sizing: inherit;\">62</span>ecb3</code></pre><h2>8 合并与衍合</h2><pre><code>$ git merge &lt;branch&gt; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 合并指定分支到当前分支</span>\r\n$ git merge --abort               <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 取消当前合并，重建合并前状态</span>\r\n$ git merge dev -Xtheirs          <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 以合并dev分支到当前分支，有冲突则以dev分支为准</span>\r\n$ git rebase &lt;branch&gt; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 衍合指定分支到当前分支</span></code></pre><h2>9 远程操作</h2><pre><code>$ git remote -v &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;  <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 查看远程版本库信息</span>\r\n$ git remote show &lt;remote&gt;&nbsp; &nbsp;&nbsp;    <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 查看指定远程版本库信息</span>\r\n$ git remote add &lt;remote&gt; &lt;url&gt;   <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 添加远程版本库</span>\r\n$ git remote remove &lt;remote&gt;      <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 删除指定的远程版本库</span>\r\n$ git fetch &lt;remote&gt; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 从远程库获取代码</span>\r\n$ git pull &lt;remote&gt; &lt;branch&gt; &nbsp; &nbsp;&nbsp; <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 下载代码及快速合并</span>\r\n$ git push &lt;remote&gt; &lt;branch&gt; &nbsp; &nbsp;&nbsp; <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 上传代码及快速合并</span>\r\n$ git push &lt;remote&gt; <span class=\"hljs-symbol\" style=\"box-sizing: inherit; color: rgb(0, 134, 179);\">:&lt;branch/tag-name&gt;</span> <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 删除远程分支或标签</span>\r\n$ git push --tags &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 上传所有标签</span></code></pre><h2>10 打包</h2><pre><code>$ git archive --<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">format</span>=zip --output ../file.zip master    <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 将master分支打包成file.zip文件，保存在上一级目录</span>\r\n$ git archive --<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">format</span>=zip --output ../v1.<span class=\"hljs-number\" style=\"box-sizing: inherit;\">2</span>.zip v1.<span class=\"hljs-number\" style=\"box-sizing: inherit;\">2</span>      <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 打包v1.2标签的文件，保存在上一级目录v1.2.zip文件中</span>\r\n$ git archive --<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">format</span>=zip v1.<span class=\"hljs-number\" style=\"box-sizing: inherit;\">2</span> &gt; ../v1.<span class=\"hljs-number\" style=\"box-sizing: inherit;\">2</span>.zip             <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 作用同上一条命令</span>\r\n</code></pre><p>git打包命令会自动忽略<code class=\"hljs css\"><span style=\"color: rgb(121, 93, 163);\">.gitignore</span></code>中指定的目录和文件，以及<code class=\"hljs css\"><span style=\"color: rgb(121, 93, 163);\">.git</span></code>目录。</p><h2>11 全局和局部配置</h2><ul><li>全局配置保存在：<code class=\"hljs bash\"><span style=\"color: rgb(223, 80, 0);\">$Home</span>/.gitconfig</code></li><li>本地仓库配置保存在：<code class=\"hljs\">.git/config</code></li></ul><h2>12 远程与本地合并</h2><p>如果在远程创建了代码仓，而且已经初始化，本地是具体的源代码，那么工作流程应该是：</p><pre><code>$ git init                              <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 初始化本地代码仓</span>\r\n$ git add .                             <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 添加本地代码</span>\r\n$ git commit -m <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\"add local source\"</span>      <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 提交本地代码</span>\r\n$ git pull origin master                <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 下载远程代码</span>\r\n$ git merge master                      <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 合并master分支</span>\r\n$ git push -u origin master             <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 上传代码</span></code></pre><p>&nbsp;</p>');
INSERT INTO `ape_document_article` VALUES (25, '<pre><code class=\"lang-php\">&lt;?php\r\n@ini_set(\'date.timezone\', \'Asia/Shanghai\');\r\n@ini_set(\'display_errors\', 1);\r\nheader(\'Content-Type:text/html;charset=utf-8\');\r\nclass Time\r\n{\r\n&nbsp; &nbsp; public static function times($btime)\r\n&nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $result = \'\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; $time =time() - $btime ;\r\n&nbsp; &nbsp; &nbsp; &nbsp; if($time &lt; 60)\r\n&nbsp; &nbsp; &nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $result = $time.\'秒前\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; else if($time &lt; 1800)\r\n&nbsp; &nbsp; &nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $result = floor($time/60).\'分钟前\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; else if($time &lt; 3600)\r\n&nbsp; &nbsp; &nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $result = \'半小时前\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; else if($time &lt; 86400)\r\n&nbsp; &nbsp; &nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $result = floor($time/3600).\'小时前\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; else\r\n&nbsp; &nbsp; &nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $zt = strtotime(date(\'Y-m-d 00:00:00\'));\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $qt = strtotime(date(\'Y-m-d 00:00:00\',strtotime(\"-1 day\")));\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $st = strtotime(date(\'Y-m-d 00:00:00\',strtotime(\"-2 day\")));\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $bt = strtotime(date(\'Y-m-d 00:00:00\',strtotime(\"-7 day\")));\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if( $btime &lt; $bt)\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $result = date(\'Y-m-d H:i:s\', $btime);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else if($btime &lt; $st)\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $result = floor($time/86400).\'天前\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else if($btime &lt; $qt)\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $result = \"前天\".date(\'H:i\', $btime);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $result = \'昨天\'.date(\'H:i\', $btime);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; return $result;\r\n&nbsp; &nbsp; }\r\n}\r\n//测试\r\n$str=\'2013-09-25 00:13:05\';\r\necho Time::times(strtotime($str));<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (26, '<p>安全是编程非常重要的一个方面。在任何一种编程语言中，都提供了许多的函数或者模块来确保程序的安全性。在现代网站应用中，经常要获取来自世界各地用户的输入，但是，我们都知道“永远不能相信那些用户输入的数据”。所以在各种的Web开发语言中，都会提供保证用户输入数据安全的函数。今天，我们就来看看，在著名的开源语言PHP中，有哪些有用的安全函数。</p><p>在PHP中，有些很有用的函数，防止你的网站遭受各种攻击，例如<span style=\"color: rgb(255, 0, 0);\">SQL注入攻击</span>，<span style=\"color: rgb(255, 0, 0);\">XSS攻击</span>（Cross Site Scripting：跨站脚本）等。一起看看PHP中常用的、可以确保项目安全的函数。注意，这并不是完整的列表，是我觉得在实际项目中很有的一些函数。</p><h2>mysql_real_escape_string()</h2><p><a href=\"http://php.net/manual/en/function.mysql-real-escape-string.php\" target=\"_blank\">mysql_real_escape_string()</a>&nbsp;函数在PHP中防止SQL注入攻击时非常有用。这个函数会对一些特殊字符，例如单引号<code class=\"hljs\">\'</code>、双引号<code class=\"hljs\">\"</code>、反斜杠<code class=\"hljs\">\\</code>等添加一个反斜杠，以确保在查询这些数据之前用户提供的输入是干净的。</p><p>注意，仅在写数据库的时候才需要调用这个函数，在读取数据库的时候不需要调用 <code class=\"hljs\">stripslashes()</code> 来unescape数据，因为这些反斜杠是在数据库执行SQL的时候添加的，当把数据写入到数据库的时候，反斜杠会被移除，所以写入到数据库的内容就是原始数据，并不会在前面多了反斜杠。</p><p>从 PHP5.5.0 开始已经不推荐使用&nbsp;<code class=\"hljs\">mysql_real_escape_string()</code>&nbsp;了，所有新的应用应该使用 MySQLi 和 PDO_MySQL 扩展提供的方法：<a href=\"http://php.net/manual/en/mysqli.real-escape-string.php\" target=\"_blank\">mysqli_real_escape_string()</a>&nbsp;或者&nbsp;<a href=\"http://php.net/manual/en/pdo.quote.php\" target=\"_blank\">PDO::quote()</a>&nbsp;函数库执行数据库操作，以防止SQL注入攻击。</p><h2>addslashes()</h2><p>这个函数的原理跟 <code class=\"hljs\">mysql_real_escape_string()</code> 相似。但是如果 php.ini 文件中的<code class=\"hljs\">magic_quotes_gpc</code>的值是<code class=\"hljs coffeescript\"><span style=\"color: rgb(0, 134, 179);\">on</span></code>，就不要使用这个函数，因为PHP已经对GPC（<code class=\"hljs bash\"><span style=\"color: rgb(223, 80, 0);\">$_GET</span></code>、<code class=\"hljs bash\"><span style=\"color: rgb(223, 80, 0);\">$_POST</span></code>和&nbsp;<code class=\"hljs bash\"><span style=\"color: rgb(223, 80, 0);\">$_COOKIE</span></code>）数据自动运行&nbsp;<a href=\"http://php.net/manual/en/function.addslashes.php\" target=\"_blank\">addslashes()</a>。再使用&nbsp;<code class=\"hljs\">addslashes()</code>，会导致双层转义。在PHP程序中，可以使用 <code class=\"hljs\">get_magic_quotes_gpc()</code> 函数来确定它是否开启。</p><p>注意，在 PHP5.3.0 之前，<code class=\"hljs\">magic_quotes_gpc</code> 是默认&nbsp;<code class=\"hljs coffeescript\"><span style=\"color: rgb(0, 134, 179);\">on</span></code> 的，所以不需要在这些变量上重复调用 <code class=\"hljs\">addslashes()</code>。不过 <code class=\"hljs\">magic_quotes_gpc</code> 在 PHP5.3 就已经被废弃，从 PHP5.4 已经被移除了。如果使用 PHP5.4以后的版本，可以不用担心这个问题，PHP 会自动转移GPC和<code class=\"hljs bash\"><span style=\"color: rgb(223, 80, 0);\">$_ENV</span></code>数据。</p><p><a href=\"http://php.net/manual/en/function.stripslashes.php\" target=\"_blank\">stripslashes()</a>&nbsp;可以去除 <code class=\"hljs\">addslashes()</code> 函数添加的反斜杠。</p><h2>htmlspecialchars()</h2><p><a href=\"http://php.net/manual/en/function.htmlspecialchars.php\" target=\"_blank\">htmlspecialchars()</a> 函数对于过滤用户输入的数据非常有用。它会将一些特殊字符如<code class=\"hljs\">&amp;</code>、<code class=\"hljs\">\"</code>、<code class=\"hljs\">\'</code>、<code class=\"hljs\">&lt;</code>、<code class=\"hljs\">&gt;</code>转换为HTML实体。例如，用户输入<code class=\"hljs\">&lt;</code> 时，就会被该函数转化为HTML实体 <code class=\"hljs perl\">&amp;<span style=\"color: rgb(167, 29, 93);\">lt</span>;</code>。（HTML实体对照表：<a href=\"http://www.w3school.com.cn/html/html_entities.asp\" target=\"_blank\">http://www.w3school.com.cn/html/html_entities.asp</a>），可以防止XSS和SQL注入攻击。</p><p>注意，<code class=\"hljs\">htmlspecialchars()</code> 函数只是把认为有安全隐患的HTML字符进行转换，如果想要把HTML所有可以转义的字符都进行转义，请使用<code class=\"hljs\">htmlentities()</code>。</p><p><a href=\"http://cn2.php.net/manual/en/function.htmlspecialchars-decode.php\" target=\"_blank\">htmlspecialchars_decode()</a> 与&nbsp;<code class=\"hljs\">htmlspecialchars()</code> 相反，可以将HTML实体转回为原字符。</p><h2>htmlentities()</h2><p><a href=\"http://cn2.php.net/manual/en/function.htmlentities.php\" target=\"_blank\">htmlentities()</a> 功能同&nbsp;<code class=\"hljs\">htmlspecialchars()</code>，不同的是，它可以转义所有的 HTML字符。</p><p><a href=\"http://cn2.php.net/manual/en/function.html-entity-decode.php\" target=\"_blank\">html_entity_decode()</a>&nbsp;为 <code class=\"hljs\">htmlentities()</code> 的decode函数。</p><h2>strip_tags()</h2><p><a href=\"http://php.net/manual/en/function.strip-tags.php\" target=\"_blank\">strip_tags()</a>&nbsp;函数可以去除字符串中所有的HTML、JavaScript和PHP标签，当然你也可以通过设置该函数的第二个参数，让一些特定的标签出现。</p><h2>md5()</h2><p>从安全的角度来说，在数据库中直接存储密码的行为不值得推荐。<a href=\"http://php.net/manual/en/function.md5.php\" target=\"_blank\">md5()</a>&nbsp;函数可以为给定字符串产生一个32个字符的md5散列，而且这个过程不可逆，也就是说，你不能从<code class=\"hljs\">md5()</code>的结果得到原始字符串。</p><p>现在这个函数并不被认为是安全的，因为开源的数据库可以反向检查一个散列值的明文，你可以在<a href=\"http://www.googlebig.com/forum/biggest-md5-crack-databases-t-68.html\" target=\"_blank\">这里</a>找到一个MD5散列数据库列表。</p><h2>sha1()</h2><p><a href=\"http://php.net/manual/en/function.sha1.php\" target=\"_blank\">sha1()</a>&nbsp;函数与<code class=\"hljs\">md5()</code>类似，但是它使用了不同的算法来产生40个字符的 SHA-1 散列（md5 产生的是32个字符的散列）。也不要把绝对安全寄托在这个函数上，否则会有意想不到的结果。</p><h2>intval()</h2><p>先别笑，我知道这个函数和安全没什么关系。<code class=\"hljs\">intval()</code>函数是将变量转成整数类型，你可以用这个函数让你的PHP代码更安全，特别是当你在解析id、年龄这样的数据时。</p>');
INSERT INTO `ape_document_article` VALUES (27, '<p>在MySQL中，选择正确的数据类型，对于性能至关重要。一般应该遵循下面两步：（1）确定合适的大类型：数字、字符串、时间、二进制；（2）确定具体的类型：有无符号、取值范围、变长定长等。</p><p>在数据类型设置方面，尽量用更小的数据类型，因为它们通常有更好的性能，花费更少的硬件资源。并且，尽量把字段定义为<code class=\"hljs cpp\">NOT <span style=\"color: rgb(0, 134, 179);\">NULL</span></code>，避免使用<code class=\"hljs cpp\"><code><span style=\"color: rgb(0, 134, 179);\">NULL</span></code></code>。</p><h2>1&nbsp;数值类型</h2><h3>1.1 说明</h3><table><colgroup><col width=\"NaN%\"><col width=\"NaN%\"><col width=\"NaN%\"><col width=\"NaN%\"><col width=\"NaN%\"></colgroup><thead><tr><th>类型</th><th>大小</th><th>范围（有符号）</th><th>范围（无符号）</th><th>用途</th></tr></thead><tbody><tr><td>TINYINT</td><td>1 字节</td><td>(-128, 127)</td><td>(0,&nbsp;255)</td><td>小整数值</td></tr><tr><td>SMALLINT</td><td>2 字节</td><td>(-32 768,&nbsp;32 767)</td><td>(0,&nbsp;65 535)</td><td>大整数值</td></tr><tr><td>MEDIUMINT</td><td>3 字节</td><td>(-8 388 608,&nbsp;8 388 607)</td><td>(0,&nbsp;16 777 215)</td><td>大整数值</td></tr><tr><td>INT或INTEGER</td><td>4 字节</td><td>(-2 147 483 648,&nbsp;2 147 483 647)</td><td>(0,&nbsp;4 294 967 295)</td><td>大整数值</td></tr><tr><td>BIGINT</td><td>8 字节</td><td>(-9 233 372 036 854 775 808,&nbsp;9 223 372 036 854 775 807)</td><td>(0,&nbsp;18 446 744 073 709 551 615)</td><td>极大整数值</td></tr><tr><td>FLOAT</td><td>4 字节</td><td>(-3.402 823 466 E+38,&nbsp;1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td>0,&nbsp;(1.175 494 351 E-38,&nbsp;3.402 823 466 E+38)</td><td>单精度<br>浮点数值</td></tr><tr><td>DOUBLE</td><td>8 字节</td><td>(1.797 693 134 862 315 7 E+308,&nbsp;2.225 073 858 507 201 4 E-308),&nbsp;0, (2.225 073 858 507 201 4 E-308,&nbsp;1.797 693 134 862 315 7 E+308)</td><td>0,&nbsp;(2.225 073 858 507 201 4 E-308,&nbsp;1.797 693 134 862 315 7 E+308)</td><td>双精度<br>浮点数值</td></tr><tr><td>DECIMAL</td><td>对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td><td>依赖于M和D的值</td><td>依赖于M和D的值</td><td>小数值</td></tr></tbody></table><h3>1.2&nbsp;优化建议</h3><ol><li>如果整形数据没有负数，如ID号，建议指定为<code class=\"hljs\">UNSIGNED</code>无符号类型，容量可以扩大一倍。</li><li>建议使用<code class=\"hljs\">TINYINT</code>代替<code class=\"hljs\">ENUM</code>、<code class=\"hljs\">BITENUM</code>、<code class=\"hljs sql\"><span style=\"color: rgb(167, 29, 93);\">SET</span></code>。</li><li>避免使用整数的显示宽度，也就是说，不要用<code class=\"hljs\">INT(10)</code>类似的方法指定字段显示宽度，直接用<code class=\"hljs\">INT</code>。关于<a href=\"https://www.awaimai.com/1146.html#int-display-width\">INT显示宽度</a>。</li><li>用<code class=\"hljs nginx\"><span style=\"color: rgb(0, 134, 179);\">INT</span> UNSIGNED</code>来存储IPv4地址，用<code class=\"hljs\">VARBINARY</code>来存储IPv6地址，当然存储之前需要用PHP函数转换。</li><li><code class=\"hljs\">DECIMAL</code>最适合保存准确度要求高，而且用于计算的数据，比如价格。但是在使用<code class=\"hljs\">DECIMAL</code>类型的时候，注意长度设置。</li><li>建议使用整形类型来运算和存储实数，方法是，实数乘以相应的倍数后再操作。</li><li>整数通常是最佳的数据类型，因为它速度快，并且能使用<code class=\"hljs\">AUTO_INCREMENT</code>。</li></ol><h2>2&nbsp;日期和时间</h2><h3>2.1 说明</h3><table><colgroup><col width=\"NaN%\"><col width=\"NaN%\"><col width=\"NaN%\"><col width=\"NaN%\"><col width=\"NaN%\"></colgroup><thead><tr><th>类型</th><th>大小<br>(字节)</th><th>范围</th><th>格式</th><th>用途</th></tr></thead><tbody><tr><td>DATE</td><td>3</td><td>1000-01-01&nbsp;到&nbsp;9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>TIME</td><td>3</td><td>\'-838:59:59\'&nbsp;到&nbsp;\'838:59:59\'</td><td>HH:MM:SS</td><td>时间值或持续时间</td></tr><tr><td>YEAR</td><td>1</td><td>1901 到 2155</td><td>YYYY</td><td>年份值</td></tr><tr><td>DATETIME</td><td>8</td><td>1000-01-01 00:00:00&nbsp;到&nbsp;9999-12-31 23:59:59</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值</td></tr><tr><td>TIMESTAMP</td><td>8</td><td>1970-01-01 00:00:00&nbsp;到&nbsp;2037 年某时</td><td>YYYYMMDDhhmmss</td><td>混合日期和时间值，时间戳</td></tr></tbody></table><h3>2.2&nbsp;优化建议</h3><ol><li>MySQL能存储的最小时间粒度为秒。</li><li>建议用<code class=\"hljs\">DATE</code>数据类型来保存日期。MySQL中默认的日期格式是<code class=\"hljs\">yyyy-mm-dd</code>。</li><li>用MySQL的内建类型<code class=\"hljs\">DATE</code>、<code class=\"hljs\">TIME</code>、<code class=\"hljs\">DATETIME</code>来存储时间，而不是使用字符串。</li><li>当数据格式为<code class=\"hljs\">TIMESTAMP</code>和<code class=\"hljs\">DATETIME</code>时，可以用<code class=\"hljs\">CURRENT_TIMESTAMP</code>作为默认（MySQL5.6以后），MySQL会自动返回记录插入的确切时间。</li><li><code class=\"hljs\">TIMESTAMP</code>是UTC时间戳，与时区相关。</li><li><code class=\"hljs\">DATETIME</code>的存储格式是一个<code class=\"hljs css\"><span style=\"color: rgb(167, 29, 93);\">YYYYMMDD</span> <span style=\"color: rgb(167, 29, 93);\">HH</span><span style=\"color: rgb(121, 93, 163);\">:MM</span><span style=\"color: rgb(121, 93, 163);\">:SS</span></code>的整数，与时区无关，你存了什么，读出来就是什么。</li><li>除非有特殊需求，否则建议使用<code class=\"hljs\">TIMESTAMP</code>，它比<code class=\"hljs\">DATETIME</code>更节约空间。</li><li>有时人们把Unix的时间戳保存为整数值，但是这通常没有任何好处，这种格式处理起来不太方便，我们并不推荐它。</li></ol><h2>3&nbsp;字符串</h2><h3>3.1 说明</h3><table><colgroup><col width=\"NaN%\"><col width=\"NaN%\"><col width=\"NaN%\"></colgroup><thead><tr><th>类型</th><th>大小</th><th>用途</th></tr></thead><tbody><tr><td>CHAR</td><td>0-255字节</td><td>定长字符串</td></tr><tr><td>VARCHAR</td><td>0-65535 字节</td><td>变长字符串</td></tr><tr><td>TINYBLOB</td><td>0-255字节</td><td>不超过 255 个字符的二进制字符串</td></tr><tr><td>TINYTEXT</td><td>0-255字节</td><td>短文本字符串</td></tr><tr><td>BLOB</td><td>0-65 535字节</td><td>二进制形式的长文本数据</td></tr><tr><td>TEXT</td><td>0-65 535字节</td><td>长文本数据</td></tr><tr><td>MEDIUMBLOB</td><td>0-16 777 215字节</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>MEDIUMTEXT</td><td>0-16 777 215字节</td><td>中等长度文本数据</td></tr><tr><td>LONGBLOB</td><td>0-4 294 967 295字节</td><td>二进制形式的极大文本数据</td></tr><tr><td>LONGTEXT</td><td>0-4 294 967 295字节</td><td>极大文本数据</td></tr></tbody></table><h3>3.2 优化建议</h3><ol><li>字符串的长度相差较大用<code class=\"hljs\">VARCHAR</code>；字符串短，且所有值都接近一个长度用<code class=\"hljs\">CHAR</code>。</li><li><code class=\"hljs\">CHAR</code>和<code class=\"hljs\">VARCHAR</code>适用于包括人名、邮政编码、电话号码和不超过255个字符长度的任意字母数字组合。那些要用来计算的数字不要用<code class=\"hljs\">VARCHAR</code>类型保存，因为可能会导致一些与计算相关的问题。换句话说，可能影响到计算的准确性和完整性。</li><li><code class=\"hljs\">BINARY</code>和<code class=\"hljs\">VARBINARY</code>存储的是二进制字符串，与字符集无关。</li><li><code class=\"hljs\">BLOB</code>系列存储二进制字符串，与字符集无关。<code class=\"hljs\">TEXT</code>系列存储非二进制字符串，与字符集相关。一般情况下，你可以认为<code class=\"hljs\">BLOB</code>是一个更大的<code class=\"hljs\">VARBINARY</code>；<code class=\"hljs\">TEXT</code>是一个更大的<code class=\"hljs\">VARCHAR</code>。</li><li><code class=\"hljs\">BLOB</code>和<code class=\"hljs\">TEXT</code>都不能有默认值。</li></ol><h2>4 INT显示宽度</h2><p>我们经常会使用命令来创建数据表，而且同时会指定一个长度，如下。但是，这里的长度并非是<code class=\"hljs\">TINYINT</code>类型存储的最大长度，而是显示的最大长度。</p><pre><code><span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">CREATE</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">TABLE</span> <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">`user`</span>(\r\n    <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">`id`</span> TINYINT(<span class=\"hljs-number\" style=\"box-sizing: inherit;\">2</span>) <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">UNSIGNED</span>\r\n);</code></pre><p>这里表示user表的id字段的类型是<code class=\"hljs\">TINYINT</code>，可以存储的最大数值是<code class=\"hljs\">255</code>。所以，</p><p>在存储数据时，如果存入值小于等于<code class=\"hljs\">255</code>，如<code class=\"hljs\">200</code>，虽然超过2位，但是没有超出<code class=\"hljs\">TINYINT</code>类型长度，所以可以正常保存；如果存入值大于<code class=\"hljs\">255</code>，如<code class=\"hljs\">500</code>，那么MySQL会自动保存为<code class=\"hljs\">TINYINT</code>类型的最大值<code class=\"hljs\">255</code>。</p><p>在查询数据时，不管查询结果为何值，都按实际输出。这里<code class=\"hljs\">TINYINT(2)</code>中<code class=\"hljs\">2</code>的作用就是，当需要在查询结果前填充<code class=\"hljs\">0</code>时，命令中加上<code class=\"hljs\">ZEROFILL</code>就可以实现，如：</p><pre><code>`<span class=\"javascript\" style=\"box-sizing: inherit;\">id</span>` TINYINT(<span class=\"hljs-number\" style=\"box-sizing: inherit;\">2</span>) UNSIGNED ZEROFILL</code></pre><p>这样，查询结果如果是<code class=\"hljs\">5</code>，那输出就是<code class=\"hljs\">05</code>。如果指定<code class=\"hljs\">TINYINT(5)</code>，那输出就是<code class=\"hljs\">00005</code>，其实实际存储的值还是<code class=\"hljs\">5</code>，而且存储的数据不会超过<code class=\"hljs\">255</code>，只是MySQL输出数据时在前面填充了<code class=\"hljs\">0</code>。</p><p>换句话说，在MySQL命令中，字段的类型长度<code class=\"hljs\">TINYINT(2)</code>、<code class=\"hljs\">INT(11)</code>不会影响数据的插入，只会在使用<code class=\"hljs\">ZEROFILL</code>时有用，让查询结果前填充<code class=\"hljs\">0</code>。</p>');
INSERT INTO `ape_document_article` VALUES (28, '<p>为方便查询，特整理MySQL常用命令，如下。所有命令都亲手检验过，请放心使用：）</p><p><span style=\"color: rgb(255, 0, 0);\">约定：<code class=\"hljs\">$</code>后为Shell环境命令，<code class=\"hljs\">&gt;</code>后为MySQL命令。</span></p><h2>1 常用命令</h2><p>第一步，连接数据库。</p><pre><code>$ mysql -u root -p                  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 进入MySQL bin目录后执行，回车后输入密码连接。</span>\r\n                                             <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 常用参数：-h 服务器地址，-u 用户名，-p 密码，-P 端口</span></code></pre><p>然后是一些常用的命令。<br>数据库操作：</p><pre><code>&gt; <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">create</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">database</span> dbname;           &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; # 创建数据库，数据库名为dbname\r\n&gt; <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">CREATE</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">DATABASE</span> <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">`todo`</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">DEFAULT</span> <span class=\"hljs-built_in\" style=\"box-sizing: inherit;\">CHARACTER</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">SET</span> utf8 <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">COLLATE</span> utf8_general_ci;  # 创建todo数据库，并指定字符集\r\n&gt; <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">show</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">databases</span>;                            # 显示所有数据库\r\n&gt; <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">alter</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">database</span> <span class=\"hljs-built_in\" style=\"box-sizing: inherit;\">character</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">set</span> utf8;         # 修改数据库字符集\r\n&gt;&nbsp;<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">use</span> dbname;                       &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# 选择数据库\r\n&gt;&nbsp;status;                           &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# 查看当前选择（<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">use</span>）的数据库\r\n&gt;&nbsp;<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">drop</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">database</span> dbname;             &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# 删除数据库\r\n</code></pre><p>数据表操作：</p><pre><code>&gt;&nbsp;show tables;                      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 显示所有表</span>\r\n&gt;&nbsp;describe tablename;               &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 表结构详细描述</span>\r\n&gt; desc tablename;                            <span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 同 describe 命令一样</span>\r\n&gt; create table newtable like oldtable;       <span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 复制表结构</span>\r\n&gt; insert <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">into</span> newtable <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">select</span> * <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">from</span> oldtable;  <span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\">#复制表数据</span>\r\n&gt; rename table tablelname to new_tablelname  <span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 重命名表，同时命名多个表用逗号“,”分割</span>\r\n&gt; drop table tablename;            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 删除表</span>\r\n</code></pre><p>界面操作：</p><pre><code>&gt; <span class=\"hljs-function\" style=\"box-sizing: inherit;\"><span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">select</span> <span class=\"hljs-title\" style=\"box-sizing: inherit; color: rgb(121, 93, 163);\">version</span>(),current_date</span>;    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 显示当前mysql版本和当前日期</span>\r\n&gt; exit                              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 返回Shell命令行</span></code></pre><h2>2 创建数据表</h2><p><code class=\"hljs sql\"><span style=\"color: rgb(167, 29, 93);\">create</span> <span style=\"color: rgb(167, 29, 93);\">table</span></code>命令用来创建数据表，格式：</p><pre><code>create table <span class=\"hljs-tag\" style=\"box-sizing: inherit;\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit; color: rgb(99, 163, 92);\">表名</span>&gt;</span> (<span class=\"hljs-tag\" style=\"box-sizing: inherit;\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit; color: rgb(99, 163, 92);\">字段名1</span>&gt;</span> <span class=\"hljs-tag\" style=\"box-sizing: inherit;\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit; color: rgb(99, 163, 92);\">类型1</span>&gt;</span> [,..<span class=\"hljs-tag\" style=\"box-sizing: inherit;\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit; color: rgb(99, 163, 92);\">字段名n</span>&gt;</span> <span class=\"hljs-tag\" style=\"box-sizing: inherit;\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit; color: rgb(99, 163, 92);\">类型n</span>&gt;</span>]);</code></pre><p>数据的类型之后还可以包含：<span style=\"color: rgb(255, 0, 0);\">数据宽度 + 是否为空 + 是否主键 + 自动增加 + 默认值</span>，它们书写时不限顺序。但是字段名和字段类型必须是第一和第二位。例如，建立一个名为user的表：</p><pre><code>mysql&gt; <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">create</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">table</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">user</span>(\r\n&nbsp; &nbsp; -&gt; <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">id</span> <span class=\"hljs-built_in\" style=\"box-sizing: inherit;\">int</span>(<span class=\"hljs-number\" style=\"box-sizing: inherit;\">4</span>) <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">not</span> <span class=\"hljs-literal\" style=\"box-sizing: inherit; color: rgb(0, 134, 179);\">null</span> primary <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">key</span> auto_increment,\r\n&nbsp; &nbsp; -&gt; <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">name</span> <span class=\"hljs-built_in\" style=\"box-sizing: inherit;\">char</span>(<span class=\"hljs-number\" style=\"box-sizing: inherit;\">20</span>) <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">not</span> <span class=\"hljs-literal\" style=\"box-sizing: inherit; color: rgb(0, 134, 179);\">null</span>,\r\n&nbsp; &nbsp; -&gt; sex <span class=\"hljs-built_in\" style=\"box-sizing: inherit;\">int</span>(<span class=\"hljs-number\" style=\"box-sizing: inherit;\">4</span>) <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">not</span> <span class=\"hljs-literal\" style=\"box-sizing: inherit; color: rgb(0, 134, 179);\">null</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">default</span> <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\'0\'</span>,\r\n&nbsp; &nbsp; -&gt; degree <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">double</span>(<span class=\"hljs-number\" style=\"box-sizing: inherit;\">16</span>,<span class=\"hljs-number\" style=\"box-sizing: inherit;\">2</span>)\r\n    -&gt; );</code></pre><h2>3 修改root的密码</h2><pre><code>$ mysqladmin -u root password                     <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 原始密码为空的情况</span>\r\n<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">New</span> password: &lt;输入新的密码&gt;\r\nConfirm <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">new</span> password: &lt;再次输入新密码&gt;\r\n\r\n$ mysqladmin -u root -p password                  <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 原始密码不为空的情况</span>\r\nEnter password: &lt;输入旧的密码&gt;\r\n<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">New</span> password: &lt;输入新的密码&gt;\r\nConfirm <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">new</span> password: &lt;再次输入新密码&gt;\r\n\r\n$ mysqladmin -uroot -p123456 password             <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 原始密码不为空的情况，效果和第二种方法一样，只是显式的输入了原始密码</span>\r\n<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">New</span> password: &lt;输入新的密码&gt;\r\nConfirm <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">new</span> password: &lt;再次输入新密码&gt;</code></pre><h2>4 备份和恢复</h2><pre><code>$ mysqldump -u root -p dbname &gt; dbname.sql                        <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 备份整个数据库（包含表结构和数据）</span>\r\n$ mysqldump -u root -p -d dbname &gt; dbname.sql                     <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 备份数据库表结构，不包含数据，</span>\r\n$ mysqldump -u root -p dbname tablename &gt; tablename.sql           <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 备份数据库中的某张数据表（包含表结构和数据）</span>\r\n$ mysqldump -u root -p dbname tablename1 tablename2 &gt; tables.sql  <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 备份数据库中2张数据表</span>\r\n$ mysqldump -u root -p -d dbname tablename &gt; tablename.sql        <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 备份数据库中的某张数据表的表结构（不含数据）</span>\r\n\r\n$ mysqladmin -u root -p create dbname       <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 恢复数据库步骤1：创建数据库</span>\r\n$ mysql -u root -p dbname &lt; dbname.sql      <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 恢复数据库步骤2：恢复数据</span></code></pre><p>如果是网络上的服务器，可以在<code class=\"hljs\">mysqldump</code>之后用<code class=\"hljs diff\"><span style=\"color: rgb(189, 44, 0);\">-h</span></code>指定服务器地址，例如：</p><pre><code>$ mysqldump -h sql.domain.com -u root -p dbname &gt; dbname.sql</code></pre><p>导出查询结果到本地计算机：</p><pre><code><span class=\"hljs-attribute\" style=\"box-sizing: inherit; color: rgb(0, 134, 179);\">mysql</span> -h127.<span class=\"hljs-number\" style=\"box-sizing: inherit;\">0</span>.<span class=\"hljs-number\" style=\"box-sizing: inherit;\">0</span>.<span class=\"hljs-number\" style=\"box-sizing: inherit;\">1</span>&nbsp;-P3306 -uroot -proot&nbsp;-Ae <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\"use test;select *&nbsp;from user where status=4 order by id&nbsp;desc;\"</span> &gt; <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\"C:\\Users\\Gary\\user.txt\"</span></code></pre><h2>5 用户和权限管理</h2><p>MySQL 默认有个<code class=\"hljs\">root</code>用户，但是这个用户权限太大，一般只在管理数据库时候才用。如果在项目中要连接 MySQL 数据库，则建议新建一个权限较小的用户来连接。在 MySQL 命令行模式下输入如下命令可以为 MySQL 创建一个新用户：</p><pre><code>&gt; CREATE USER username IDENTIFIED BY <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\'123456\'</span>;        <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(150, 152, 150);\"># 其中，username是用户名，123456是用户密码</span>\r\n</code></pre><p>新用户创建完成，但是此刻如果以此用户登陆的话，会报错，因为我们还没有为这个用户分配相应权限，分配权限的命令是<code class=\"hljs sql\"><span style=\"color: rgb(167, 29, 93);\">grant</span></code>，格式为：</p><pre><code>GRANT <span class=\"hljs-tag\" style=\"box-sizing: inherit;\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit; color: rgb(99, 163, 92);\">权限</span>&gt;</span>&nbsp;ON <span class=\"hljs-tag\" style=\"box-sizing: inherit;\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit; color: rgb(99, 163, 92);\">数据库</span>&gt;</span>.<span class=\"hljs-tag\" style=\"box-sizing: inherit;\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit; color: rgb(99, 163, 92);\">表名</span>&gt;</span> TO <span class=\"hljs-tag\" style=\"box-sizing: inherit;\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit; color: rgb(99, 163, 92);\">用户名</span>&gt;</span>@<span class=\"hljs-tag\" style=\"box-sizing: inherit;\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit; color: rgb(99, 163, 92);\">登录主机</span>&gt;</span> IDENTIFIED BY \"<span class=\"hljs-tag\" style=\"box-sizing: inherit;\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit; color: rgb(99, 163, 92);\">密码</span>&gt;</span>\"</code></pre><p>其中，权限可以是：<code class=\"hljs\">all</code>、<code class=\"hljs cs\"><span style=\"color: rgb(167, 29, 93);\">select</span></code>、<code class=\"hljs sql\"><span style=\"color: rgb(167, 29, 93);\">insert</span></code>、<code class=\"hljs coffeescript\"><span style=\"color: rgb(167, 29, 93);\">delete</span></code>、<code class=\"hljs sql\"><span style=\"color: rgb(167, 29, 93);\">update</span></code>、<code class=\"hljs sql\"><span style=\"color: rgb(167, 29, 93);\">drop</span></code>等值。</p><p>于是，用下面的命令就可以执行特定的功能：</p><pre><code>&gt; <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">GRANT</span> ALL <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">ON</span> *.* <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">TO</span> <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\'username\'</span>@<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\'localhost\'</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">IDENTIFIED</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">BY</span> <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\'123456\'</span>;                  # 给用户 username 分配所有数据库的所有权限\r\n&gt; <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">REVOKE</span> ALL <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">ON</span> *.* <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">FROM</span> <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\'username\'</span>@<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\'localhost\'</span>;                                      # 如果觉得上面的权限太大，用 <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">REVOKE</span> 删除原来权限\r\n&gt; <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">GRANT</span> ALL <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">ON</span> dbname.* <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">TO</span> <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\'username\'</span>@<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\'localhost\'</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">IDENTIFIED</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">BY</span> <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\'123456\'</span>;             # 重新授予仅在dbname数据库上的权限\r\n&gt; <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">GRANT</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">SELECT</span>, <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">UPDATE</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">ON</span> dbname.* <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">TO</span> <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\'username\'</span>@<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\'localhost\'</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">IDENTIFIED</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">BY</span> <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(223, 80, 0);\">\'123456\'</span>;  # 仅授予<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">select</span>、<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">update</span>权限，无法执行<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">insert</span>、<span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">delete</span>等命令\r\n&gt; <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">FLUSH</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">PRIVILEGES</span>;                                                                   # 每当调整权限后，通常需要用这个命令刷新权限\r\n&gt; <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">DROP</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">USER</span> username@localhost;                                                       # 删除用户\r\n</code></pre><p>仔细观察上面几个命令，可以发现不管是授权，还是删除授权，都要指定响应的<code class=\"hljs\">host</code>（即<code class=\"hljs python\"><span style=\"color: rgb(150, 152, 150);\">@</span></code>符号后面的登录主机，主机也可以用<code class=\"hljs\">%</code>通配符表示所有主机，或者<code class=\"hljs css\">192<span style=\"color: rgb(121, 93, 163);\">.168</span><span style=\"color: rgb(121, 93, 163);\">.1</span>.%</code>&nbsp;表示特定主机段）。因为以上及格命令实际上都是在操作 mysql 数据库中的user表，可以用如下命令查看相应用户及对应的<code class=\"hljs\">host</code>:</p><pre><code><span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">SELECT</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">user</span>, host <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">FROM</span> <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(167, 29, 93);\">user</span>;\r\n</code></pre><p>当然，这个表中还包含很多其它例如用户密码、权限设置等很多内容，操作时候尤其需要小心。</p>');
INSERT INTO `ape_document_article` VALUES (29, '<h1>1. php文件夹操作函数<br></h1><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">string basename&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;string path&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">[,</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;string suffix</span><span style=\"color: rgb(147, 161, 161);\">]</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">)</span></code></li></ol><p>给出一个包含有指向一个文件的全路径的字符串，本函数返回基本的文件名。如果文件名是以 suffix 结束的，那这一部分也会被去掉。</p><p style=\"text-align: justify;\">在 Windows 中，斜线（/）和反斜线（）都可以用作目录分隔符。在其它环境下是斜线（/）。</p><p style=\"text-align: justify;\">例子：</p><ol><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">&lt;?</span><span style=\"color: rgb(72, 72, 76);\">php</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(72, 72, 76);\">$path&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(221, 17, 68);\">\"/testweb/home.php\"</span><span style=\"color: rgb(147, 161, 161);\">;</span></code></li><li></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">//显示带有文件扩展名的文件名</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(72, 72, 76);\">echo basename</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$path</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li><li></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">//显示不带有文件扩展名的文件名</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(72, 72, 76);\">echo basename</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$path</span><span style=\"color: rgb(147, 161, 161);\">,</span><span style=\"color: rgb(221, 17, 68);\">\".php\"</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">?&gt;</span></code></li></ol><p>输出：</p><ol><li><code class=\"language-php\"><span style=\"color: rgb(72, 72, 76);\">home</span><span style=\"color: rgb(147, 161, 161);\">.</span><span style=\"color: rgb(72, 72, 76);\">php</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(72, 72, 76);\">home</span></code></li></ol><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">string dirname&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;string path&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">)</span></code></li></ol><p style=\"text-align: justify;\">给出一个包含有指向一个文件的全路径的字符串，本函数返回去掉文件名后的目录名。</p><p style=\"text-align: justify;\">在 Windows 中，斜线（/）和反斜线（）都可以用作目录分隔符。在其它环境下是斜线（/）。</p><p style=\"text-align: justify;\">&nbsp;</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">array pathinfo&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;string path&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">[,</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(0, 128, 128);\">int</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;options</span><span style=\"color: rgb(147, 161, 161);\">]</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">)</span></code></li></ol><p style=\"text-align: justify;\">pathinfo() 返回一个联合数组包含有 path 的信息。包括以下的数组单元：dirname，basename 和 extension。</p><p style=\"text-align: justify;\">可以通过参数 options 指定要返回哪些单元。它们包括：PATHINFO_DIRNAME，PATHINFO_BASENAME 和 PATHINFO_EXTENSION。默认是返回全部的单元。</p><p style=\"text-align: justify;\">&nbsp;</p><ol><li><code class=\"language-php\"><span style=\"color: rgb(72, 72, 76);\">array scandir&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(30, 52, 123);\">string</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;$directory&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">[,</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(30, 52, 123);\">int</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;$sorting_order&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">[,</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;resource $context&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">]]</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">)</span></code></li></ol><p>scandir， 列出指定路径中的文件和目录，返回一个 array，包含有 directory 中的文件和目录。成功则返回包含有文件名的 array，如果失败则返回 FALSE。如果 directory 不是个目录，则返回布尔值 FALSE 并生成一条 E_WARNING 级的错误。&nbsp;</p><p>例子：</p><ol><li></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">&lt;?</span><span style=\"color: rgb(72, 72, 76);\">php</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(72, 72, 76);\">$dir&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(221, 17, 68);\">\'/tmp\'</span><span style=\"color: rgb(147, 161, 161);\">;</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(72, 72, 76);\">$files1&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;scandir</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$dir</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(72, 72, 76);\">$files2&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;scandir</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$dir</span><span style=\"color: rgb(147, 161, 161);\">,</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(25, 95, 145);\">1</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li><li></li><li><code class=\"language-php\"><span style=\"color: rgb(72, 72, 76);\">print_r</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$files1</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(72, 72, 76);\">print_r</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$files2</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">?&gt;</span></code></li></ol><p>输出：</p><ol><li><code class=\"language-php\"><span style=\"color: rgb(0, 128, 128);\">Array</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">(</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">[</span><span style=\"color: rgb(25, 95, 145);\">0</span><span style=\"color: rgb(147, 161, 161);\">]</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=&gt;</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">.</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">[</span><span style=\"color: rgb(25, 95, 145);\">1</span><span style=\"color: rgb(147, 161, 161);\">]</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=&gt;</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">..</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">[</span><span style=\"color: rgb(25, 95, 145);\">2</span><span style=\"color: rgb(147, 161, 161);\">]</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=&gt;</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;bar</span><span style=\"color: rgb(147, 161, 161);\">.</span><span style=\"color: rgb(72, 72, 76);\">php</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">[</span><span style=\"color: rgb(25, 95, 145);\">3</span><span style=\"color: rgb(147, 161, 161);\">]</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=&gt;</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;foo</span><span style=\"color: rgb(147, 161, 161);\">.</span><span style=\"color: rgb(72, 72, 76);\">txt</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">[</span><span style=\"color: rgb(25, 95, 145);\">4</span><span style=\"color: rgb(147, 161, 161);\">]</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=&gt;</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;somedir</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">)</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(0, 128, 128);\">Array</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">(</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">[</span><span style=\"color: rgb(25, 95, 145);\">0</span><span style=\"color: rgb(147, 161, 161);\">]</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=&gt;</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;somedir</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">[</span><span style=\"color: rgb(25, 95, 145);\">1</span><span style=\"color: rgb(147, 161, 161);\">]</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=&gt;</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;foo</span><span style=\"color: rgb(147, 161, 161);\">.</span><span style=\"color: rgb(72, 72, 76);\">txt</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">[</span><span style=\"color: rgb(25, 95, 145);\">2</span><span style=\"color: rgb(147, 161, 161);\">]</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=&gt;</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;bar</span><span style=\"color: rgb(147, 161, 161);\">.</span><span style=\"color: rgb(72, 72, 76);\">php</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">[</span><span style=\"color: rgb(25, 95, 145);\">3</span><span style=\"color: rgb(147, 161, 161);\">]</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=&gt;</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">..</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">[</span><span style=\"color: rgb(25, 95, 145);\">4</span><span style=\"color: rgb(147, 161, 161);\">]</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=&gt;</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">.</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">)</span></code></li></ol><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">string realpath&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;string path&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">)</span></code></li></ol><p style=\"text-align: justify;\">realpath() 扩展所有的符号连接并且处理输入的 path 中的 ‘/./’, ‘/../’ 以及多余的 ‘/’ 并返回规范化后的绝对路径名。返回的路径中没有符号连接，’/./’ 或 ‘/../’ 成分。</p><p style=\"text-align: justify;\">realpath() 失败时返回 FALSE，比如说文件不存在的话。在 BSD 系统上，如果仅仅是 path 不存在的话，PHP 并不会像其它系统那样返回 FALSE。</p><p style=\"text-align: justify;\">&nbsp;</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(30, 52, 123);\">bool</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;is_dir&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;string filename&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">)</span></code></li></ol><p style=\"text-align: justify;\">如果文件名存在并且为目录则返回 TRUE。如果 filename 是一个相对路径，则按照当前工作目录检查其相对路径。</p><p style=\"text-align: justify;\">注: 本函数的结果会被缓存。更多信息参见 clearstatcache()。</p><p style=\"text-align: justify;\">&nbsp;</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">resource opendir&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;string path&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">[,</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;resource context</span><span style=\"color: rgb(147, 161, 161);\">]</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">)</span></code></li></ol><p style=\"text-align: justify;\">打开一个目录句柄，可用于之后的 closedir()，readdir() 和 rewinddir() 调用中。</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">string readdir&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;resource dir_handle&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">)</span></code></li></ol><p>返回目录中下一个文件的文件名。文件名以在文件系统中的排序返回。</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(30, 52, 123);\">void</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;closedir&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;resource dir_handle&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">)</span></code></li></ol><p>关闭由 dir_handle 指定的目录流。流必须之前被 opendir() 所打开。</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(30, 52, 123);\">void</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;rewinddir&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;resource dir_handle&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">)</span></code></li></ol><p>将 dir_handle 指定的目录流重置到目录的开头。</p><p style=\"text-align: justify;\">&nbsp;</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">array glob&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;string pattern&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">[,</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(0, 128, 128);\">int</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;flags</span><span style=\"color: rgb(147, 161, 161);\">]</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">)</span></code></li></ol><p>glob() 函数依照 libc glob() 函数使用的规则寻找所有与 pattern 匹配的文件路径，类似于一般 shells 所用的规则一样。不进行缩写扩展或参数替代。</p><p style=\"text-align: justify;\">返回一个包含有匹配文件/目录的数组。如果出错返回 FALSE。</p><p style=\"text-align: justify;\">&nbsp;</p><p style=\"text-align: justify;\">有效标记为：&nbsp;</p><p style=\"text-align: justify;\">GLOB_MARK - 在每个返回的项目中加一个斜线<br>GLOB_NOSORT - 按照文件在目录中出现的原始顺序返回（不排序）<br>GLOB_NOCHECK - 如果没有文件匹配则返回用于搜索的模式<br>GLOB_NOESCAPE - 反斜线不转义元字符<br>GLOB_BRACE - 扩充 {a,b,c} 来匹配 ‘a’，’b’ 或 ‘c’<br>GLOB_ONLYDIR - 仅返回与模式匹配的目录项<br></p><p style=\"text-align: justify;\">注: 在 PHP 4.3.3 版本之前 GLOB_ONLYDIR 在 Windows 或者其它不使用 GNU C 库的系统上不可用。</p><p style=\"text-align: justify;\">GLOB_ERR - 停止并读取错误信息（比如说不可读的目录），默认的情况下忽略所有错误</p><p style=\"text-align: justify;\">注: GLOB_ERR 是 PHP 5.1 添加的。</p><p style=\"text-align: justify;\">&nbsp;</p><h1>2. php文件目录操作</h1><h2>a. 新建文件</h2><p style=\"text-align: justify;\">1、先确定要写入文件的内容</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">$content&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(221, 17, 68);\">\'你好\'</span><span style=\"color: rgb(147, 161, 161);\">;</span></code></li></ol><p style=\"text-align: justify;\">2、打开这个文件（系统会自动建立这个空文件）</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(147, 161, 161);\">//假设新建的文件叫file.txt，而且在上级目录下。w表示‘写文件’，$fp下面要用到，表示指向某个打开的文件。</span></code></li><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">$fp&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;fopen</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'../file.txt\'</span><span style=\"color: rgb(147, 161, 161);\">,</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(221, 17, 68);\">\'w\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\">3、将内容字符串写入文件</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(147, 161, 161);\">//$fp告诉系统要写入的文件，写入的内容是$content</span></code></li><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">fwrite</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$fp</span><span style=\"color: rgb(147, 161, 161);\">,</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;$content</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\">4、关闭文件</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">fclose</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$fp</span><span style=\"color: rgb(147, 161, 161);\">);</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span></code></li></ol><p style=\"text-align: justify;\"><span style=\"color: rgb(255, 0, 0);\">注意：PHP5中提供了更方便的函数file_put_contents，上面的4步可以这样完成：</span></p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">$content&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(221, 17, 68);\">\'你好\'</span><span style=\"color: rgb(147, 161, 161);\">;</span></code></li><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">file_put_contents</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'file.txt\'</span><span style=\"color: rgb(147, 161, 161);\">,</span><span style=\"color: rgb(72, 72, 76);\">$content</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\">&nbsp;</p><h2>b. 删除文件</h2><p style=\"text-align: justify;\">删除当前目录下的arch目录下的文件abc.txt</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">unlink</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'arch/abc.txt\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\"><span style=\"color: rgb(255, 0, 0);\">注意：系统会返回操作结果，成功则返回 TRUE，失败则返回 FALSE，可以用变量接收，就知道是否删除成功：</span></p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">$deleteResult&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;unlink</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'arch/abc.txt\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\">&nbsp;</p><h2>c. 获取文件内容</h2><p style=\"text-align: justify;\">假设获取的目标文件名是file.txt，而且在上级目录下。获取的内容放入$content。</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">$content&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;file_get_contents</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'../file.txt\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\">&nbsp;</p><h2>d. 修改文件内容</h2><p style=\"text-align: justify;\">操作方法与新建内容基本一样</p><p style=\"text-align: justify;\">&nbsp;</p><h2>e. 重命名文件或目录</h2><p style=\"text-align: justify;\">将当前目录下的子目录a下面的文件1.gif重命名为2.gif。</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">rename</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'/a/1.gif\'</span><span style=\"color: rgb(147, 161, 161);\">,</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(221, 17, 68);\">\'/a/2.gif\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\"><span style=\"color: rgb(255, 0, 0);\">注意：对目录也一样。系统会返回操作结果，成功则返回 TRUE，失败则返回 FALSE，可以用变量接收，就知道是否重命名成功。</span></p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">$renameResult&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;rename</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'/a/1.gif\'</span><span style=\"color: rgb(147, 161, 161);\">,</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(221, 17, 68);\">\'/a/2.gif\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\">如果要移动文件或目录，只要将重命名后的路径设置为新的路径就可以了：</p><p style=\"text-align: justify;\">将当前目录下的子目录a下面的文件1.gif，移动到当前目录下的子目录b,并且重命名为2.gif。</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">rename</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'/a/1.gif\'</span><span style=\"color: rgb(147, 161, 161);\">,</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(221, 17, 68);\">\'/b/2.gif\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\">不过要注意，如果目录b不存在，就会移动失败。</p><p style=\"text-align: justify;\">&nbsp;</p><h2>f. 复制文件</h2><p style=\"text-align: justify;\">将当前目录下的子目录a下面的文件1.gif，复制到当前目录下的子目录b，并命名为2.gif。</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">copy</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'/a/1.gif\'</span><span style=\"color: rgb(147, 161, 161);\">,</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(221, 17, 68);\">\'/b/1.gif\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\"><span style=\"color: rgb(255, 0, 0);\">注意：不能对目录进行此项操作。</span></p><p style=\"text-align: justify;\"><span style=\"color: rgb(255, 0, 0);\">如果目标文件（上面的/b/1.gif）已经存在，原来的文件将被覆盖。</span></p><p style=\"text-align: justify;\"><span style=\"color: rgb(255, 0, 0);\">系统会返回操作结果，成功则返回 TRUE，失败则返回 FALSE，可以用变量接收，就知道是否复制成功。</span></p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">$copyResult&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;copy</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'/a/1.gif\'</span><span style=\"color: rgb(147, 161, 161);\">,</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(221, 17, 68);\">\'/b/1.gif\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\">&nbsp;</p><h2>g. 移动文件或目录</h2><p style=\"text-align: justify;\">操作方法和重命名一样</p><p style=\"text-align: justify;\">&nbsp;</p><h2>h. 文件或目录是否存在</h2><p style=\"text-align: justify;\">检查上级目录下的文件logo.jpg是否存在。</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">$existResult&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;file_exists</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'../logo.jpg\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\"><span style=\"color: rgb(255, 0, 0);\">注意：如果文件存在系统返回true，否则返回false。可以对目录进行同样的操作。</span></p><p style=\"text-align: justify;\">&nbsp;</p><h2>i. 获取文件大小</h2><p style=\"text-align: justify;\">获取上级目录下的文件logo.png的大小。</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">$size&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;filesize</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'../logo.png\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\"><span style=\"color: rgb(255, 0, 0);\">注意：系统会返回一个数字，表示文件的大小是多少字节（bytes）。</span></p><p style=\"text-align: justify;\">&nbsp;</p><h2>j. 新建目录</h2><p style=\"text-align: justify;\">在当前目录下的目录a下面新建目录b。</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">mkdir</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'/a/b\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\"><span style=\"color: rgb(255, 0, 0);\">注意：系统会返回操作结果，成功则返回 TRUE，失败则返回 FALSE，可以用变量接收，就知道是否新建成功：</span></p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">$mkResult&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;mkdir</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'/a/b\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\">&nbsp;</p><h2>k. 删除目录</h2><p style=\"text-align: justify;\">删除当前目录下的目录a下面的子目录b。</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">rmdir</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'/a/b\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\"><span style=\"color: rgb(255, 0, 0);\">注意：只能删除非空的目录，否则必须先删除目录下的子目录和文件，再删除总目录</span></p><p style=\"text-align: justify;\"><span style=\"color: rgb(255, 0, 0);\">系统会返回操作结果，成功则返回 TRUE，失败则返回 FALSE，可以用变量接收，就知道是否删除成功：</span></p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">$deleteResult&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;rmdir</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'/a/b\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\">&nbsp;</p><h2>l. 获取目录中的所有文件名</h2><p style=\"text-align: justify;\">1、先打开要操作的目录，并用一个变量指向它</p><p style=\"text-align: justify;\">打开当前目录下的目录pic下的子目录common。</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">$handler&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;opendir</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'pic/common\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\">2、循环的读取目录下的所有文件</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(30, 52, 123);\">while</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$filename&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;readdir</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$handler</span><span style=\"color: rgb(147, 161, 161);\">))</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">!==</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(30, 52, 123);\">false</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">)</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">{</span></code></li><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span style=\"color: rgb(25, 95, 145);\">3</span><span style=\"color: rgb(147, 161, 161);\">、目录下都会有两个文件，名字为</span><span style=\"color: rgb(221, 17, 68);\">\'.\'</span><span style=\"color: rgb(147, 161, 161);\">和‘..’，不要对他们进行操作</span></code></li><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: rgb(30, 52, 123);\">if</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$filename&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">!=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(221, 17, 68);\">\".\"</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">&amp;&amp;</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;$filename&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">!=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(221, 17, 68);\">\"..\"</span><span style=\"color: rgb(147, 161, 161);\">)</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">{</span></code></li><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span style=\"color: rgb(25, 95, 145);\">4</span><span style=\"color: rgb(147, 161, 161);\">、进行处理</span></code></li><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">//这里简单的用echo来输出文件名</span></code></li><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $filename</span><span style=\"color: rgb(147, 161, 161);\">;</span></code></li><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">}</span></code></li><li><code class=\"language-c\"><span style=\"color: rgb(147, 161, 161);\">}</span></code></li></ol><p style=\"text-align: justify;\"><span style=\"color: rgb(255, 0, 0);\">注意：其中$filename = readdir($handler)是每次循环的时候将读取的文件名赋值给$filename，为了不陷于死循环，所以还要让$filename !== false。一定要用!==，因为如果某个文件名如果叫\'0\'，或者某些被系统认为是代表false，用!=就会停止循环</span><br></p><p style=\"text-align: justify;\">5、关闭目录</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">closedir</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$handler</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p>完整代码：</p><ol><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">/**</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">* 返回一个文件夹下的所有文件,包括子文件夹内的文件。</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">* @param string $dir 路径</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">* @return array</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">*/</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(30, 52, 123);\">function</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;scan_dir</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$dir</span><span style=\"color: rgb(147, 161, 161);\">)</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">{</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(72, 72, 76);\">$files&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;array</span><span style=\"color: rgb(147, 161, 161);\">();</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(30, 52, 123);\">if</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">is_dir</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$dir</span><span style=\"color: rgb(147, 161, 161);\">))</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">{</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(30, 52, 123);\">if</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$handle&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;opendir</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$dir</span><span style=\"color: rgb(147, 161, 161);\">))</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">{</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(30, 52, 123);\">while</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">((</span><span style=\"color: rgb(72, 72, 76);\">$file&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;readdir</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$handle</span><span style=\"color: rgb(147, 161, 161);\">))</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">!==</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(30, 52, 123);\">false</span><span style=\"color: rgb(147, 161, 161);\">)</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">{</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(30, 52, 123);\">if</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$file&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">!=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(221, 17, 68);\">\".\"</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">&amp;&amp;</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;$file&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">!=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(221, 17, 68);\">\"..\"</span><span style=\"color: rgb(147, 161, 161);\">)</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">{</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(30, 52, 123);\">if</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">is_dir</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$dir&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">.</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(221, 17, 68);\">\"/\"</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">.</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;$file</span><span style=\"color: rgb(147, 161, 161);\">))</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">{</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(72, 72, 76);\">$files</span><span style=\"color: rgb(147, 161, 161);\">[</span><span style=\"color: rgb(72, 72, 76);\">$file</span><span style=\"color: rgb(147, 161, 161);\">]</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;scan_dir</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$dir&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">.</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(221, 17, 68);\">\"/\"</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">.</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;$file</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">}</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(30, 52, 123);\">else</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">{</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(72, 72, 76);\">$files</span><span style=\"color: rgb(147, 161, 161);\">[]</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;$dir&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">.</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(221, 17, 68);\">\"/\"</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">.</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;$file</span><span style=\"color: rgb(147, 161, 161);\">;</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">}</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">}</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">}</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(72, 72, 76);\">closedir</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(72, 72, 76);\">$handle</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(30, 52, 123);\">return</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;$files</span><span style=\"color: rgb(147, 161, 161);\">;</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">}</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">}</span></code></li><li><code class=\"language-php\"><span style=\"color: rgb(147, 161, 161);\">}</span></code></li></ol><p style=\"text-align: justify;\">&nbsp;</p><h2>m. 对象是否是目录</h2><p style=\"text-align: justify;\">检查上级目录下的目标对象logo.jpg是否是目录。</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">$checkResult&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;is_dir</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'../logo.jpg\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\"><span style=\"color: rgb(255, 0, 0);\">注意：如果目标对象是目录系统返回true，否则返回false。上面例子的$checkResult当然是false。</span></p><p style=\"text-align: justify;\">&nbsp;</p><h2>n. 对象是否是文件</h2><p style=\"text-align: justify;\">检查上级目录下的目标对象logo.jpg是否是文件。</p><ol><li><code class=\"language-c\"><span style=\"color: rgb(72, 72, 76);\">$checkResult&nbsp;</span><span style=\"color: rgb(147, 161, 161);\">=</span><span style=\"color: rgb(72, 72, 76);\">&nbsp;is_file</span><span style=\"color: rgb(147, 161, 161);\">(</span><span style=\"color: rgb(221, 17, 68);\">\'../logo.jpg\'</span><span style=\"color: rgb(147, 161, 161);\">);</span></code></li></ol><p style=\"text-align: justify;\"><span style=\"color: rgb(255, 0, 0);\">注意：如果目标对象是文件，系统返回true，否则返回false。上面例子的$checkResult当然是true。</span></p>');
INSERT INTO `ape_document_article` VALUES (30, '<pre><code>框架：thinkphp&nbsp;\r\n版本：3.2.3&nbsp;\r\n内容：查询语句&nbsp;\r\n解决问题：重复字段问题<br></code></pre><p><br></p><pre><code>$Data  =  M(\'a\')-&gt;where($where)\r\n                            -&gt;Field(\'a.name as aname,b.name as uname,a.*\')\r\n                            -&gt;join(\'b on b.jb_id=a.id\',\'LEFT\')\r\n                            -&gt;order(\'a.id desc\')\r\n                            -&gt;select();<br></code></pre><p><br></p><p><span style=\"color: rgb(79, 79, 79); font-size: 16px;\">解释：a.* 查询a表所有的字段&nbsp;</span></p><p><span style=\"color: rgb(79, 79, 79); font-size: 16px;\">a.name as aname 转换a表中的name重复字段为aname</span></p>');
INSERT INTO `ape_document_article` VALUES (31, '<pre><code class=\"lang-php\">&lt;?php\r\nheader(\'Content-type:text/html,charset=utf-8\');\r\nfunction getList($path){\r\n	$list = array();\r\n	$new_dir=\'\';\r\n	$dh=scandir($path);\r\n	$num =count($dh);\r\n	for ($i=0; $i &lt; $num; $i++) {&nbsp;\r\n		// var_dump($dh[$i]);\r\n		if ($dh[$i] ==\'.\' || $dh[$i] == \'..\') {\r\n			continue;\r\n		}\r\n		if ($path !=\'/\') {\r\n			$new_dir = $path.\'/\'.$dh[$i];\r\n		}else{\r\n			$new_dir = $path.$dh[$i];\r\n		}\r\n		\r\n		// var_dump($new_dir);\r\n		if (is_dir($new_dir)) {\r\n			//如果是文件夹\r\n			$list[\'dir\'][]=$new_dir;\r\n			$file_dir=getList($new_dir);//递归开始\r\n&nbsp; &nbsp; 		if ($file_dir[\'dir\']) {\r\n&nbsp; &nbsp; 			//合并文件夹\r\n&nbsp; &nbsp; 			$list[\'dir\']=array_merge($list[\'dir\'],$file_dir[\'dir\']);\r\n&nbsp; &nbsp; 		}\r\n&nbsp; &nbsp; 		if ($file_dir[\'file\']) {\r\n&nbsp; &nbsp; 			//合并文件\r\n&nbsp; &nbsp; 			$list[\'file\']=array_merge($list[\'file\'],$file_dir[\'file\']);\r\n&nbsp; &nbsp; 		}\r\n		}\r\n		if (is_file($new_dir)) {\r\n			$list[\'file\'][]=$new_dir;\r\n		}\r\n	}\r\n	return $list;\r\n}\r\n\r\nfunction getList2($path){\r\n\r\n	$list = array();\r\n	$new_dir=\'\';\r\n	// 打开目录，然后读取其内容\r\n	if (is_dir($path)){\r\n	 &nbsp;if ($dh = opendir($path)){\r\n	 &nbsp; &nbsp;while (($file = readdir($dh)) !== false){\r\n	 &nbsp; &nbsp;	if ($file==\'.\' || $file==\'..\') {\r\n	 &nbsp; &nbsp;		//.和..跳过\r\n	 &nbsp; &nbsp;		continue;\r\n	 &nbsp; &nbsp;	}\r\n	 &nbsp; &nbsp;	//判断是不是根目录\r\n	 &nbsp; &nbsp;	if ($path !=\'/\') {\r\n				$new_dir=$path.\'/\'.$file;\r\n			}else{\r\n				$new_dir=$path.$file;\r\n			}\r\n	 &nbsp; &nbsp;	if (is_dir($new_dir)) {\r\n	 &nbsp; &nbsp;		$list[\'dir\'][]=$new_dir;\r\n	 &nbsp; &nbsp;		$file_dir=getList2($new_dir);//递归开始\r\n	 &nbsp; &nbsp;		if ($file_dir[\'dir\']) {\r\n	 &nbsp; &nbsp;			$list[\'dir\']=array_merge($list[\'dir\'],$file_dir[\'dir\']);\r\n	 &nbsp; &nbsp;		}\r\n	 &nbsp; &nbsp;		if ($file_dir[\'file\']) {\r\n	 &nbsp; &nbsp;			$list[\'file\']=array_merge($list[\'file\'],$file_dir[\'file\']);\r\n	 &nbsp; &nbsp;		}\r\n	 &nbsp; &nbsp;	}elseif (is_file($new_dir)) {\r\n	 &nbsp; &nbsp;		$list[\'file\'][]=$new_dir;\r\n	 &nbsp; &nbsp;	}\r\n	 &nbsp; &nbsp;}\r\n	 &nbsp; &nbsp;closedir($dh);\r\n	 &nbsp; &nbsp;return $list;\r\n	 &nbsp;}\r\n	}\r\n}\r\n\r\nvar_dump(getList(\'E:\\lnmp\'));\r\n<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (32, '<p>借助插件 实现demo见插件<br></p><p>效果</p><p><img alt=\"Image\" src=\"/upload/image/2018-03-15/5aaa310d7d0ec.png\" width=\"600\" height=\"354.770848985725\"><br></p>');
INSERT INTO `ape_document_article` VALUES (33, '<pre><code>mysql复习\r\n一:复习前的准备\r\n1:确认你已安装wamp\r\n2:确认你已安装ecshop,并且ecshop的数据库名为shop\r\n\r\n二	基础知识:\r\n1.数据库的连接\r\nmysql -u -p -h\r\n-u 用户名\r\n-p 密码\r\n-h host主机\r\n\r\n2:库级知识\r\n2.1 显示数据库: show databases;\r\n2.2 选择数据库: use dbname;\r\n2.3 创建数据库: create database dbname charset utf8;\r\n2.3 删除数据库: drop database dbname;\r\n\r\n3: 表级操作:\r\n3.1 显示库下面的表\r\nshow tables;\r\n\r\n3.2 查看表的结构: \r\ndesc tableName;\r\n\r\n3.3 查看表的创建过程: \r\nshow create table  tableName;\r\n\r\n3.4 创建表:\r\n　create table tbName (\r\n列名称1　列类型　[列参数]　[not null default ],\r\n....列2...\r\n....\r\n列名称N　列类型　[列参数]　[not null default ]\r\n)engine myisam/innodb charset utf8/gbk\r\n\r\n\r\n3.4的例子:\r\ncreate table user (\r\n    id int auto_increment,\r\n    name varchar(20) not null default \'\',\r\n    age tinyint unsigned not null default 0,\r\n   index id (id)\r\n   )engine=innodb charset=utf8;\r\n注:innodb是表引擎,也可以是myisam或其他,但最常用的是myisam和innodb,\r\ncharset 常用的有utf8,gbk;\r\n\r\n\r\n3.5 修改表\r\n3.5.1	修改表之增加列:\r\nalter table tbName \r\nadd 列名称１　列类型　[列参数]　[not null default ]　#(add之后的旧列名之后的语法和创建表时的列声明一样)\r\n\r\n3.5.2	修改表之修改列\r\nalter table tbName\r\nchange 旧列名  新列名  列类型　[列参数]　[not null default ]\r\n(注:旧列名之后的语法和创建表时的列声明一样)\r\n\r\n3.5.3	修改表之减少列:\r\nalter table tbName \r\ndrop 列名称;\r\n\r\n\r\n3.5.4	修改表之增加主键\r\nalter table tbName add primary key(主键所在列名);\r\n例:alter table goods add primary key(id)\r\n该例是把主键建立在id列上\r\n\r\n3.5.5	修改表之删除主键\r\nalter table tbName　drop primary key;\r\n\r\n3.5.6	修改表之增加索引\r\nalter table tbName add [unique|fulltext] index 索引名(列名);\r\n\r\n3.5.7	修改表之删除索引\r\nalter table tbName drop index 索引名;\r\n\r\n3.5.8	清空表的数据\r\ntruncate tableName;\r\n\r\n4:列类型讲解\r\n列类型:\r\n        整型:tinyint (0~255/-128~127) smallint (0~65535/-32768~32767) mediumint int bigint (参考手册11.2)\r\n        参数解释:\r\n        unsigned 无符号(不能为负)  zerofill 0填充  M 填充后的宽度\r\n        举例:tinyint unsigned;\r\n             tinyint(6) zerofill;   \r\n数值型\r\n        浮点型:float double\r\n        格式:float(M,D)  unsigned\\zerofill;\r\n\r\n\r\n字符型\r\n        char(m) 定长\r\n        varchar(m)变长\r\n        text\r\n\r\n列          实存字符i        实占空间            利用率\r\n\r\nchar(M)      0&lt;=i&lt;=M            M                i/m&lt;=100%\r\n\r\nvarchar(M)    0&lt;=i&lt;=M          i+1,2             i/i+1/2&lt;100%\r\n    \r\n\r\n               year       YYYY	范围:1901~2155. 可输入值2位和4位(如98,2012)\r\n日期时间类型   date       YYYY-MM-DD 如:2010-03-14\r\n               time       HH:MM:SS	如:19:26:32\r\n               datetime   YYYY-MM-DD  HH:MM:SS 如:2010-03-14 19:26:32\r\n               timestamp  YYYY-MM-DD  HH:MM:SS 特性:不用赋值,该列会为自己赋当前的具体时间 \r\n\r\n\r\n\r\n5:增删改查基本操作\r\n\r\n5.1 插入数据 \r\n	insert into 表名(col1,col2,……) values(val1,val2……); -- 插入指定列\r\n	insert into 表名 values (,,,,); -- 插入所有列\r\n	insert into 表名 values	-- 一次插入多行 \r\n	(val1,val2……),\r\n	(val1,val2……),\r\n	(val1,val2……);\r\n\r\n\r\n5.3修改数据\r\n	update tablename \r\n	set \r\n	col1=newval1,  \r\n	col2=newval2,\r\n	...\r\n	...\r\n	colN=newvalN\r\n	where 条件;\r\n\r\n5.4，删除数据    delete from tablenaeme where 条件;\r\n\r\n5.5，    select     查询\r\n\r\n  （1）  条件查询   where  a. 条件表达式的意义，表达式为真，则该行取出\r\n			   b.  比较运算符  = ，!=，&lt; &gt; &lt;=  &gt;=\r\n                           c.  like , not like (\'%\'匹配任意多个字符,\'_\'匹配任意单个字符) \r\n				in , not in , between and\r\n                           d. is null , is not null			\r\n  （2）  分组       group by \r\n			一般要配合5个聚合函数使用:max,min,sum,avg,count\r\n  （3）  筛选       having\r\n  （4）  排序       order by\r\n  （5）  限制       limit\r\n&nbsp;&nbsp;&nbsp;&nbsp;注意:特殊查询 NULL  ==&gt; is null\r\n\r\n\r\n\r\n6:	连接查询\r\n\r\n6.1， 左连接\r\n	.. left join .. on\r\n	table A left join table B on tableA.col1 = tableB.col2 ; \r\n  例句:\r\n  select 列名 from table A left join table B on tableA.col1 = tableB.col2\r\n2.  右链接: right join\r\n3.  内连接:  inner join\r\n\r\n左右连接都是以在左边的表的数据为准,沿着左表查右表.\r\n内连接是以两张表都有的共同部分数据为准,也就是左右连接的数据之交集.\r\n\r\n7	子查询\r\n  where 型子查询:内层sql的返回值在where后作为条件表达式的一部分\r\n  例句: select * from tableA where colA = (select colB from tableB where ...);\r\n  \r\n  from 型子查询:内层sql查询结果,作为一张表,供外层的sql语句再次查询\r\n  例句:select * from (select * from ...) as tableName where ....\r\n\r\n  \r\n8: 字符集\r\n  客服端sql编码 character_set_client\r\n  服务器转化后的sql编码 character_set_connection\r\n  服务器返回给客户端的结果集编码     character_set_results\r\n  快速把以上3个变量设为相同值: set names 字符集\r\n\r\n   存储引擎 engine=1\\2\r\n  1 Myisam  速度快 不支持事务 回滚\r\n  2 Innodb  速度慢 支持事务,回滚\r\n  \r\n  ①开启事务          start transaction\r\n  ②运行sql;          \r\n  ③提交,同时生效\\回滚 commit\\rollback\r\n\r\n  触发器 trigger\r\n  监视地点:表\r\n  监视行为:增 删 改\r\n  触发时间:after\\before\r\n  触发事件:增 删 改\r\n\r\n\r\n  创建触发器语法\r\n	create trigger tgName\r\n	after/before insert/delete/update \r\n	on tableName\r\n	for each row\r\n	sql; -- 触发语句\r\n	\r\n  删除触发器:drop trigger tgName;\r\n\r\n\r\n 索引\r\n 提高查询速度,但是降低了增删改的速度,所以使用索引时,要综合考虑.\r\n 索引不是越多越好,一般我们在常出现于条件表达式中的列加索引.\r\n 值越分散的列，索引的效果越好\r\n\r\n 索引类型\r\n primary key主键索引\r\n index 普通索引\r\n unique index 唯一性索引\r\n fulltext index 全文索引\r\n\r\n\r\n综合练习:\r\n连接上数据库服务器\r\n创建一个gbk编码的数据库\r\n建立商品表和栏目表,字段如下:\r\n\r\n商品表:goods\r\ngoods_id　--主键,\r\ngoods_name -- 商品名称\r\ncat_id  -- 栏目id\r\nbrand_id -- 品牌id\r\ngoods_sn -- 货号\r\ngoods_number -- 库存量\r\nshop_price  -- 价格\r\ngoods_desc　--商品详细描述\r\n\r\n栏目表:category\r\ncat_id --主键 \r\ncat_name -- 栏目名称\r\nparent_id -- 栏目的父id\r\n\r\n\r\n\r\n建表完成后,作以下操作:\r\n删除goods表的goods_desc 字段,及货号字段\r\n并增加字段:click_count  -- 点击量\r\n\r\n在goods_name列上加唯一性索引\r\n在shop_price列上加普通索引\r\n在clcik_count列上加普通索引\r\n删除click_count列上的索引\r\n\r\n\r\n对goods表插入以下数据:\r\n+----------+------------------------------+--------+----------+-----------+--------------+------------+-------------+\r\n| goods_id | goods_name                   | cat_id | brand_id | goods_sn  | goods_number | shop_price | click_count |\r\n+----------+------------------------------+--------+----------+-----------+--------------+------------+-------------+\r\n|        1 | KD876                        |      4 |        8 | ECS000000 |           10 |    1388.00 |           7 |\r\n|        4 | 诺基亚N85原装充电器          |      8 |        1 | ECS000004 |           17 |      58.00 |           0 |\r\n|        3 | 诺基亚原装5800耳机           |      8 |        1 | ECS000002 |           24 |      68.00 |           3 |\r\n|        5 | 索爱原装M2卡读卡器           |     11 |        7 | ECS000005 |            8 |      20.00 |           3 |\r\n|        6 | 胜创KINGMAX内存卡            |     11 |        0 | ECS000006 |           15 |      42.00 |           0 |\r\n|        7 | 诺基亚N85原装立体声耳机HS-82 |      8 |        1 | ECS000007 |           20 |     100.00 |           0 |\r\n|        8 | 飞利浦9@9v                   |      3 |        4 | ECS000008 |           17 |     399.00 |           9 |\r\n|        9 | 诺基亚E66                    |      3 |        1 | ECS000009 |           13 |    2298.00 |          20 |\r\n|       10 | 索爱C702c                    |      3 |        7 | ECS000010 |            7 |    1328.00 |          11 |\r\n|       11 | 索爱C702c                    |      3 |        7 | ECS000011 |            1 |    1300.00 |           0 |\r\n|       12 | 摩托罗拉A810                 |      3 |        2 | ECS000012 |            8 |     983.00 |          14 |\r\n|       13 | 诺基亚5320 XpressMusic       |      3 |        1 | ECS000013 |            8 |    1311.00 |          13 |\r\n|       14 | 诺基亚5800XM                 |      4 |        1 | ECS000014 |            4 |    2625.00 |           6 |\r\n|       15 | 摩托罗拉A810                 |      3 |        2 | ECS000015 |            3 |     788.00 |           8 |\r\n|       16 | 恒基伟业G101                 |      2 |       11 | ECS000016 |            0 |     823.33 |           3 |\r\n|       17 | 夏新N7                       |      3 |        5 | ECS000017 |            1 |    2300.00 |           2 |\r\n|       18 | 夏新T5                       |      4 |        5 | ECS000018 |            1 |    2878.00 |           0 |\r\n|       19 | 三星SGH-F258                 |      3 |        6 | ECS000019 |            0 |     858.00 |           7 |\r\n|       20 | 三星BC01                     |      3 |        6 | ECS000020 |           13 |     280.00 |          14 |\r\n|       21 | 金立 A30                     |      3 |       10 | ECS000021 |           40 |    2000.00 |           4 |\r\n|       22 | 多普达Touch HD               |      3 |        3 | ECS000022 |            0 |    5999.00 |          15 |\r\n|       23 | 诺基亚N96                    |      5 |        1 | ECS000023 |            8 |    3700.00 |          17 |\r\n|       24 | P806                         |      3 |        9 | ECS000024 |          148 |    2000.00 |          36 |\r\n|       25 | 小灵通/固话50元充值卡        |     13 |        0 | ECS000025 |            2 |      48.00 |           0 |\r\n|       26 | 小灵通/固话20元充值卡        |     13 |        0 | ECS000026 |            2 |      19.00 |           0 |\r\n|       27 | 联通100元充值卡              |     15 |        0 | ECS000027 |            2 |      95.00 |           0 |\r\n|       28 | 联通50元充值卡               |     15 |        0 | ECS000028 |            0 |      45.00 |           0 |\r\n|       29 | 移动100元充值卡              |     14 |        0 | ECS000029 |            0 |      90.00 |           0 |\r\n|       30 | 移动20元充值卡               |     14 |        0 | ECS000030 |            9 |      18.00 |           1 |\r\n|       31 | 摩托罗拉E8                   |      3 |        2 | ECS000031 |            1 |    1337.00 |           5 |\r\n|       32 | 诺基亚N85                    |      3 |        1 | ECS000032 |            1 |    3010.00 |           9 |\r\n+----------+------------------------------+--------+----------+-----------+--------------+------------+-------------+\r\n\r\n\r\n\r\n三	查询知识\r\n注:以下查询基于ecshop网站的商品表(ecs_goods)\r\n在练习时可以只取部分列,方便查看.\r\n\r\n1: 基础查询 where的练习:\r\n\r\n查出满足以下条件的商品\r\n1.1:主键为32的商品\r\nselect goods_id,goods_name,shop_price \r\n     from ecs_goods\r\n     where goods_id=32;\r\n1.2:不属第3栏目的所有商品\r\nselect goods_id,cat_id,goods_name,shop_price  from ecs_goods\r\n     where cat_id!=3;\r\n\r\n1.3:本店价格高于3000元的商品\r\n\r\n select goods_id,cat_id,goods_name,shop_price  from ecs_goods\r\n     where shop_price &gt;3000;\r\n\r\n1.4:本店价格低于或等于100元的商品\r\nselect goods_id,cat_id,goods_name,shop_price  from ecs_goods where shop_price &lt;=100;\r\n\r\n1.5:取出第4栏目或第11栏目的商品(不许用or)\r\nselect goods_id,cat_id,goods_name,shop_price  from ecs_goods\r\n     where cat_id in (4,11);\r\n\r\n\r\n1.6:取出100&lt;=价格&lt;=500的商品(不许用and)\r\nselect goods_id,cat_id,goods_name,shop_price  from ecs_goods\r\n     where shop_price between 100 and 500;\r\n\r\n\r\n1.7:取出不属于第3栏目且不属于第11栏目的商品(and,或not in分别实现)\r\nselect goods_id,cat_id,goods_name,shop_price  from ecs_goods     where cat_id!=3 and cat_id!=11;\r\n\r\nselect goods_id,cat_id,goods_name,shop_price  from ecs_goods     where cat_id not in (3,11);\r\n\r\n\r\n\r\n1.8:取出价格大于100且小于300,或者大于4000且小于5000的商品()\r\nselect goods_id,cat_id,goods_name,shop_price  from ecs_goods where shop_price&gt;100 and shop_price &lt;300 or shop_price &gt;4000 and shop_price &lt;5000;\r\n\r\n\r\n\r\n1.9:取出第3个栏目下面价格&lt;1000或&gt;3000,并且点击量&gt;5的系列商品\r\nselect goods_id,cat_id,goods_name,shop_price,click_count from ecs_goods where\r\ncat_id=3 and (shop_price &lt;1000 or shop_price&gt;3000) and click_count&gt;5;\r\n\r\n1.10:取出第1个栏目下面的商品(注意:1栏目下面没商品,但其子栏目下有)\r\nselect goods_id,cat_id,goods_name,shop_price,click_count from ecs_goods\r\n     where cat_id in (2,3,4,5);\r\n\r\n1.11:取出名字以\"诺基亚\"开头的商品\r\nselect goods_id,cat_id,goods_name,shop_price  from ecs_goods     where goods_name like \'诺基亚%\';\r\n\r\n\r\n1.12:取出名字为\"诺基亚Nxx\"的手机\r\nselect goods_id,cat_id,goods_name,shop_price  from ecs_goods  \r\n   where goods_name like \'诺基亚N__\';\r\n\r\n\r\n1.13:取出名字不以\"诺基亚\"开头的商品\r\nselect goods_id,cat_id,goods_name,shop_price from ecs_goos\r\n     where goods_name not like \'诺基亚%\';\r\n\r\n1.14:取出第3个栏目下面价格在1000到3000之间,并且点击量&gt;5 \"诺基亚\"开头的系列商品\r\nselect goods_id,cat_id,goods_name,shop_price  from ecs_goods where \r\ncat_id=3 and shop_price&gt;1000 and shop_price &lt;3000 and click_count&gt;5 and goods_name like \'诺基亚%\';\r\n\r\n\r\nselect goods_id,cat_id,goods_name,shop_price  from ecs_goods where \r\nshop_price between 1000 and 3000 and cat_id=3  and click_count&gt;5 and goods_name like \'诺基亚%\';\r\n\r\n\r\n1.15 一道面试题\r\n有如下表和数组\r\n把num值处于[20,29]之间,改为20\r\nnum值处于[30,39]之间的,改为30\r\n\r\nmian表\r\n+------+\r\n| num  |\r\n+------+\r\n|    3 |\r\n|   12 |\r\n|   15 |\r\n|   25 |\r\n|   23 |\r\n|   29 |\r\n|   34 |\r\n|   37 |\r\n|   32 |\r\n|   45 |\r\n|   48 |\r\n|   52 |\r\n+------+\r\n\r\n1.16 练习题:\r\n把good表中商品名为\'诺基亚xxxx\'的商品,改为\'HTCxxxx\',\r\n提示:大胆的把列看成变量,参与运算,甚至调用函数来处理 .\r\nsubstring(),concat()\r\n\r\n\r\n2	分组查询group:\r\n2.1:查出最贵的商品的价格\r\nselect max(shop_price) from ecs_goods;\r\n\r\n2.2:查出最大(最新)的商品编号\r\nselect max(goods_id) from ecs_goods;\r\n\r\n2.3:查出最便宜的商品的价格\r\nselect min(shop_price) from ecs_goods;\r\n\r\n2.4:查出最旧(最小)的商品编号\r\nselect min(goods_id) from ecs_goods;\r\n\r\n2.5:查询该店所有商品的库存总量\r\nselect sum(goods_number) from ecs_goods;\r\n\r\n2.6:查询所有商品的平均价\r\n select avg(shop_price) from ecs_goods;\r\n\r\n2.7:查询该店一共有多少种商品\r\n select count(*) from ecs_goods;\r\n\r\n\r\n2.8:查询每个栏目下面\r\n最贵商品价格\r\n最低商品价格\r\n商品平均价格\r\n商品库存量\r\n商品种类\r\n提示:(5个聚合函数,sum,avg,max,min,count与group综合运用)\r\nselect cat_id,max(shop_price) from ecs_goods  group by cat_id;\r\n\r\n\r\n3 having与group综合运用查询:\r\n3.1:查询该店的商品比市场价所节省的价格\r\nselect goods_id,goods_name,market_price-shop_price as j \r\n     from ecs_goods ;\r\n\r\n\r\n3.2:查询每个商品所积压的货款(提示:库存*单价)\r\nselect goods_id,goods_name,goods_number*shop_price  from ecs_goods\r\n\r\n3.3:查询该店积压的总货款\r\nselect sum(goods_number*shop_price) from ecs_goods;\r\n\r\n3.4:查询该店每个栏目下面积压的货款.\r\nselect cat_id,sum(goods_number*shop_price) as k from ecs_goods group by cat_id;\r\n\r\n3.5:查询比市场价省钱200元以上的商品及该商品所省的钱(where和having分别实现)\r\nselect goods_id,goods_name,market_price-shop_price  as k from ecs_goods\r\nwhere market_price-shop_price &gt;200;\r\n\r\nselect goods_id,goods_name,market_price-shop_price  as k from ecs_goods\r\nhaving k &gt;200;\r\n\r\n3.6:查询积压货款超过2W元的栏目,以及该栏目积压的货款\r\nselect cat_id,sum(goods_number*shop_price) as k from ecs_goods group by cat_id\r\nhaving k&gt;20000\r\n\r\n3.7:where-having-group综合练习题\r\n有如下表及数据\r\n+------+---------+-------+\r\n| name | subject | score |\r\n+------+---------+-------+\r\n| 张三 | 数学    |    90 |\r\n| 张三 | 语文    |    50 |\r\n| 张三 | 地理    |    40 |\r\n| 李四 | 语文    |    55 |\r\n| 李四 | 政治    |    45 |\r\n| 王五 | 政治    |    30 |\r\n+------+---------+-------+\r\n\r\n要求:查询出2门及2门以上不及格者的平均成绩\r\n\r\n## 一种错误做法\r\nmysql&gt; select name,count(score&lt;60) as k,avg(score) from stu group by name having k&gt;=2;\r\n+------+---+------------+\r\n| name | k | avg(score) |\r\n+------+---+------------+\r\n| 张三     | 3 |    60.0000 |\r\n| 李四     | 2 |    50.0000 |\r\n+------+---+------------+\r\n2 rows in set (0.00 sec)\r\n\r\nmysql&gt; select name,count(score&lt;60) as k,avg(score) from stu group by name;\r\n+------+---+------------+\r\n| name | k | avg(score) |\r\n+------+---+------------+\r\n| 张三     | 3 |    60.0000 |\r\n| 李四     | 2 |    50.0000 |\r\n| 王五     | 1 |    30.0000 |\r\n+------+---+------------+\r\n3 rows in set (0.00 sec)\r\n\r\nmysql&gt; select name,count(score&lt;60) as k,avg(score) from stu group by name having k&gt;=2;\r\n+------+---+------------+\r\n| name | k | avg(score) |\r\n+------+---+------------+\r\n| 张三     | 3 |    60.0000 |\r\n| 李四     | 2 |    50.0000 |\r\n+------+---+------------+\r\n2 rows in set (0.00 sec)\r\n\r\n#加上赵六后错误暴露\r\nmysql&gt; insert into stu \r\n    -&gt; values \r\n    -&gt; (\'赵六\',\'A\',100),\r\n    -&gt; (\'赵六\',\'B\',99),\r\n    -&gt; (\'赵六\',\'C\',98);\r\nQuery OK, 3 rows affected (0.05 sec)\r\nRecords: 3  Duplicates: 0  Warnings: 0\r\n\r\n#错误显现\r\nmysql&gt; select name,count(score&lt;60) as k,avg(score) from stu group by name having k&gt;=2;\r\n+------+---+------------+\r\n| name | k | avg(score) |\r\n+------+---+------------+\r\n| 张三 | 3 |    60.0000 |\r\n| 李四 | 2 |    50.0000 |\r\n| 赵六 | 3 |    99.0000 |\r\n+------+---+------------+\r\n3 rows in set (0.00 sec)\r\n\r\n#正确思路,先查看每个人的平均成绩\r\nmysql&gt; select name,avg(score) from stu group by name;\r\n+------+------------+\r\n| name | avg(score) |\r\n+------+------------+\r\n| 张三 |    60.0000 |\r\n| 李四 |    50.0000 |\r\n| 王五 |    30.0000 |\r\n| 赵六 |    99.0000 |\r\n+------+------------+\r\n4 rows in set (0.00 sec)\r\n\r\nmysql&gt; # 看每个人挂科情况\r\nmysql&gt; select name,score &lt; 60 from stu;\r\n+------+------------+\r\n| name | score &lt; 60 |\r\n+------+------------+\r\n| 张三 |          0 |\r\n| 张三 |          1 |\r\n| 张三 |          1 |\r\n| 李四 |          1 |\r\n| 李四 |          1 |\r\n| 王五 |          1 |\r\n| 赵六 |          0 |\r\n| 赵六 |          0 |\r\n| 赵六 |          0 |\r\n+------+------------+\r\n9 rows in set (0.00 sec)\r\n\r\nmysql&gt; #计算每个人的挂科科目\r\nmysql&gt; select name,sum(score &lt; 60) from stu group by name;\r\n+------+-----------------+\r\n| name | sum(score &lt; 60) |\r\n+------+-----------------+\r\n| 张三 |               2 |\r\n| 李四 |               2 |\r\n| 王五 |               1 |\r\n| 赵六 |               0 |\r\n+------+-----------------+\r\n4 rows in set (0.00 sec)\r\n\r\n#同时计算每人的平均分\r\nmysql&gt; select name,sum(score &lt; 60),avg(score) as pj from stu group by name;\r\n+------+-----------------+---------+\r\n| name | sum(score &lt; 60) | pj      |\r\n+------+-----------------+---------+\r\n| 张三 |               2 | 60.0000 |\r\n| 李四 |               2 | 50.0000 |\r\n| 王五 |               1 | 30.0000 |\r\n| 赵六 |               0 | 99.0000 |\r\n+------+-----------------+---------+\r\n4 rows in set (0.00 sec)\r\n\r\n#利用having筛选挂科2门以上的.\r\nmysql&gt; select name,sum(score &lt; 60) as gk ,avg(score) as pj from stu group by name having gk &gt;=2; \r\n+------+------+---------+\r\n| name | gk   | pj      |\r\n+------+------+---------+\r\n| 张三 |    2 | 60.0000 |\r\n| 李四 |    2 | 50.0000 |\r\n+------+------+---------+\r\n2 rows in set (0.00 sec)\r\n\r\n\r\n\r\n4:	order by 与 limit查询\r\n4.1:按价格由高到低排序\r\nselect goods_id,goods_name,shop_price from ecs_goods order by shop_price desc;\r\n\r\n4.2:按发布时间由早到晚排序\r\nselect goods_id,goods_name,add_time from ecs_goods order by add_time;\r\n\r\n4.3:接栏目由低到高排序,栏目内部按价格由高到低排序\r\nselect goods_id,cat_id,goods_name,shop_price from ecs_goods\r\n     order by cat_id ,shop_price desc;\r\n\r\n\r\n4.4:取出价格最高的前三名商品\r\nselect goods_id,goods_name,shop_price from ecs_goods order by shop_price desc limit 3;\r\n\r\n\r\n\r\n4.5:取出点击量前三名到前5名的商品\r\nselect goods_id,goods_name,click_count from ecs_goods order by click_count desc limit 2,3;\r\n\r\n5	连接查询\r\n5.1:取出所有商品的商品名,栏目名,价格\r\nselect goods_name,cat_name,shop_price from \r\necs_goods left join ecs_category\r\non ecs_goods.cat_id=ecs_category.cat_id;\r\n\r\n5.2:取出第4个栏目下的商品的商品名,栏目名,价格\r\nselect goods_name,cat_name,shop_price from \r\necs_goods left join ecs_category\r\non ecs_goods.cat_id=ecs_category.cat_id\r\nwhere ecs_goods.cat_id = 4;\r\n\r\n\r\n\r\n5.3:取出第4个栏目下的商品的商品名,栏目名,与品牌名\r\nselect goods_name,cat_name,brand_name from \r\necs_goods left join ecs_category\r\non ecs_goods.cat_id=ecs_category.cat_id\r\nleft join ecs_brand \r\non ecs_goods.brand_id=ecs_brand.brand_id\r\nwhere ecs_goods.cat_id = 4;\r\n\r\n5.4: 用友面试题\r\n\r\n根据给出的表结构按要求写出SQL语句。\r\nMatch 赛程表\r\n<table border=\"1\"><colgroup><col width=\"NaN%\"><col width=\"NaN%\"><col width=\"NaN%\"></colgroup><thead><tr><th>字段名称</th><th>字段类型</th><th>描述</th></tr></thead><tbody><tr><td>matchID</td><td>int</td><td>主键</td></tr><tr><td>hostTeamID</td><td>int</td><td>主队的ID</td></tr><tr><td>guestTeamID</td><td>int</td><td>客队的ID</td></tr><tr><td>matchResult</td><td>varchar(20)</td><td>比赛结果，如（2:0）</td></tr><tr><td>matchTime</td><td>date</td><td>比赛开始时间</td></tr></tbody></table>\r\n\r\nTeam 参赛队伍表\r\n<table border=\"1\"><colgroup><col width=\"NaN%\"><col width=\"NaN%\"><col width=\"NaN%\"></colgroup><thead><tr><th>字段名称</th><th>字段类型</th><th>描述</th></tr></thead><tbody><tr><td>teamID</td><td>int</td><td>主键</td></tr><tr><td>teamName</td><td>varchar(20)</td><td>队伍名称</td></tr></tbody></table>\r\n\r\nMatch的hostTeamID与guestTeamID都与Team中的teamID关联\r\n查出 2006-6-1 到2006-7-1之间举行的所有比赛，并且用以下形式列出：\r\n拜仁  2：0 不来梅 2006-6-21\r\n\r\nmysql&gt; select * from m;\r\n+-----+------+------+------+------------+\r\n| mid | hid  | gid  | mres | matime     |\r\n+-----+------+------+------+------------+\r\n|   1 |    1 |    2 | 2:0  | 2006-05-21 |\r\n|   2 |    2 |    3 | 1:2  | 2006-06-21 |\r\n|   3 |    3 |    1 | 2:5  | 2006-06-25 |\r\n|   4 |    2 |    1 | 3:2  | 2006-07-21 |\r\n+-----+------+------+------+------------+\r\n4 rows in set (0.00 sec)\r\n\r\nmysql&gt; select * from t;\r\n+------+----------+\r\n| tid  | tname    |\r\n+------+----------+\r\n|    1 | 国安     |\r\n|    2 | 申花     |\r\n|    3 | 公益联队 |\r\n+------+----------+\r\n3 rows in set (0.00 sec)\r\n\r\nmysql&gt; select hid,t1.tname as hname ,mres,gid,t2.tname as gname,matime\r\n    -&gt; from \r\n    -&gt; m left join t as t1\r\n    -&gt; on m.hid = t1.tid\r\n    -&gt; left join t as t2\r\n    -&gt; on m.gid = t2.tid;\r\n+------+----------+------+------+----------+------------+\r\n| hid  | hname    | mres | gid  | gname    | matime     |\r\n+------+----------+------+------+----------+------------+\r\n|    1 | 国安     | 2:0  |    2 | 申花     | 2006-05-21 |\r\n|    2 | 申花     | 1:2  |    3 | 公益联队 | 2006-06-21 |\r\n|    3 | 公益联队 | 2:5  |    1 | 国安     | 2006-06-25 |\r\n|    2 | 申花     | 3:2  |    1 | 国安     | 2006-07-21 |\r\n+------+----------+------+------+----------+------------+\r\n4 rows in set (0.00 sec)\r\n\r\n6	union查询\r\n6.1:把ecs_comment,ecs_feedback两个表中的数据,各取出4列,并把结果集union成一个结果集.\r\n\r\n6.2:3期学员碰到的一道面试题\r\nA表:\r\n+------+------+\r\n| id   | num  |\r\n+------+------+\r\n| a    |    5 |\r\n| b    |   10 |\r\n| c    |   15 |\r\n| d    |   10 |\r\n+------+------+\r\n\r\nB表:\r\n+------+------+\r\n| id   | num  |\r\n+------+------+\r\n| b    |    5 |\r\n| c    |   15 |\r\n| d    |   20 |\r\n| e    |   99 |\r\n+------+------+\r\n\r\n\r\n要求查询出以下效果:\r\n+------+----------+\r\n| id   |    num   |\r\n+------+----------+\r\n| a    |        5 |\r\n| b    |       15 |\r\n| c    |       30 |\r\n| d    |       30 |\r\n| e    |       99 |\r\n+------+----------+\r\n\r\ncreate table a (\r\nid char(1),\r\nnum int\r\n)engine myisam charset utf8;\r\n\r\ninsert into a values (\'a\',5),(\'b\',10),(\'c\',15),(\'d\',10);\r\n\r\ncreate table b (\r\nid char(1),\r\nnum int\r\n)engine myisam charset utf8;\r\n\r\ninsert into b values (\'b\',5),(\'c\',15),(\'d\',20),(\'e\',99);\r\n\r\n\r\nmysql&gt; # 合并 ,注意all的作用\r\nmysql&gt; select * from ta \r\n    -&gt; union all\r\n    -&gt; select * from tb;\r\n+------+------+\r\n| id   | num  |\r\n+------+------+\r\n| a    |    5 |\r\n| b    |   10 |\r\n| c    |   15 |\r\n| d    |   10 |\r\n| b    |    5 |\r\n| c    |   15 |\r\n| d    |   20 |\r\n| e    |   99 |\r\n+------+------+\r\n\r\n参考答案:\r\nmysql&gt; # sum,group求和\r\nmysql&gt; select id,sum(num) from (select * from ta union all select * from tb) as tmp group by id; \r\n+------+----------+\r\n| id   | sum(num) |\r\n+------+----------+\r\n| a    |        5 |\r\n| b    |       15 |\r\n| c    |       30 |\r\n| d    |       30 |\r\n| e    |       99 |\r\n+------+----------+\r\n5 rows in set (0.00 sec)\r\n\r\n\r\n7: 子查询:\r\n7.1:查询出最新一行商品(以商品编号最大为最新,用子查询实现)\r\nselect goods_id,goods_name from \r\n     ecs_goods where goods_id =(select max(goods_id) from ecs_goods);\r\n\r\n\r\n7.2:查询出编号为19的商品的栏目名称(用左连接查询和子查询分别)\r\n7.3:用where型子查询把ecs_goods表中的每个栏目下面最新的商品取出来\r\nselect goods_id,goods_name,cat_id from ecs_goods where goods_id in (select max(goods_id) from ecs_goods group by cat_id);\r\n7.4:用from型子查询把ecs_goods表中的每个栏目下面最新的商品取出来\r\nselect * from (select goods_id,cat_id,goods_name from ecs_goods order by goods_id desc) as t group by cat_id;\r\n7.5 用exists型子查询,查出所有有商品的栏目\r\nselect * from category\r\nwhere exists (select * from goods where goods.cat_id=category.cat_id);\r\n\r\n\r\n创建触发器:\r\n\r\n CREATE  trigger tg2\r\nafter insert on ord\r\nfor each row\r\nupdate goods set goods_number=goods_number-new.num where id=new.gid\r\n\r\nCREATE trigger tg3\r\nafter delete on ord\r\nfor each row\r\nupdate goods set goods_number=good_number+old.num where id=old.gid\r\n\r\n\r\nCREATE  trigger tg4\r\nafter update on ord\r\nfor each row\r\nupdate goods set goods_number=goods_number+old.num-new.num where id=old.gid</code></pre>');
INSERT INTO `ape_document_article` VALUES (34, '<p style=\"margin-left: auto; text-align: justify;\">屏蔽h5 全屏按钮,经测试 默认 chrome 会出现 firefox和 360急速无 ,屏蔽后均没有了</p><p style=\"margin-left: auto; text-align: justify;\"><code>video::-webkit-media-controls-fullscreen-button {display: none;}</code></p><p style=\"margin-left: auto; text-align: justify;\">屏蔽下载按钮</p><p style=\"margin-left: auto; text-align: justify;\"><code>video::-webkit-media-controls-enclosure {<br>&nbsp;&nbsp;&nbsp; overflow:hidden;<br>}<br>video::-webkit-media-controls-panel {<br>&nbsp;&nbsp; &nbsp; width: calc(100% + 30px);&nbsp;<br>}</code></p><p style=\"margin-left: auto; text-align: justify;\"><br></p><pre><code class=\"lang-html\">//去除右键事件<br style=\"margin: 0px; padding: 0px;\">$(\"video\").live(\"contextmenu\",function(){//取消右键事件<br style=\"margin: 0px; padding: 0px;\">    return false;});</code></pre>');
INSERT INTO `ape_document_article` VALUES (35, '<p>相信很多人都会在手机端背景上花心思--因为图片适应了PC端,PE端效果就惨不忍睹。适应了PE端,PC端的背景单调的可怜,对于像西顾这种完美主义者来说,一看到这种丑八怪背景就想关站跑路了。<br></p><p>例如,使用<a href=\"https://24bp.cn/907.html\">西顾图片APi</a>就要判断用户来源是什么,根据判断来源调用<a href=\"https://24bp.cn/907.html\">西顾图片Api</a>,则代码思路可以是:如果是手机端,则调用pc.png,否则调用pc.png。</p><p>Advantage:图片调用更精准,减少PE端加载速度,背景恶心情况直接改变。</p><p>话不多说,今天来演示下如何实现<a href=\"https://24bp.cn/tag/%e8%87%aa%e5%88%a4%e6%96%ad\" target=\"_blank\">自判断</a>访问是否为手机端来源。</p><p>&nbsp;</p><h3><a href=\"https://24bp.cn/tag/php\" target=\"_blank\">PHP</a>如何实现自判断来源？<br></h3><h4>方法一:</h4><h5>判断HTTP_USER_AGENT</h5><pre><code class=\"lang-php\">$agent = strtolower($_SERVER[\'HTTP_USER_AGENT\']);\r\nif (strpos($agent, \"netfront\") || strpos($agent, \"iphone\") || strpos($agent, \"midp-2.0\") || strpos($agent, \"opera mini\") || strpos($agent, \"ucweb\") || strpos($agent, \"android\") || strpos($agent, \"windows ce\") || strpos($agent, \"symbianos\")) {\r\n&nbsp; &nbsp; Header(\"HTTP/1.1 301 Moved Permanently\");\r\n&nbsp; &nbsp; header(\"Location:####\");\r\n&nbsp; &nbsp; die;\r\n}</code></pre><h5>方法二：判断HTTP_ACCEPT</h5><p></p><pre><code class=\"lang-php\">if (isset($_SERVER[\'HTTP_ACCEPT\']) &amp;&amp; (strpos($_SERVER[\'HTTP_ACCEPT\'], \'vnd.wap.wml\') !== FALSE) &amp;&amp; (strpos($_SERVER[\'HTTP_ACCEPT\'], \'text/html\') === FALSE || (strpos($_SERVER[\'HTTP_ACCEPT\'], \'vnd.wap.wml\') &lt; strpos($_SERVER[\'HTTP_ACCEPT\'], \'text/html\')))) {\r\n&nbsp; &nbsp; //手机访问\r\n&nbsp; &nbsp; Header(\"HTTP/1.1 301 Moved Permanently\");\r\n&nbsp; &nbsp; header(\"Location:####\");\r\n&nbsp; &nbsp; die;\r\n}\r\n<br></code></pre><p><span style=\"color: rgb(0, 0, 0); font-size: 20px;\">更完美的骚操作:</span><br></p><p>根据上述还有瑕疵的方法,往更高的层次着想:<br></p><p></p><pre><code class=\"lang-php\"><!--?php\r\nfunction isMobile() {\r\n    if (isset($_SERVER[\'HTTP_X_WAP_PROFILE\'])) {\r\n        return true;\r\n    }\r\n    if (isset($_SERVER[\'HTTP_VIA\'])) { //找不到为flase,否则为true\r\n        return stristr($_SERVER[\'HTTP_VIA\'], \"wap\") ? true : false;\r\n    }\r\n    if (isset($_SERVER[\'HTTP_USER_AGENT\'])) {\r\n        //此数组有待完善\r\n        $clientkeywords = array(\'nokia\', \'sony\', \'ericsson\', \'mot\', \'samsung\', \'htc\', \'sgh\', \'lg\', \'sharp\', \'sie-\', \'philips\', \'panasonic\', \'alcatel\', \'lenovo\', \'iphone\', \'ipod\', \'blackberry\', \'meizu\', \'android\', \'netfront\', \'symbian\', \'ucweb\', \'windowsce\', \'palm\', \'operamini\', \'operamobi\', \'openwave\', \'nexusone\', \'cldc\', \'midp\', \'wap\', \'mobile\'); // 从HTTP_USER_AGENT中查找手机浏览器的关键字\r\n        if (preg_match(\"/(\" . implode(\'|\', $clientkeywords) . \")/i\", strtolower($_SERVER[\'HTTP_USER_AGENT\']))) {\r\n            return true;\r\n        }\r\n    } //协议法，因为有可能不准确，放到最后判断\r\n    if (isset($_SERVER[\'HTTP_ACCEPT\'])) { // 如果只支持wml并且不支持html那一定是移动设备\r\n        // 如果支持wml和html但是wml在html之前则是移动设备\r\n        if ((strpos($_SERVER[\'HTTP_ACCEPT\'], \'vnd.wap.wml\') !== false) && (strpos($_SERVER[\'HTTP_ACCEPT\'], \'text/html\') === false || (strpos($_SERVER[\'HTTP_ACCEPT\'], \'vnd.wap.wml\') < strpos($_SERVER[\'HTTP_ACCEPT\'], \'text/html\')))) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n?--><br></code></pre><p>虽然还不是特别完善,但已经可以兼容十分多主流手机了。</p><p>JS骚操作:</p><pre><code class=\"lang-js\">/*&nbsp;---示例代码----*/\r\nfunction&nbsp;echo&nbsp;(){&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;var&nbsp;a=\"this&nbsp;is&nbsp;a&nbsp;example\";&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;alert(\"hello&nbsp;world&nbsp;\"+a);\r\n}\r\n/*&nbsp;---示例代码----*/<br></code></pre><div class=\"simditor-table\">好了,还有什么不懂的话,自己Google丰衣足食！<br></div>');
INSERT INTO `ape_document_article` VALUES (36, '<p>今天在研究过程中,发现<a href=\"http://blog.csdn.net/\">CSDN</a>的这篇材料不错,就拿下来做<a href=\"https://24bp.cn/tag/note\" target=\"_blank\">Note</a>s。</p><p>第一步：在网页代码的头部，加入一行viewport元标签</p><pre><code>&lt;meta&nbsp;name=\"viewport\"&nbsp;content=\"width=device-width,&nbsp;initial-scale=1\"&nbsp;/&gt;<br></code></pre><p><br>viewport是网页默认的宽度和高度，<br>上面这行代码的意思是：网页宽度默认等于屏幕宽度（width=device-width），<br>原始缩放比例（initial-scale=1）为1.0，即网页初始大小占屏幕面积的100%。</p><p>所有主流浏览器都支持这个设置，包括IE9。对于那些老式浏览器（主要是IE6、7、8），需要使用<a href=\"http://pan.baidu.com/s/1kT820ZH\" target=\"_blank\">css3-mediaqueries.js</a></p><pre><code>&lt;!--[if&nbsp;lt&nbsp;IE&nbsp;9]&gt;\r\n　　　　&lt;script&nbsp;src=\"http://css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js\"&gt;&lt;/script&gt;\r\n&lt;![endif]--&gt;</code></pre><p><br></p><p>第二步：（注意）不使用绝对宽度，字体大小</p><pre><code>width:auto;&nbsp;/&nbsp;width:XX%;<br></code></pre><p><br></p><p>第三步：（注意）字体大小</p><p>字体大小是页面默认大小的100%，即16像素<br>字体不要使用绝对大小\"PX\"，要使用相对大小“REM”</p><pre><code>html{font-size:62.5%;}\r\nbody&nbsp;{font:normal&nbsp;100%&nbsp;Arial,sans-serif;font-size:14px;&nbsp;font-size:1.4rem;&nbsp;}</code></pre><p>第四步：流动布局</p><p>\"流动布局\"的含义是，各个区块的位置都是浮动的，不是固定不变的</p><pre><code>.left{&nbsp;width:30%;&nbsp;float:left}\r\n.right{&nbsp;width:70%;&nbsp;float:right;}</code></pre><p>其好处是，如果宽度太小，放不下两个元素，后面的元素会自动滚动到前面元素的下方，不会在水平方向overflow（溢出），避免了水平滚动条的出现<br><br></p><p>第五步：选择加载CSS</p><p>\"<a href=\"https://24bp.cn/tag/%e8%87%aa%e9%80%82%e5%ba%94\" target=\"_blank\">自适应</a>网页设计\"的核心，就是CSS3引入的Media Query模块。自动探测屏幕宽度，然后加载相应的CSS文件</p><pre><code>&lt;link&nbsp;rel=\"stylesheet\"&nbsp;type=\"text/css\"&nbsp;media=\"screen&nbsp;and&nbsp;(max-device-width:&nbsp;600px)\"\r\nhref=\"style/css/css600.css\"&nbsp;/&gt;</code></pre><p>上面的代码意思是，如果屏幕宽度小于600像素（max-device-width: 600px），就加载css600.css文件。<br><br></p><p>如果屏幕宽度在600像素到980像素之间，则加载css600-980.css文件</p><pre><code>&lt;link&nbsp;rel=\"stylesheet\"&nbsp;type=\"text/css\"&nbsp;media=\"screen&nbsp;and&nbsp;(min-width:&nbsp;600px)&nbsp;and&nbsp;(max-device-width:&nbsp;980px)\"\r\nhref=\"css600-980.css\"&nbsp;/&gt;</code></pre><p><br>另有(不建议使用)：除了用html标签加载CSS文件，还可以在现有CSS文件中加载</p><pre><code>@import&nbsp;url(\"css600.css\")&nbsp;screen&nbsp;and&nbsp;(max-device-width:&nbsp;600px);</code></pre><p>第六步：CSS的@media规则</p><pre><code>@media&nbsp;screen&nbsp;and&nbsp;(max-device-width:&nbsp;400px)&nbsp;{&nbsp;&nbsp;.left{&nbsp;float:none;}&nbsp;}</code></pre><p>当屏幕小于400时，left取消了浮动</p><p>第七步：图片的自适应</p><p>\"自适应网页设计\"还必须实现图片的自动缩放。</p><pre><code>img,&nbsp;object&nbsp;{max-width:&nbsp;100%;}</code></pre><p><br>老版本的IE不支持max-width，所以只好写成：</p><pre><code>img&nbsp;{width:&nbsp;100%;}</code></pre><p><br>windows平台缩放图片时，可能出现图像失真现象。这时，可以尝试使用IE的专有命令</p><pre><code>img&nbsp;{&nbsp;width:100%;&nbsp;-ms-interpolation-mode:&nbsp;bicubic;}</code></pre><p><br>或使用js--imgSizer.js</p><pre><code>addLoadEvent(function()&nbsp;{\r\n　　　　var&nbsp;imgs&nbsp;=&nbsp;document.getElementById(\"content\").getElementsByTagName(\"img\");\r\n　　　　imgSizer.collate(imgs);\r\n　　});<br></code></pre><p><br></p><p>注：如有条件的话，最好还是根据不同大小的屏幕，加载不同分辨率的图片</p><p>简易式操作：</p><pre><code>&lt;html&gt;\r\n&lt;style&nbsp;type=\"text/css\"&gt;\r\nimg{&nbsp;max-width:100%;}\r\nvideo{&nbsp;max-width:100%;&nbsp;height:auto;}\r\nheader&nbsp;ul&nbsp;li{&nbsp;float:left;&nbsp;list-style:none;&nbsp;list-style-type:none;&nbsp;margin-right:10px;}\r\nheader&nbsp;select{display:none;}\r\n@media&nbsp;(max-width:960px){\r\n&nbsp;&nbsp;&nbsp;&nbsp;header&nbsp;ul{&nbsp;display:none;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;header&nbsp;select{&nbsp;display:inline-block;}\r\n}\r\n&lt;/style&gt;\r\n&lt;body&gt;\r\n&lt;header&gt;\r\n&lt;ul&gt;\r\n&lt;li&gt;&lt;a&nbsp;href=\"#\"&nbsp;class=\"active\"&gt;Home&lt;/a&gt;&lt;/li&gt;\r\n&lt;li&gt;&lt;a&nbsp;href=\"#\"&gt;AAA&lt;/a&gt;&lt;/li&gt;\r\n&lt;li&gt;&lt;a&nbsp;href=\"#\"&gt;BBB&lt;/a&gt;&lt;/li&gt;\r\n&lt;li&gt;&lt;a&nbsp;href=\"#\"&gt;CCC&lt;/a&gt;&lt;/li&gt;\r\n&lt;li&gt;&lt;a&nbsp;href=\"#\"&gt;DDD&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;select&gt;\r\n&lt;option&nbsp;class=\"selected\"&gt;&lt;a&nbsp;href=\"#\"&gt;Home&lt;/a&gt;&lt;/option&gt;\r\n&lt;option&nbsp;value=\"/AAA\"&gt;AAA&lt;/option&gt;\r\n&lt;option&nbsp;value=\"/BBB\"&gt;BBB&lt;/option&gt;\r\n&lt;option&nbsp;value=\"/CCC\"&gt;CCC&lt;/option&gt;\r\n&lt;option&nbsp;value=\"/DDD\"&gt;DDD&lt;/option&gt;\r\n&lt;/select&gt;\r\n&lt;/header&gt;\r\n&lt;/body&gt;</code></pre><p>有什么不懂,自己格物致知！</p>');
INSERT INTO `ape_document_article` VALUES (37, '<p><b>三个函数：</b></p><p>addslashes($string):用反斜线引用字符串中的特殊字符\\\' \\\" \\\\</p><p>$username=addslashes($username);</p><p>mysql_escape_string($string)：用反斜杠转义字符串中的特殊字符，用于mysql_query()查询。</p><p>$username=mysql_escape_string($username);</p><p>mysql_real_escape_string($string)：转义SQL语句中使用的字符串中的特殊字符，并考虑到连接的当前字符集，需要保证当前是连接状态才能用该函数，否则会报警告。 不转义%与_</p><p>$username=mysql_real_escape_string($username);</p><p><b>两种选择：</b></p><p><b>使用PDO</b></p><p>$stmt = $pdo-&gt;prepare(\\\'SELECT * FROM user WHERE name = :name\\\');</p><p>$stmt-&gt;execute(array(\\\':name\\\' =&gt; $name));</p><p>foreach ($stmt as $row) {</p><p>// do something with $row</p><p>}</p><p><b>使用mysqli</b></p><p>$stmt = $dbConnection-&gt;prepare(\\\'SELECT * FROM user WHERE name = ?\\\');</p><p>$stmt-&gt;bind_param(\\\'s\\\', $name);</p><p>$stmt-&gt;execute();</p><p>$result = $stmt-&gt;get_result();</p><p>while ($row = $result-&gt;fetch_assoc()) {</p><p>// do something with $row</p><p>}</p>');
INSERT INTO `ape_document_article` VALUES (38, '<p><span style=\\\"font-size: 10.5pt;\\\">packet main &nbsp;&nbsp;//<font>定义程序所属包</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">import </span><span style=\\\"font-size: 10.5pt;\\\">‘</span><span style=\\\"font-size: 10.5pt;\\\">fmt</span><span style=\\\"font-size: 10.5pt;\\\">’</span><span style=\\\"font-size: 10.5pt;\\\">&nbsp;&nbsp;//<font>导入依赖包</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">//<font>多个引入建议采取括号形式</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">import {</span></p><p><span style=\\\"font-size: 10.5pt;\\\">“</span><span style=\\\"font-size: 10.5pt;\\\">fmt</span><span style=\\\"font-size: 10.5pt;\\\">”</span></p><p><span style=\\\"font-size: 10.5pt;\\\">“</span><span style=\\\"font-size: 10.5pt;\\\">time</span><span style=\\\"font-size: 10.5pt;\\\">”</span></p><p><span style=\\\"font-size: 10.5pt;\\\">} </span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">const &nbsp;name string =</span><span style=\\\"font-size: 10.5pt;\\\">’</span><span style=\\\"font-size: 10.5pt;\\\">xxxx</span><span style=\\\"font-size: 10.5pt;\\\">’</span><span style=\\\"font-size: 10.5pt;\\\">&nbsp;&nbsp;//<font>定义常量</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font><br></font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">var &nbsp;a &nbsp;string = </span><span style=\\\"font-size: 10.5pt;\\\">‘</span><span style=\\\"font-size: 10.5pt;\\\">xxxx</span><span style=\\\"font-size: 10.5pt;\\\">’</span><span style=\\\"font-size: 10.5pt;\\\">&nbsp;&nbsp;//<font>全局变量</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font><br></font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">type 1223 int &nbsp;//<font>一般类型声明</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">type learn struct { &nbsp;&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">//<font>结构体声明</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">}</span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">type llearn interface{</span></p><p><span style=\\\"font-size: 10.5pt;\\\">//<font>接口声明</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">}</span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">func learn2(){</span></p><p><span style=\\\"font-size: 10.5pt;\\\">//<font>声明函数</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">}</span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">//mian<font>函数</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">function main(){</span></p><p><span style=\\\"font-size: 10.5pt;\\\">//<font>入口函数</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">}</span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">//<font>文件必须拥有一个</font><font>package</font><font>声明</font><font>,</font><font>表示文件所属的代码包</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">//<font>要生成可执行程序</font><font>,</font><font>必须要有</font><font>main</font><font>的</font><font>package</font><font>包</font><font>,</font><font>且必须在该包下面有</font><font>main()</font><font>函数</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>同一个路径下只能存在一个</font>package,<font>一个</font><font>package</font><font>可以拆多个源文件</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">ipmport<font>原理</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\"><img alt=\\\"图片1.png\\\" src=\\\"/upload/image/2018-04-20/5ad94cce1bc73.png\\\" width=\\\"554\\\" height=\\\"295\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><br></span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>先导入</font>packet 1 &gt;<font>如果</font><font>packet1</font><font>中导入了</font><font>packet2</font><font>那么再导入</font><font>pccket2 </font><font>依次类推</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><img alt=\\\"图片2.png\\\" src=\\\"/upload/image/2018-04-20/5ad94ceb291f9.png\\\" width=\\\"553\\\" height=\\\"280\\\"><br></span></p><p><span style=\\\"font-size: 10.5pt;\\\">import<font>别名</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">import <font>别名 原包名 &nbsp;在下面的语句中</font><font>,</font><font>原来的包名就变成了别名</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">import bieming fmt &nbsp;<font>调用就可以 &nbsp;</font><font>bieming.println()</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">import . <font>别名 &nbsp;&nbsp;</font><font>import . &nbsp;</font><font>包名 &nbsp;可以省略包名的前缀直接使用包内函数</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">import . &nbsp;fmt &nbsp;<font>调用 </font><font>println()</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">import _ </span><span style=\\\"font-size: 10.5pt;\\\">‘</span><span style=\\\"font-size: 10.5pt;\\\">xxx/<font>包</font></span><span style=\\\"font-size: 10.5pt;\\\">’</span><span style=\\\"font-size: 10.5pt;\\\">&nbsp;&nbsp;<font>注册包引擎</font>,<font>方便我们的调用</font><font>,</font><font>只执行</font><font>init</font><font>函数</font><font>,</font><font>而不能调用其他函数</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>数据类型</font> </span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;<img alt=\\\"图片3.png\\\" src=\\\"/upload/image/2018-04-20/5ad94cfd76c59.png\\\" width=\\\"554\\\" height=\\\"278\\\"></span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>字符串和布尔</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\"><img alt=\\\"图片4.png\\\" src=\\\"/upload/image/2018-04-20/5ad94d0ea100f.png\\\" width=\\\"554\\\" height=\\\"304\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>整型</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>整型</font> &nbsp;int8 &nbsp;int16 int32 int64</span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>无符号整型</font> <font>在整型前面加个</font>u &nbsp;uint8 &nbsp;uint16 uint32 uint64</span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>注意</font>:<font>默认值为 </font><font>0</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>浮点型和复数</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">float32 &nbsp;float64 </span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>默认值为</font>0</span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>复数</font> complex64 &nbsp;complex128</span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>默认值为</font> (0+0i)</span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>其他类型</font> </span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">byte <font>类似</font><font>uint8</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">rune <font>类似 </font><font>int32</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">uint 32/64</span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">int <font>和</font><font>uint </font><font>一样大</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">uintptr <font>无符号整型 &nbsp;用于存放一个指针</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>布尔类型</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\">Bool &nbsp;&nbsp;<font>值 </font><font>True/false</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>默认值为</font> false</span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><img width=\\\"554\\\" height=\\\"285\\\" src=\\\"file:///C:\\\\Users\\\\ADMINI~1\\\\AppData\\\\Local\\\\Temp\\\\ksohtml\\\\wps58FD.tmp.jpg\\\"><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>派生类型</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>类型零值和类型别名</font></span></p><p><span style=\\\"font-size: 10.5pt;\\\">&nbsp;</span></p><p><span style=\\\"font-size: 10.5pt;\\\"><font>类型所占存储大小</font></span></p>');
INSERT INTO `ape_document_article` VALUES (39, '<p><b>布尔类型</b><br></p><pre><code>布尔类型 &nbsp;bool &nbsp; true false\r\n\r\n</code></pre><p><b>数字类型</b></p><pre><code>数字类型\r\n\r\n整型&nbsp;int&nbsp;\r\nint8 int16 int32 int64\r\n\r\n无符号整型uint &nbsp;&nbsp;unsigned int\r\n\r\nuint8 &nbsp;uint16 &nbsp;uint32 uint64\r\n\r\n\r\n浮点型 float \r\n\r\nfloat32 float 64\r\n\r\n复合型complex  =&gt; float32*float32/float64*float64  同位数实数和虚数组成\r\n\r\ncomplex64 complex128\r\n\r\n\r\n其他数字类型\r\n\r\nbyte 类似 uint8\r\n\r\nrune 类似 int32\r\n\r\nuint 32 或 64 位\r\nint  与 uint 一样大小\r\n\r\n5uintptr无符号整型，无符号整型，用于存放一个指针</code></pre><p><b>字符串类型</b></p><pre><code>字符串 string\r\n\r\nvar str string //声明一个字符串\r\n</code></pre><p><b>派生类型</b></p><p><b><br></b></p><p><b>指针</b></p><pre><code>指针 &nbsp; 一个指针变量指向了一个值的内存地址\r\n\r\n声明方法 &nbsp;在类型前面加上 *\r\n\r\n访问指针变量中指向地址的值 变量前面+取地址符&amp; &nbsp; &amp;变量\r\n\r\n空指针 当一个指针被定义后没有分配到任何变量时，它的值为 nil。\r\n\r\n\r\n例子:\r\n\r\nvar a int= 20 &nbsp; /* 声明实际变量 */\r\n\r\nvar ip *int &nbsp; &nbsp; &nbsp; &nbsp;/* 声明指针变量 */\r\n\r\nip = &amp;a &nbsp;/* 指针变量的存储地址 */\r\n\r\n/*空指针*/\r\n\r\nvar &nbsp;ptr *int\r\n\r\nfmt.Printf(\\\\\\\"ptr 的值为 : %x\\\\\\\\n\\\\\\\", ptr &nbsp;)</code></pre><p><b><br></b></p><p><b>数组</b></p><pre><code><span pre;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">数组 相当于固定长度的php 有序数组\r\n\r\n声明   \r\nvar variable_name [SIZE] variable_type\r\nvar 数组名 [SIZE] 数组内变量类型\r\n\r\nvar  arr [5]float32{1000.0, 2.0, 3.4, 7.0, 50.0}</span></code></pre><p><b><br></b></p><p><b>结构体</b></p><pre><code><span pre;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">结构体 类似php的预先设置好属性的对象\r\n\r\n定义  结构体定义需要使用 type 和 struct 语句\r\n\r\ntype struct_variable_type struct {\r\n   member definition;\r\n   member definition;\r\n   ...\r\n   member definition;\r\n}\r\n\r\n声明结构体  var  结构体成员名  结构体类型\r\n\r\n例子:\r\n\r\ntype Books struct {\r\n   title string\r\n   author string\r\n   subject string\r\n   book_id int\r\n}\r\n\r\nfunc mian(){\r\n  var book1 Books\r\n}\r\n\r\n\r\n访问:  要访问结构体成员，需要使用点号 (.) 操作符\r\n\r\nstruct_variable_name.definition\r\n\r\n\r\n例子\r\n\r\npackage main\r\n\r\nimport \\\\\\\"fmt\\\\\\\"\r\n\r\ntype Books struct {\r\n&nbsp; &nbsp;title string\r\n&nbsp; &nbsp;author string\r\n&nbsp; &nbsp;subject string\r\n&nbsp; &nbsp;book_id int\r\n}\r\n\r\nfunc main() {\r\n&nbsp; &nbsp;var Book1 Books &nbsp; &nbsp; &nbsp; &nbsp;/* 声明 Book1 为 Books 类型 */\r\n&nbsp; &nbsp;var Book2 Books &nbsp; &nbsp; &nbsp; &nbsp;/* 声明 Book2 为 Books 类型 */\r\n\r\n&nbsp; &nbsp;/* book 1 描述 */\r\n&nbsp; &nbsp;Book1.title = \\\\\\\"Go 语言\\\\\\\"\r\n&nbsp; &nbsp;Book1.author = \\\\\\\"www.runoob.com\\\\\\\"\r\n&nbsp; &nbsp;Book1.subject = \\\\\\\"Go 语言教程\\\\\\\"\r\n&nbsp; &nbsp;Book1.book_id = 6495407\r\n\r\n&nbsp; &nbsp;/* book 2 描述 */\r\n&nbsp; &nbsp;Book2.title = \\\\\\\"Python 教程\\\\\\\"\r\n&nbsp; &nbsp;Book2.author = \\\\\\\"www.runoob.com\\\\\\\"\r\n&nbsp; &nbsp;Book2.subject = \\\\\\\"Python 语言教程\\\\\\\"\r\n&nbsp; &nbsp;Book2.book_id = 6495700\r\n\r\n&nbsp; &nbsp;/* 打印 Book1 信息 */\r\n&nbsp; &nbsp;fmt.Printf( \\\\\\\"Book 1 title : %s\\\\\\\\n\\\\\\\", Book1.title)\r\n&nbsp; &nbsp;fmt.Printf( \\\\\\\"Book 1 author : %s\\\\\\\\n\\\\\\\", Book1.author)\r\n&nbsp; &nbsp;fmt.Printf( \\\\\\\"Book 1 subject : %s\\\\\\\\n\\\\\\\", Book1.subject)\r\n&nbsp; &nbsp;fmt.Printf( \\\\\\\"Book 1 book_id : %d\\\\\\\\n\\\\\\\", Book1.book_id)\r\n\r\n&nbsp; &nbsp;/* 打印 Book2 信息 */\r\n&nbsp; &nbsp;fmt.Printf( \\\\\\\"Book 2 title : %s\\\\\\\\n\\\\\\\", Book2.title)\r\n&nbsp; &nbsp;fmt.Printf( \\\\\\\"Book 2 author : %s\\\\\\\\n\\\\\\\", Book2.author)\r\n&nbsp; &nbsp;fmt.Printf( \\\\\\\"Book 2 subject : %s\\\\\\\\n\\\\\\\", Book2.subject)\r\n&nbsp; &nbsp;fmt.Printf( \\\\\\\"Book 2 book_id : %d\\\\\\\\n\\\\\\\", Book2.book_id)\r\n}</span></code></pre><p><b><br></b></p><p><b>go语言函数</b></p><pre><code>Go 语言函数 没啥好解释都长这样就前缀 function=&gt;func\r\n\r\nfunc function_name( [parameter list] ) [return_types] {\r\n   函数体\r\n}\r\n\r\nfunc  函数名 (参数列表) 返回类型{\r\n&nbsp;&nbsp;函数体\r\n}\r\n\r\n<br></code></pre><p><b><br></b></p><p><b>Go 语言切片(Slice)</b></p><pre><code><span pre;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">Go 语言切片(Slice)\r\n\r\n不确定长度的数组就是切片\r\n\r\n声明   \r\nvar identifier []type \r\nvar 变量名 []类型 \r\n\r\n\r\n赋值 var 变量名 = []类型{值,值}\r\ns :=[] int {1,2,3 } \r\n\r\n\r\n切片不需要说明长度,或使用make()函数来创建切片:\r\nvar slice1 []type = make([]type, len) \r\n\r\n简写 slice1 := make([]type, len)\r\n\r\n也可以指定容量，其中capacity为可选参数\r\n\r\nmake([]T, length, capacity)</span></code></pre><p><b><br></b></p><p><b>Go 语言接口</b></p><pre><code><span pre;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">Go 语言接口\r\n都一样interface 声明就完事\r\n\r\n/* 定义接口 */\r\ntype interface_name interface {\r\n   method_name1 [return_type]\r\n   method_name2 [return_type]\r\n   method_name3 [return_type]\r\n   ...\r\n   method_namen [return_type]\r\n}\r\n\r\n/* 定义结构体 */\r\ntype struct_name struct {\r\n   /* variables */\r\n}\r\n\r\n/* 实现接口方法 */\r\nfunc (struct_name_variable struct_name) method_name1() [return_type] {\r\n   /* 方法实现 */\r\n}\r\n...\r\nfunc (struct_name_variable struct_name) method_namen() [return_type] {\r\n   /* 方法实现*/\r\n}</span></code></pre><p><b><br></b></p><p><b>Go 语言Map(集合)<br></b></p><pre><code class=\\\"lang-parl\\\\&quot;\\\"><span pre;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"=\\\"\\\\&quot;\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\&quot;\\\\\\\\\\\\\\\\&quot;\\\\\\\\&quot;\\\\&quot;\\\">Go 语言Map(集合) 相当于 php的关联数组\r\n\r\nkey 类似于索引，指向数据的值。\r\n\r\n\r\n定义 Map\r\n可以使用内建函数 make 也可以使用 map 关键字来定义 Map:\r\n/* 声明变量，默认 map 是 nil */\r\nvar map_variable map[key_data_type]value_data_type\r\n\r\n/* 使用 make 函数 */\r\nmap_variable := make(map[key_data_type]value_data_type)\r\n\r\n\r\n例子\r\n\r\n\r\n&nbsp; &nbsp;var countryCapitalMap map[string]string\r\n&nbsp; &nbsp;/* 创建集合 */\r\n&nbsp; &nbsp;countryCapitalMap = make(map[string]string)\r\n&nbsp; &nbsp;\r\n&nbsp; &nbsp;/* map 插入 key-value 对，各个国家对应的首都 */\r\n&nbsp; &nbsp;countryCapitalMap[\\\\\\\"France\\\\\\\"] = \\\\\\\"Paris\\\\\\\"\r\n&nbsp; &nbsp;countryCapitalMap[\\\\\\\"Italy\\\\\\\"] = \\\\\\\"Rome\\\\\\\"\r\n&nbsp; &nbsp;countryCapitalMap[\\\\\\\"Japan\\\\\\\"] = \\\\\\\"Tokyo\\\\\\\"\r\n&nbsp; &nbsp;countryCapitalMap[\\\\\\\"India\\\\\\\"] = \\\\\\\"New Delhi\\\\\\\"\r\n\r\n\r\n遍历&nbsp;\r\n\r\n/* 使用 key 输出 map 值 */\r\n&nbsp; &nbsp;for country := range countryCapitalMap {\r\n&nbsp; &nbsp; &nbsp; fmt.Println(\\\\\\\"Capital of\\\\\\\",country,\\\\\\\"is\\\\\\\",countryCapitalMap[country])\r\n&nbsp; &nbsp;}\r\n\r\n\r\n&nbsp; &nbsp;\r\n&nbsp; &nbsp;/* 查看元素在集合中是否存在 */\r\n&nbsp; &nbsp;captial, ok := countryCapitalMap[\\\\\\\"United States\\\\\\\"]\r\n&nbsp; &nbsp;/* 如果 ok 是 true, 则存在，否则不存在 */\r\n&nbsp; &nbsp;if(ok){\r\n&nbsp; &nbsp; &nbsp; fmt.Println(\\\\\\\"Capital of United States is\\\\\\\", captial) &nbsp;\r\n&nbsp; &nbsp;}else {\r\n&nbsp; &nbsp; &nbsp; fmt.Println(\\\\\\\"Capital of United States is not present\\\\\\\")&nbsp;\r\n&nbsp; &nbsp;}\r\n\r\n\r\ndelete() 函数\r\n\r\ndelete() 函数用于删除集合的元素, 参数为 map 和其对应的 key\r\ndelete(map,key);<br></span></code></pre>');
INSERT INTO `ape_document_article` VALUES (40, '<p>直接上程序</p><p><br></p><pre><code class=\\\"lang-php\\\">&lt;?php\r\n\r\n/**&nbsp;\r\n* for求一段数列的值\r\n* @param &nbsp; $arr &nbsp;有序数列\r\n* @return &nbsp;int &nbsp;sum\r\n**/&nbsp;\r\nfunction foArrSum($arr){\r\n	if (!is_array($arr)) {\r\n		//先判断是不是数组\r\n		return 0;	\r\n	}\r\n\r\n	//开始for循环\r\n	$num = count($arr);\r\n	$sum = 0; //初始化$sum\r\n	for ($i=0; $i &lt; $num; $i++) {&nbsp;\r\n		$sum += $arr[$i];\r\n	}\r\n\r\n	return $sum;\r\n}\r\n\r\n/**\r\n&nbsp;*	while求一段数列的值\r\n&nbsp;* 	@param &nbsp; $arr 有序数列\r\n&nbsp;* 	@return int sum\r\n&nbsp;*/\r\n\r\nfunction whileArrSum($arr){\r\n	if (!is_array($arr)) {\r\n		return 0;\r\n	}\r\n\r\n	//开始while循环\r\n	$num = count($arr);\r\n	$sum = 0; //初始化$sum\r\n	$i = 0; //初始化$i\r\n	while($i&lt;$num){\r\n		$sum += $arr[$i];\r\n		$i++;\r\n	}\r\n\r\n	return $sum;\r\n}\r\n\r\n/**\r\n&nbsp;*	递归求一段数列的值\r\n&nbsp;* 	@param &nbsp; $arr 有序数列\r\n&nbsp;* 	@return int sum\r\n&nbsp;*/\r\n\r\nfunction &nbsp;reaArrSum($arr,$i=0){\r\n	if (!is_array($arr)) {\r\n		return 0;\r\n	}\r\n\r\n	if ($i&lt;count($arr)) {\r\n		return $arr[$i] + reaArrSum($arr,$i+1);\r\n	}\r\n}\r\n\r\n$arr=array(1,3,4,5,7);\r\necho foArrSum($arr);\r\necho whileArrSum($arr);\r\necho reaArrSum($arr);</code></pre>');
INSERT INTO `ape_document_article` VALUES (41, '<p style=\\\"text-align: justify;\\\">斐波那契数列</p><p style=\\\"text-align: justify;\\\">又称兔子数列，或者黄金分割数列。指的是这样一个数列：</p><p style=\\\"text-align: justify;\\\">0、1、1、2、3、5、8、13、21……从第三项起，它的每一项都等于前两项的和。</p><pre><code>&lt;?php\r\n\r\n/**&nbsp;\r\n* php实现斐波那契数列\r\n* @param &nbsp; $num &nbsp;输出多少个\r\n* @return &nbsp;int &nbsp;sum\r\n**/&nbsp;\r\nfunction fbList($num){\r\n	if ($num&lt;0) {\r\n		return -1;\r\n	}\r\n	$arr = array();\r\n	for ($i=0; $i &lt; $num; $i++) {&nbsp;\r\n		if ($i&lt;2) {\r\n			$arr[$i] = $i;\r\n		}else{\r\n			(float)$arr[$i] = (float)$arr[$i-1] + (float)$arr[$i-2];\r\n		}\r\n		echo $arr[$i].\\\'&lt;/br&gt;\\\';\r\n	}\r\n	\r\n	return implode(\\\' \\\', $arr);\r\n}\r\n\r\necho fbList(100);<br></code></pre><p><br></p><p>别问我为啥 float 毕竟默认int 位数溢出伤不起 &nbsp;</p>');
INSERT INTO `ape_document_article` VALUES (42, '<p>转换很简单</p><pre><code>type_name(expression)\r\n\r\n直接把 变量 用要转换的的类型  当做方法包裹起来\r\n\r\n例子:\r\nvar num int = 10\r\nfloat(num)</code></pre>');
INSERT INTO `ape_document_article` VALUES (43, '<p>问题描述:</p><p>随机拿出一个0到100的数，让用户猜，每次猜大了或猜小了，都要给出提示，最后给出正确答案,最少要多少次</p><pre><code class=\\\"lang-php\\\\&quot;\\\"><!--?php\r\n\r\n/** \r\n*  php随机取一个数字(0-100)猜是多少\r\n* @param   $min  开始值\r\n* @param   $max  结束值 \r\n* @param   $time 循环次数\r\n* @return  int  sum\r\n**/ \r\nfunction guessNum($num,$min=0,$max=100,$time=0){\r\n	$gnum = ceil(($max+$min)/2);//猜想数为最大数和最小数的1/2进一取整\r\n	$time += 1;\r\n	if ($num!=$gnum) {\r\n		if($num < $gnum){\r\n			$max = $gnum;\r\n		}else{\r\n			$min = $gnum;\r\n		}\r\n		$time=guessNum($num,$min,$max,$time);\r\n	}\r\n	return $time;\r\n}\r\necho guessNum(5);</code-->/**&nbsp;\r\n* &nbsp;php随机取一个数字(0-100)猜是多少\r\n* @param &nbsp; $min &nbsp;开始值\r\n* @param &nbsp; $max &nbsp;结束值&nbsp;\r\n* @param &nbsp; $time 循环次数\r\n* @return &nbsp;int &nbsp;sum\r\n**/&nbsp;\r\nfunction guessNum($num,$min=0,$max=100,$time=0){\r\n	$gnum = ceil(($max+$min)/2);//猜想数为最大数和最小数的1/2进一取整\r\n	$time += 1;\r\n	if ($num!=$gnum) {\r\n		if($num &lt; $gnum){\r\n			$max = $gnum;\r\n		}else{\r\n			$min = $gnum;\r\n		}\r\n		$time=guessNum($num,$min,$max,$time);\r\n	}\r\n	return $time;\r\n}\r\necho guessNum(5);<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (44, '<p>问题 &nbsp; as 别名 &nbsp; where 别名为什么提示 别名不存在?</p><p>先看语句 &nbsp; &nbsp; &nbsp;&nbsp;</p><pre><code class=\"lang-bash\">select goods_id,goods_name,(market_price-shop_price) as k from goods where k&gt;0;&nbsp;</code></pre><p>解释:查询模型决定的</p><p><br></p><p>mysql 查询模型 &nbsp; 先去匹配 &nbsp;where 也就是 where后面的变量寻址 然后再来 筛选后面的显示 行,由于先去匹配别名所以别名找不到.但是这样就说别名没用了 ,不可能</p><p>having 可以用啊!!!!!!&nbsp;</p><p>having是后筛选的,先查出结果,然后having执行进一步筛选</p><pre><code>select goods_id,goods_name,(market_price-shop_price) as k from goods having k&gt;0;&nbsp;<br></code></pre><p>这样就可以了!!!</p>');
INSERT INTO `ape_document_article` VALUES (45, '<p>接口</p><p>定义:&nbsp;</p><p>interface &nbsp;接口名{</p><p style=\"margin-left: 40px;\">public function &nbsp;方法名();</p><p>}</p><p>class &nbsp;类名 implement &nbsp;接口名{</p><p style=\"margin-left: 40px;\">public function 方法名(){</p><p style=\"margin-left: 40px;\">//和接口中的一致</p><p style=\"margin-left: 40px;\">}</p><p>}</p><p>接口实例</p><pre><code class=\"lang-php\"><!--?php\r\ninterface People{\r\npublic function eat();\r\npublic function sleep();\r\n}\r\nclass Man implements People{\r\npublic function eat(){\r\necho \'吃吃吃次\';\r\n}\r\npublic function sleep(){\r\necho \'睡睡睡\';\r\n}\r\n}\r\nclass L{\r\npublic static function factory (People $user){\r\nreturn $user;\r\n}\r\n}\r\n$user=L::factory(new Man());\r\n$user--->&lt;?php\r\ninterface People{\r\npublic function eat();\r\npublic function sleep();\r\n}\r\nclass Man implements People{\r\npublic function eat(){\r\necho \'吃吃吃次\';\r\n}\r\npublic function sleep(){\r\necho \'睡睡睡\';\r\n}\r\n}\r\nclass L{\r\npublic static function factory (People $user){\r\nreturn $user;\r\n}\r\n}\r\n$user=L::factory(new Man());\r\n$user-&gt;eat();\r\n$user-&gt;sleep();<br></code></pre><p><br></p><p>抽象类</p><p>abstrct class 类名{</p><p style=\"margin-left: 40px;\">public function 方法名(){</p><p style=\"margin-left: 40px;\">}</p><p>}</p><p>class test extends 类名(){</p><p style=\"margin-left: 40px;\">$this-&gt;抽象类方法();</p><p>}</p><p><br></p><p>区别</p><ul><li><strong>对接口的使用方式是通过关键字implements来实现的，而对于抽象类的操作是使用类继承的关键字extends实现的，使用时要特别注意。</strong></li><li><strong>接口没有数据成员，但是抽象类有数据成员，抽象类可以实现数据的封装。</strong></li><li><strong>接口没有构造函数，抽象类可以有构造函数。</strong></li><li><strong>接口中的方法都是public类型，而抽象类中的方法可以使用private、protected或public来修饰。</strong></li><li><strong>一个类可以同时实现多个接口，但是只能实现一个抽象类。</strong></li><li><strong>抽象类中实现的方法不需要在子类中重新实现直接$this-&gt;方法()调用即可.但接口需要实现</strong></li><li><strong>接口中都是空方法</strong></li><li><strong>&nbsp;</strong></li><li><span style=\"color: rgb(255, 0, 0);\"><strong>相同点：函数体内不能写任何东西，连两个大括号都不能写！！！如：function getName();这样就行了</strong></span></li></ul>');
INSERT INTO `ape_document_article` VALUES (46, '<p>在header头所有引用开始的地方加上 base 标签可以解决引用路径的问题</p><p><img alt=\"QQ图片20180427152752.png\" src=\"/upload/image/2018-04-27/5ae2d102658d1.png\" width=\"538\" height=\"79\"><br></p><p><br></p><pre><code>&lt;base href=\"http://127.0.0.1/\" /&gt;&nbsp;<br></code></pre><p>后面引入直接写相对路径即可</p><p>例如</p><pre><code>http://127.0.0.1/static/bootstrap/css/bootstrap.min.css<br></code></pre><p>就直接写<br></p><pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"static/bootstrap/css/bootstrap.min.css\"&gt;<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (47, '<p>ctrl+h打开替换面板</p><p>选择正则表达式</p><p>输入</p><pre><code>\\/\\*tpa=h[^\"]* */<br></code></pre><p>替换为空即可</p><p><img alt=\"QQ图片20180428175843.png\" src=\"/upload/image/2018-04-28/5ae445fc531d5.png\" width=\"732\" height=\"472\"><br></p>');
INSERT INTO `ape_document_article` VALUES (48, '<p><code></code></p><p><code><br></code></p><p></p><p><span style=\"font-size: 1px;\"></span></p><pre><code class=\"lang-php\">header(\'content-type:text/html; charset=utf-8\');\r\n$stratTime = microtime(true);\r\n$startMemory = memory_get_usage();\r\n\r\n\r\n$endTime = microtime(true);\r\n$runtime = ($endTime - $stratTime) * 1000; //将时间转换为毫秒\r\n$endMemory = memory_get_usage();\r\n$usedMemory = ($endMemory - $startMemory) / 1024;\r\necho \"运行时间: {$runtime} 毫秒<br>\";\r\necho \"耗费内存: {$usedMemory} K\";\r\ndie();<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (49, '<p><span style=\"font-size: 1px;\">实验</span></p><p><span style=\"font-size: 1px;\">首先，设置一个Cookie</span></p><p><span style=\"font-size: 1px;\"></span></p><p><code><p><span style=\"font-size: 1px;\">&lt;?php&nbsp;&nbsp;</span></p><p><span style=\"font-size: 1px;\">	setcookie(\'\',\'aaa\',time()+3600,\'/\');</span></p><p><span style=\"font-size: 1px;\">	echo $_COOKIE[\'a</span><span style=\"font-size: 1px;\">\'];&nbsp;</span></p><p><span style=\"font-size: 1px;\">?&gt;&nbsp;</span></p></code></p><p><span style=\"font-size: 1px;\"></span></p><p><span style=\"font-size: 1px;\">下面我们来看看，当首次(当前页面)访问此页面时，会报错:</span></p><p><span style=\"font-size: 1px;\"><br></span></p><p><span style=\"font-size: 1px;\"><img alt=\"微信图片_20190801103719.png\" src=\"/upload/image/2019-08-01/5d42506a49e13.png\" width=\"814\" height=\"118\"><br></span><br></p><p><span style=\"font-size: 1px;\">分析</span></p><p><span style=\"font-size: 1px;\">那么为什么会报Undefined错误呢</span></p><p><span style=\"font-size: 1px;\">①首次访问【未刷新】</span></p><p><span style=\"font-size: 1px;\">我们来看看首次访问时页面响应头信息，发现</span></p><p><span style=\"font-size: 1px;\">[响应头信息]中增加Set-Coookie参数，但[请求头信息]中没有Cookie参数</span></p><p><span style=\"font-size: 1px;\">②&gt;1次访问[刷新过]</span></p><p><span style=\"font-size: 1px;\">我们来看第二次访问时页面显示结果:</span></p><p><br><img alt=\"微信图片_20190801103443.png\" src=\"/upload/image/2019-08-01/5d424fca584c8.png\" width=\"361\" height=\"752\"></p><p><span style=\"font-size: 1px;\">发现Cookie的值显示在了页面上。这时我们再来看看[响应头]和[请求头]信息,此时请求头信息中多了参数Cookie</span></p><p><span style=\"font-size: 1px;\">总结Cookie设置生效过程</span></p><p><span style=\"font-size: 1px;\">当我们首次访问设置Cookie的页面时，服务器会把设置的Cookie值通过响应头发送过来，告诉浏览器将cookie存储的本地相应文件夹中（注意:第一次访问时本地还没有存储Cookie,所以此时获取不到值）;</span></p><p><span style=\"font-size: 1px;\">当第二次访问(或在进行cookie设置后,过期前所有的访问)时，请求头信息你中都会把Cookie值携带。</span></p><p><span style=\"font-size: 1px;\">下面用图片更加形象的演示Cookie设置生效过程</span></p><p><span style=\"font-size: 1px;\"><br></span><img alt=\"20171110195541080.png\" src=\"/upload/image/2019-08-01/5d42502bd413b.png\" width=\"665\" height=\"324\"><br></p>');
INSERT INTO `ape_document_article` VALUES (50, '<h3>为什么慢</h3><p>由于默认情况下执行 composer 各种命令是去国外的 composer 官方镜像源获取需要安装的具体软件信息，所以在不使用代理、不翻墙的情况下，从国内访问国外服务器的速度相对比较慢</p><h3>如何修改镜像源</h3><p>可以使用阿里巴巴提供的 Composer 全量镜像&nbsp;<a href=\"https://mirrors.aliyun.com/composer/\" target=\"_blank\">https://mirrors.aliyun.com/composer/</a></p><h4>a). 配置只在当前项目生效</h4><pre><code>composer config repo.packagist composer https://mirrors.aliyun.com/composer/\r\n\r\n<span class=\"token comment\" style=\"color: rgb(138, 148, 150);\"># 取消当前项目配置</span>\r\ncomposer config --unset repos.packagist</code></pre><h4>b). 配置全局生效</h4><pre><code>composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/\r\n\r\n<span class=\"token comment\" style=\"color: rgb(138, 148, 150);\"># 取消全局配置</span>\r\ncomposer config -g --unset repos.packagist</code></pre><h4>c). 使用第三方软件快速修改、切换 composer 镜像源</h4><p><a href=\"https://github.com/slince/composer-registry-manager\">crm</a>&nbsp;composer registry manager</p><h5>安装 crm</h5><pre><code>composer global require slince/composer-registry-manager</code></pre><h5>列出可用的所有镜像源，前面带 * 代表当前使用的镜像</h5><pre><code>composer repo:ls\r\n\r\n-- --------------- ------------------------------------------------\r\n     composer        https://packagist.org\r\n     phpcomposer     https://packagist.phpcomposer.com\r\n     aliyun          https://mirrors.aliyun.com/composer\r\n     tencent         https://mirrors.cloud.tencent.com/composer\r\n     huawei          https://mirrors.huaweicloud.com/repository/php\r\n     laravel-china   https://packagist.laravel-china.org\r\n     cnpkg           https://php.cnpkg.org\r\n     sjtug           https://packagist.mirrors.sjtug.sjtu.edu.cn\r\n-- --------------- ------------------------------------------------</code></pre><h5>使用 aliyun 镜像源</h5><pre><code>composer repo:use aliyun\r\n\r\n<span class=\"token comment\" style=\"color: rgb(138, 148, 150);\"># 执行成功之后会输出类似以下信息</span>\r\n<span class=\"token punctuation\" style=\"color: rgb(254, 254, 254);\">[</span>OK<span class=\"token punctuation\" style=\"color: rgb(254, 254, 254);\">]</span> Use the repository <span class=\"token punctuation\" style=\"color: rgb(254, 254, 254);\">[</span>aliyun<span class=\"token punctuation\" style=\"color: rgb(254, 254, 254);\">]</span> success</code></pre><h5>再次执行 composer repo:ls 命令，看到前面带 * 的就是当前使用的镜像</h5><pre><code>composer repo:ls\r\n\r\n<span class=\"token comment\" style=\"color: rgb(138, 148, 150);\"># 可以看到 aliyun 前面有一个 * 号，代表当前使用的是 aliyun 的源</span>\r\n--- --------------- ------------------------------------------------\r\n      composer        https://packagist.org\r\n      phpcomposer     https://packagist.phpcomposer.com\r\n  *   aliyun          https://mirrors.aliyun.com/composer\r\n      tencent         https://mirrors.cloud.tencent.com/composer\r\n      huawei          https://mirrors.huaweicloud.com/repository/php\r\n      laravel-china   https://packagist.laravel-china.org\r\n      cnpkg           https://php.cnpkg.org\r\n      sjtug           https://packagist.mirrors.sjtug.sjtu.edu.cn\r\n--- --------------- ------------------------------------------------</code></pre><p>更多用法查看&nbsp;<a href=\"https://github.com/slince/composer-registry-manager\">crm</a>&nbsp;GitHub</p>');
INSERT INTO `ape_document_article` VALUES (51, '<pre><code>使用方法: \r\nhttps://cdn.yangju.vip/k/?url=后面加上播放的地址即可\r\nhttp://okjx.cc/?url=\r\nhttps://vip.bljiex.com/?v=\r\nhttp://ok.jlsprh.com/g/?url=\r\nhttps://cdn.yangju.vip/k/?url=\r\nhttps://jx.lache.me/cc/?url=\r\nhttps://api.653520.top/vip/?url=\r\nhttps://jx.ab33.top/vip/?url=\r\nhttps://vip.mpos.ren/v/?url=\r\nhttps://jx.000180.top/jx/?url=\r\nhttps://jx.km58.top/jx/?url=\r\nhttp://p.p40.top/?v=\r\nhttp://jiexi.071811.cc/jx2.php?url=\r\nhttp://jqaaa.com/jq3/?url=\r\nhttps://www.douban888.com/m3u8.php?url=\r\nhttp://www.600m.net/api/?v=  \r\nhttps://z1.m1907.cn/?jx=  \r\nhttps://www.8090g.cn/?url=\r\nhttp://jiexi.92fz.cn/player/vip.php?url=\r\nhttp://www.3aym.cn/?url=\r\nhttp://jx.x-99.cn/jx7.php?id=\r\nhttp://17kyun.com/api.php?url=\r\nhttps://www.administratorw.com/admin.php?url=\r\nhttp://tv.x-99.cn/api/wnapi.php?id=\r\nhttp://cs.drgxj.com/?url=\r\nhttp://jx.du2.cc/?url=\r\nhttp://jx.618ge.com/jx/9.php?url=\r\nhttp://vip.jlsprh.com/?url=\r\nhttp://jx.598110.com/?url=\r\nhttp://jx.598110.com/v/2.php?url=\r\nhttps://www.1717yun.com/jx/ty.php?url=\r\nhttp://www.1717yun.com/jx/ty.php?url=\r\nhttp://jx.drgxj.com/?url=\r\nhttp://jx.618ge.com/?url=\r\nhttp://vip.jlsprh.com/?url=\r\nhttp://jx.598110.com/?url=\r\nhttp://www.vipjiexi.com/tong.php?url=\r\nhttp://www.wmxz.wang/video.php?url=\r\nhttp://api.baiyug.vip/index.php?url=\r\nhttp://v.d9y.net/vip/?url=\r\nhttp://jx.du2.cc/?url=\r\n\r\n</code></pre><pre><code><div class=\"line\" id=\"LC11\" style=\"box-sizing: inherit; padding: 0px 10px; line-height: 20px; min-height: 20px;\"><span class=\"s2\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">(含第三方广告)\r\n</span><span class=\"s2\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">http://jiexi.071811.cc/jx2.php?url=\r\n</span><span style=\"white-space: pre; color: rgb(221, 17, 68);\">http://app.baiyug.cn:2019/vip/?url=\r\n</span><span style=\"white-space: pre; color: rgb(221, 17, 68);\">http://tv.beipy.com/jx/?url=\r\n</span><span class=\"s2\" style=\"white-space: pre; box-sizing: inherit; color: rgb(221, 17, 68);\">http://api.nepian.com/ckparse/?url=\r\n</span><span class=\"s2\" style=\"white-space: pre; box-sizing: inherit; color: rgb(221, 17, 68);\">http://j.zz22x.com/jx/?url=\r\n</span><span class=\"s2\" style=\"white-space: pre; box-sizing: inherit; color: rgb(221, 17, 68);\">http://api.wlzhan.com/sudu/?url=\r\n</span><span style=\"white-space: pre; color: rgb(221, 17, 68);\">http://jqaaa.com/jq3/?url=\r\n</span><span class=\"s2\" style=\"white-space: pre; box-sizing: inherit; color: rgb(221, 17, 68);\">http://aikan-tv.com/?url=</span></div><p>**全网解析接口 <span style=\"color: rgb(152, 166, 173); font-size: 14px;\">&nbsp;来自</span><a target=\"_blank\" href=\"http://typecho.org/\">Typecho</a><span style=\"color: rgb(152, 166, 173); font-size: 14px;\">&nbsp;</span>***\r\n<br>全网解析&nbsp;<a href=\"https://www.cuan.la/?url\" target=\"_blank\">https://www.cuan.la/?url</a>= （全网解析都支持，包括VIP资源，第三方切片资源）\r\n<span style=\"white-space: pre;\">P2P以开始全面收费，不想花钱的使用以下接口即可:\r\n</span><span style=\"white-space: pre;\">P2P版M3U8资源专属解析（国内口）：</span><a href=\"https://www.xmaocloud.com/m3u8.php?url\" target=\"_blank\" style=\"background-color: rgb(240, 240, 240); white-space: pre;\">https://www.xmaocloud.com/m3u8.php?url</a><span style=\"white-space: pre;\">=\r\n</span><span style=\"white-space: pre;\">P2P版M3U8资源专属解析（国外口）：</span><a href=\"https://www.629055.com/m3u8.php?url\" target=\"_blank\" style=\"background-color: rgb(240, 240, 240); white-space: pre;\">https://www.629055.com/m3u8.php?url</a><span style=\"white-space: pre;\">=\r\n</span><a href=\"https://www.kkflv.com/index.php?url\" target=\"_blank\" style=\"background-color: rgb(240, 240, 240); white-space: pre;\">https://www.kkflv.com/index.php?url</a><span style=\"white-space: pre;\">=</span></p></code></pre><pre><code>⑤号通用vip引擎系统【稳定通用&nbsp;http://jx.du2.cc/?url=\r\n④号通用vip引擎系统【超级稳定通用】http://jx.drgxj.com/?url=\r\n③号通用vip引擎系统【稳定通用】http://jx.618ge.com/?url=\r\n②号通用vip引擎系统【稳定通用】&nbsp;http://vip.jlsprh.com/?url=\r\n①号通用vip引擎系统【稳定通用】&nbsp;http://jx.598110.com/?url=\r\n\r\nhttp://www.506060.com/jx/?url=\r\nhttp://api.3jx.top/vip/?url=\r\nhttps://www.nxflv.com/?url=\r\nhttps://jx.688ing.com/?search=\r\nhttp://jx.598110.com/?url=\r\nhttp://jx.598110.com/?url=\r\nhttp://jqaaa.com/jq3/?url=\r\nhttps://www.1717yun.com/jx/ty.php?url=\r\nhttps://play.7nmg.net/?v=\r\nhttp://jqaaa.com/jx.php?url=<br></code></pre><pre><code>/*\r\n\r\n*需要自己提供解析接口，在百度搜索[vip解析]\r\n\r\n*说明[最多6条]：格式[@01=\"http://jx.xxxxxx.com/?url=\"]\r\n\r\n*说明2:把解析地址添加到下面格式的双引号中[@01=\"\"]\r\n\r\n*/\r\n\r\n<jxapi>\r\n\r\niqiyi={\r\n\r\n@01=\"https://660e.com/?url=\"\r\n\r\n@01=\"http://jx.mdai52.top/vip/?url=\"\r\n\r\n@01=\"http://jx.618g.com/?url=\"\r\n\r\n@01=\"http://www.27v9.cn/index.php?url=\"\r\n\r\n@01=\"https://660e.com/?url=\"\r\n\r\n@01=\"http://api.xyingyu.com/?url=\"\r\n\r\n};\r\n\r\n\r\n\r\nqq={\r\n\r\n@01=\"https://660e.com/?url=\"\r\n\r\n@01=\"http://jx.mdai52.top/vip/?url=\"\r\n\r\n@01=\"http://jx.618g.com/?url=\"\r\n\r\n@01=\"http://www.27v9.cn/index.php?url=\"\r\n\r\n@01=\"https://660e.com/?url=\"\r\n\r\n@01=\"http://api.xyingyu.com/?url=\"\r\n\r\n};\r\n\r\n\r\n\r\nmgtv={\r\n\r\n@01=\"https://660e.com/?url=\"\r\n\r\n@01=\"http://jx.mdai52.top/vip/?url=\"\r\n\r\n@01=\"http://jx.618g.com/?url=\"\r\n\r\n@01=\"http://www.27v9.cn/index.php?url=\"\r\n\r\n@01=\"https://660e.com/?url=\"\r\n\r\n@01=\"http://api.xyingyu.com/?url=\"\r\n\r\n};\r\n\r\n\r\n\r\nletv={\r\n\r\n@01=\"https://660e.com/?url=\"\r\n\r\n@01=\"http://jx.mdai52.top/vip/?url=\"\r\n\r\n@01=\"http://jx.618g.com/?url=\"\r\n\r\n@01=\"http://www.27v9.cn/index.php?url=\"\r\n\r\n@01=\"https://660e.com/?url=\"\r\n\r\n@01=\"http://api.xyingyu.com/?url=\"\r\n\r\n};\r\n\r\n\r\n\r\nyouku={\r\n\r\n@01=\"https://660e.com/?url=\"\r\n\r\n@01=\"http://jx.mdai52.top/vip/?url=\"\r\n\r\n@01=\"http://jx.618g.com/?url=\"\r\n\r\n@01=\"http://www.27v9.cn/index.php?url=\"\r\n\r\n@01=\"https://660e.com/?url=\"\r\n\r\n@01=\"http://api.xyingyu.com/?url=\"\r\n\r\n};\r\n\r\n\r\n\r\nsohu={\r\n\r\n@01=\"https://660e.com/?url=\"\r\n\r\n@01=\"http://jx.mdai52.top/vip/?url=\"\r\n\r\n@01=\"http://jx.618g.com/?url=\"\r\n\r\n@01=\"http://www.27v9.cn/index.php?url=\"\r\n\r\n@01=\"https://660e.com/?url=\"\r\n\r\n@01=\"http://api.xyingyu.com/?url=\"\r\n\r\n};\r\n\r\n\r\n\r\n</jxapi><br></code></pre>');
INSERT INTO `ape_document_article` VALUES (52, '<p>将地址自动转换,关联时候有些为子剧集第一集,关联会出现错误,所以转换为父剧集</p><pre><code><span style=\"color:#9876aa;background-color:#232525;\">$url </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#6a8759;background-color:#232525;\">\"http://v.youku.com/v_show/id_XMzg3ODI3OTI4NA==.html\"</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"background-color:#232525;\">var_dump(urlCover(</span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\'youku\'</span><span style=\"background-color:#232525;\">))</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\"><br></span><span style=\"color:#629755;background-color:#232525;font-style:italic;\">/** 获取META信息 */<br></span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">function </span><span style=\"color:#ffc66d;background-color:#232525;\">urlCover</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#9876aa;background-color:#232525;\">$site</span><span style=\"background-color:#232525;\">)<br></span><span style=\"background-color:#232525;\">{<br></span><span style=\"background-color:#232525;\">    </span><span style=\"color:#808080;background-color:#232525;\">/*简单处理*/<br></span><span style=\"color:#808080;background-color:#232525;\">    </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">if </span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$site </span><span style=\"background-color:#232525;\">== </span><span style=\"color:#6a8759;background-color:#232525;\">\'iqiyi\'</span><span style=\"background-color:#232525;\">){<br></span><span style=\"background-color:#232525;\">        </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">return </span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">    </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">if </span><span style=\"background-color:#232525;\">(str_replace(</span><span style=\"color:#6a8759;background-color:#232525;\">\'http://so.iqiyi.com/links\'</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\'\'</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"background-color:#232525;\">) != </span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"background-color:#232525;\">) {<br></span><span style=\"background-color:#232525;\">        </span><span style=\"color:#9876aa;background-color:#232525;\">$data </span><span style=\"background-color:#232525;\">= file_get_contents(</span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">        </span><span style=\"background-color:#232525;\">preg_match(</span><span style=\"color:#6a8759;background-color:#232525;\">\'/&lt;META\\s+http-equiv=\"refresh\"\\s+content=\"0;URL=</span><span style=\"color:#cc7832;background-color:#232525;\">\\\'</span><span style=\"color:#6a8759;background-color:#232525;\">([\\w\\W]*?)\"/si\'</span><span style=\"color:#cc7832;background-color:#232525;\">, </span><span style=\"color:#9876aa;background-color:#232525;\">$data</span><span style=\"color:#cc7832;background-color:#232525;\">, </span><span style=\"color:#9876aa;background-color:#232525;\">$matches</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">        </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">if </span><span style=\"background-color:#232525;\">(!</span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">empty</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$matches</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6897bb;background-color:#232525;\">1</span><span style=\"background-color:#232525;\">])) {<br></span><span style=\"background-color:#232525;\">            </span><span style=\"color:#9876aa;background-color:#232525;\">$url </span><span style=\"background-color:#232525;\">= substr(</span><span style=\"color:#9876aa;background-color:#232525;\">$matches</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6897bb;background-color:#232525;\">1</span><span style=\"background-color:#232525;\">]</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6897bb;background-color:#232525;\">0</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"background-color:#232525;\">-</span><span style=\"color:#6897bb;background-color:#232525;\">1</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">        </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">    }<br></span><span style=\"background-color:#232525;\">    </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">switch </span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$site</span><span style=\"background-color:#232525;\">){<br></span><span style=\"background-color:#232525;\">        </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">case </span><span style=\"color:#6a8759;background-color:#232525;\">\'qq\'</span><span style=\"background-color:#232525;\">:<br></span><span style=\"background-color:#232525;\">            </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">if </span><span style=\"background-color:#232525;\">(strpos(</span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\'?ptag=iqiyi\'</span><span style=\"background-color:#232525;\">)){<br></span><span style=\"background-color:#232525;\">                </span><span style=\"color:#9876aa;background-color:#232525;\">$url </span><span style=\"background-color:#232525;\">= substr(</span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6897bb;background-color:#232525;\">0</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"background-color:#232525;\">strpos(</span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\'?ptag=iqiyi\'</span><span style=\"background-color:#232525;\">))</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">            </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">if </span><span style=\"background-color:#232525;\">(strpos(</span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\'film.qq.com\'</span><span style=\"background-color:#232525;\">)){<br></span><span style=\"background-color:#232525;\">                </span><span style=\"color:#9876aa;background-color:#232525;\">$url </span><span style=\"background-color:#232525;\">= str_replace(</span><span style=\"color:#6a8759;background-color:#232525;\">\'http://film.qq.com/cover/\'</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\'https://v.qq.com/detail/\'</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">            </span><span style=\"color:#808080;background-color:#232525;\">//通过子剧集获取视频连接<br></span><span style=\"color:#808080;background-color:#232525;\">            </span><span style=\"color:#9876aa;background-color:#232525;\">$html</span><span style=\"background-color:#232525;\">=file_get_contents(</span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#9876aa;background-color:#232525;\">$dom </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">new </span><span style=\"background-color:#232525;\">DOMDocument()</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#808080;background-color:#232525;\">//从一个字符串加载HTML<br></span><span style=\"color:#808080;background-color:#232525;\">            </span><span style=\"background-color:#232525;\">@</span><span style=\"color:#9876aa;background-color:#232525;\">$dom</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">loadHTML</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$html</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#808080;background-color:#232525;\">//使该HTML规范化<br></span><span style=\"color:#808080;background-color:#232525;\">            </span><span style=\"color:#9876aa;background-color:#232525;\">$dom</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">normalize</span><span style=\"background-color:#232525;\">()</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#808080;background-color:#232525;\">//用DOMXpath加载DOM，用于查询<br></span><span style=\"color:#808080;background-color:#232525;\">            </span><span style=\"color:#9876aa;background-color:#232525;\">$xpath </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">new </span><span style=\"background-color:#232525;\">DOMXPath(</span><span style=\"color:#9876aa;background-color:#232525;\">$dom</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#808080;background-color:#232525;\">#获取播放器播放标题的a标签的地址<br></span><span style=\"color:#808080;background-color:#232525;\">            </span><span style=\"color:#9876aa;background-color:#232525;\">$hrefs </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#9876aa;background-color:#232525;\">$xpath</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">query</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#6a8759;background-color:#232525;\">\"//*[@id=</span><span style=\"color:#cc7832;background-color:#232525;\">\\\"</span><span style=\"color:#6a8759;background-color:#232525;\">container_player</span><span style=\"color:#cc7832;background-color:#232525;\">\\\"</span><span style=\"color:#6a8759;background-color:#232525;\">]/div/div[1]/div[2]/div[2]/div[1]/div[1]/div[1]/h2/a//@href\"</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">for </span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$i </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#6897bb;background-color:#232525;\">0</span><span style=\"color:#cc7832;background-color:#232525;\">; </span><span style=\"color:#9876aa;background-color:#232525;\">$i </span><span style=\"background-color:#232525;\">&lt; </span><span style=\"color:#9876aa;background-color:#232525;\">$hrefs</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#9876aa;background-color:#232525;\">length</span><span style=\"color:#cc7832;background-color:#232525;\">; </span><span style=\"color:#9876aa;background-color:#232525;\">$i</span><span style=\"background-color:#232525;\">++) {<br></span><span style=\"background-color:#232525;\">                </span><span style=\"color:#9876aa;background-color:#232525;\">$href </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#9876aa;background-color:#232525;\">$hrefs</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">item</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$i</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">                </span><span style=\"color:#9876aa;background-color:#232525;\">$linktext </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#9876aa;background-color:#232525;\">$href</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#9876aa;background-color:#232525;\">nodeValue</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">                </span><span style=\"color:#9876aa;background-color:#232525;\">$url </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#6a8759;background-color:#232525;\">\'https://v.qq.com\'</span><span style=\"background-color:#232525;\">.</span><span style=\"color:#9876aa;background-color:#232525;\">$linktext</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">                </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">break</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">            </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">break</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">        </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">case </span><span style=\"color:#6a8759;background-color:#232525;\">\'youku\'</span><span style=\"background-color:#232525;\">:<br></span><span style=\"background-color:#232525;\">            </span><span style=\"color:#808080;background-color:#232525;\">//通过子剧集获取视频连接<br></span><span style=\"color:#808080;background-color:#232525;\">            </span><span style=\"color:#9876aa;background-color:#232525;\">$html</span><span style=\"background-color:#232525;\">=file_get_contents(</span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#9876aa;background-color:#232525;\">$dom </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">new </span><span style=\"background-color:#232525;\">DOMDocument()</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#808080;background-color:#232525;\">//从一个字符串加载HTML<br></span><span style=\"color:#808080;background-color:#232525;\">            </span><span style=\"background-color:#232525;\">@</span><span style=\"color:#9876aa;background-color:#232525;\">$dom</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">loadHTML</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$html</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#808080;background-color:#232525;\">//使该HTML规范化<br></span><span style=\"color:#808080;background-color:#232525;\">            </span><span style=\"color:#9876aa;background-color:#232525;\">$dom</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">normalize</span><span style=\"background-color:#232525;\">()</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#808080;background-color:#232525;\">//用DOMXpath加载DOM，用于查询<br></span><span style=\"color:#808080;background-color:#232525;\">            </span><span style=\"color:#9876aa;background-color:#232525;\">$xpath </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">new </span><span style=\"background-color:#232525;\">DOMXPath(</span><span style=\"color:#9876aa;background-color:#232525;\">$dom</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#808080;background-color:#232525;\">#获取播放器播放标题的a标签的地址<br></span><span style=\"color:#808080;background-color:#232525;\">            </span><span style=\"color:#9876aa;background-color:#232525;\">$hrefs </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#9876aa;background-color:#232525;\">$xpath</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">query</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#6a8759;background-color:#232525;\">\" //*[@class=</span><span style=\"color:#cc7832;background-color:#232525;\">\\\"</span><span style=\"color:#6a8759;background-color:#232525;\">tvinfo</span><span style=\"color:#cc7832;background-color:#232525;\">\\\"</span><span style=\"color:#6a8759;background-color:#232525;\">]/h2/a//@href\"</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">for </span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$i </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#6897bb;background-color:#232525;\">0</span><span style=\"color:#cc7832;background-color:#232525;\">; </span><span style=\"color:#9876aa;background-color:#232525;\">$i </span><span style=\"background-color:#232525;\">&lt; </span><span style=\"color:#9876aa;background-color:#232525;\">$hrefs</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#9876aa;background-color:#232525;\">length</span><span style=\"color:#cc7832;background-color:#232525;\">; </span><span style=\"color:#9876aa;background-color:#232525;\">$i</span><span style=\"background-color:#232525;\">++) {<br></span><span style=\"background-color:#232525;\">                </span><span style=\"color:#9876aa;background-color:#232525;\">$href </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#9876aa;background-color:#232525;\">$hrefs</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">item</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$i</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">                </span><span style=\"color:#9876aa;background-color:#232525;\">$linktext </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#9876aa;background-color:#232525;\">$href</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#9876aa;background-color:#232525;\">nodeValue</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">                </span><span style=\"color:#9876aa;background-color:#232525;\">$url </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#6a8759;background-color:#232525;\">\'https:\'</span><span style=\"background-color:#232525;\">.</span><span style=\"color:#9876aa;background-color:#232525;\">$linktext</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">                </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">break</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">            </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">break</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#808080;background-color:#232525;\">/*其他等需要的时候再行适配,imgo不需要适配连接正确*/<br></span><span style=\"color:#808080;background-color:#232525;\">        </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">default</span><span style=\"background-color:#232525;\">:<br></span><span style=\"background-color:#232525;\">            </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">break</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">    </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">return </span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"background-color:#232525;\">}</span></code></pre>');
INSERT INTO `ape_document_article` VALUES (53, '<p>网站升级https协议。</p><p>在 HTTPS 承载的页面上不允许出现 http 请求，一旦出现就是提示或报错：</p><pre><code class=\"lang-js\">Mixed Content: The page at \'https://www.example.com\' was loaded over HTTPS,&nbsp;\r\nbut requested an insecure image ‘http://static.example.com/test.jpg’.&nbsp;\r\nThis content should also be served over HTTPS.<br></code></pre><p>因此即使使用到的域名对http请求已经强制了https，但是在页面中浏览器对于http请求压根就不会发送，那么就必需替换页面上所有的http为https，而我遇到的是个使用了十年的老系统，代码中有很多硬编码的http地址，一一替换的话要替换2万多行。。</p><p>于是从http协议入手，在响应header中添加upgrade-insecure-requests，即在php入口文件中添加：</p><pre><code class=\"lang-php\">header(\"Content-Security-Policy: upgrade-insecure-requests\");<br></code></pre><p>或着也可以在由前端在html页面中添加meta：</p><pre><code class=\"lang-html\">&lt;meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\" /&gt;<br></code></pre><p>或者在nginx配置中进行header的添加</p><pre><code class=\"lang-bash\">server {\r\n&nbsp; &nbsp; &nbsp; &nbsp; listen&nbsp; &nbsp; &nbsp; &nbsp;443;\r\n&nbsp; &nbsp; &nbsp; &nbsp; server_name&nbsp; www.example.com;\r\n&nbsp; &nbsp; &nbsp; &nbsp; error_log&nbsp; /logs/nginx/error.log;\r\n&nbsp; &nbsp; &nbsp; &nbsp; root /var/www/www.example.com;\r\n&nbsp; &nbsp; &nbsp; &nbsp; index&nbsp; index.php index.html index.htm;\r\n&nbsp; &nbsp; &nbsp; &nbsp; ssl on;\r\n&nbsp; &nbsp; &nbsp; &nbsp; ssl_certificate&nbsp; &nbsp;cert/test/test.pem;\r\n&nbsp; &nbsp; &nbsp; &nbsp; ssl_certificate_key&nbsp; cert/test/test.key;\r\n&nbsp; &nbsp; &nbsp; &nbsp; ssl_session_timeout 5m;\r\n&nbsp; &nbsp; &nbsp;\r\n&nbsp; &nbsp; &nbsp;	#添加响应头\r\n&nbsp; &nbsp; &nbsp; &nbsp; add_header Content-Security-Policy \"upgrade-insecure-requests\'\";\r\n&nbsp; &nbsp; &nbsp; &nbsp; location / {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!-f $request_filename){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rewrite ^/(.*)$ /index.php?s=$1 last;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; limit_except GET POST DELETE PUT {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; deny all;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n……\r\n}<br></code></pre><p>从而让浏览器对页面中的所有http请求，都升级为https协议发送请求，从而省去了逐一修改url的协议的麻烦。</p>');
INSERT INTO `ape_document_article` VALUES (54, '<p>linux杀死相关所有进程</p><pre><code class=\"lang-bash\">&nbsp;ps -ef|grep chrome|grep -v grep|cut -c 9-15|xargs kill -9<br></code></pre><p>chrome修改你要杀死的进程</p>');
INSERT INTO `ape_document_article` VALUES (55, '<p style=\"margin-left: auto;\">1、查看系统是否有僵尸进程</p><p style=\"margin-left: auto;\"><img src=\"http://img.blog.csdn.net/20150107164521516?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGhsX2xobF9saGw=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><img alt=\"20150107164521516.png\" src=\"/upload/image/2019-09-20/5d8474e1d45e6.png\" width=\"643\" height=\"329\"></p><p style=\"margin-left: auto;\">使用Top命令查找，当zombie前的数量不为0时，即系统内存在相应数量的僵尸进程。</p><p style=\"margin-left: auto;\">2、定位僵尸进程</p><p style=\"margin-left: auto;\">使用命令&nbsp;定位僵尸进程以及该僵尸进程的父进程</p><pre><code class=\"lang-bash\">ps -A -ostat,ppid,pid,cmd |grep -e \'^[Zz]\'<br></code></pre><p style=\"margin-left: auto;\"><img src=\"http://img.blog.csdn.net/20150107164805082?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGhsX2xobF9saGw=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><img alt=\"20150107164805082.png\" src=\"/upload/image/2019-09-20/5d8474f716a6b.png\" width=\"485\" height=\"45\"></p><p style=\"margin-left: auto;\">僵尸进程ID：3457，父进程ID：3425</p><p style=\"margin-left: auto;\">僵尸进程ID：3533，父进程ID：3511</p><p style=\"margin-left: auto;\">3、使用Kill -HUP 僵尸进程ID来杀死僵尸进程，往往此种情况无法杀死僵尸进程，此时就需要杀死僵尸进程的父进程</p><pre><code class=\"lang-bash\">kill -HUP 僵尸进程父ID<br></code></pre><p style=\"margin-left: auto;\"><img src=\"http://img.blog.csdn.net/20150107165046527?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGhsX2xobF9saGw=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><img alt=\"20150107165046527.png\" src=\"/upload/image/2019-09-20/5d84750e6e844.png\" width=\"258\" height=\"15\"></p><p style=\"margin-left: auto;\">然后使用上面的语句查询该僵尸进程是否被杀死</p><p style=\"margin-left: auto;\"><img src=\"http://img.blog.csdn.net/20150107165055828?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGhsX2xobF9saGw=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><img alt=\"20150107165055828.png\" src=\"/upload/image/2019-09-20/5d84751525a5d.png\" width=\"473\" height=\"40\"></p><p style=\"margin-left: auto;\">4、参数解读</p><pre><code class=\"lang-bash\">ps -A -ostat,ppid,pid,cmd |grep -e \'^[Zz]\'</code></pre><p style=\"margin-left: auto;\">-A&nbsp; 参数列出所有进程</p><p style=\"margin-left: auto;\">-o&nbsp; 自定义输出字段 stat（状态）、ppid（进程父id）、pid（进程id）、cmd（命令）</p><p style=\"margin-left: auto;\">因为状态为z或者Z的进程为僵尸进程，所以我们使用grep抓取stat状态为zZ进程</p><p style=\"margin-left: auto;\">5 快速杀死所有僵尸进程命令</p><pre><code class=\"lang-bash\">ps -A -o stat,ppid,pid,cmd | grep -e \'^[Zz]\' | awk \'{print $2}\' | xargs kill -9<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (56, '<p>运行环境</p><p>php 7.1 ++</p><p>queryList 4.0.4&nbsp;</p><p><br></p><pre><code class=\"lang-php\">&lt;?php\r\nfunction index()\r\n&nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $url = \'https://list.youku.com/category/show/c_97.html\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; //采集规则\r\n&nbsp; &nbsp; &nbsp; &nbsp; $rules = [\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //视频标题\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'title\' =&gt; [\'.info-list .title\',\'text\'],\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //视频连接\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'link\' =&gt; [\'.p-thumb&gt;a\',\'href\'],\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //视频图片\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'img\' =&gt; [\'.p-thumb&gt;img\',\'src\'],\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //视频右下角\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'rb\' =&gt; [\'.p-info&gt;li&gt;span&gt;span\',\'text\'],\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //演员\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'actor\'=&gt;[\'.actor\',\'html\',\'\',function($content){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $content = QueryList::html($content)-&gt;find(\'a\')-&gt;texts()-&gt;all();\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $content =implode(\',\',$content);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return $content;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }],\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //最近更新\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'last_update_at\'=&gt;[\'.info-list&gt;li:last\',\'text\'],\r\n&nbsp; &nbsp; &nbsp; &nbsp; ];\r\n&nbsp; &nbsp; &nbsp; &nbsp; // 4.0.4 ++语法\r\n&nbsp; &nbsp; &nbsp; &nbsp; $data = QueryList::get($url)-&gt;rules($rules)-&gt;queryData();\r\n&nbsp; &nbsp; &nbsp; &nbsp; //4.0.4 以下\r\n//&nbsp; &nbsp; &nbsp; &nbsp; $data = QueryList::get($url)-&gt;rules($rules)-&gt;query()-&gt;getData()-&gt;all();\r\n&nbsp; &nbsp; &nbsp; &nbsp; var_dump($data);\r\n&nbsp; &nbsp; }\r\n?&gt;</code></pre>');
INSERT INTO `ape_document_article` VALUES (57, '<p>1.下载</p><p>激活的版本2019.1.2，PhpStorm-2019.1.2可以用官网版本</p><p>当然可以从官网获取，也可以从下面的获取。</p><p>PhpStorm-2019.1.2.dmg</p><p><a href=\"https://u1826018.ctfile.com/fs/1826018-387345410\" rel=\"nofollow\">https://u1826018.ctfile.com/fs/1826018-387345410</a></p><p>下载激活用的jar包 jetbrains-agent.jar</p><p>下载地址：</p><p><a href=\"https://u1826018.ctfile.com/fs/1826018-387181004\" rel=\"nofollow\">https://u1826018.ctfile.com/fs/1826018-387181004</a></p><p>文件下载完成之后，安装PhpStorm，然后打开试用，之后任意创建一个项目。</p><p>2.激活</p><p>将下载好的jetbrains-agent.jar移动到然后，把这个文件放入安装phpstorm/contents/lib目录下，</p><p>安装完之后，打开了PhpStorm，点击菜单\"Help\"—&gt;“Edit Custom VM Options…”，</p><p>打开文件之后，在末尾添加一行参数，指向激活用的jar包的地址。</p><p>绝对路径</p><p>-javaagent:/Applications/PhpStorm.app/Contents/lib/jetbrains-agent.jar</p><p>要是你安装文件包的绝对路径</p><p>相对路径</p><p>windows版：-javaagent:D:/indea/lib/jetbrains-agent.jar</p><p>Mac版：-javaagent:../lib/Jjetbrains-agent.jar</p><p>添加完之后,保存，然后退出，重启PhpStorm。</p><p>3、最后一步</p><p>重启完成之后，复制</p><p><a href=\"http://jetbrains-license-server\" rel=\"nofollow\">http://jetbrains-license-server</a></p><p>执行菜单\"Help\"-——&gt;“Register”，打开注册框，选择\"License server\"方式，粘贴，点击Activate激活</p><p>或</p><p>试用可用的注册码，进行激活就可以了。</p><p>到此，激活完成</p>');
INSERT INTO `ape_document_article` VALUES (58, '<p style=\"margin-left: auto;\">在工作中，我们经常会发现表中会存在重复数据，那么如何找出和删除这些数据呢？</p><p style=\"margin-left: auto;\">下面，以一个小例子来说明：</p><p style=\"margin-left: auto;\">1、创建学生表</p><pre><code><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">1</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">CREATE</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">TABLE</span><span style=\"color: rgb(0, 0, 0); line-height: 1.5 !important;\"> student(\r\n</span><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">2</span>     id <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">INT</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">PRIMARY</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">KEY</span><span style=\"color: rgb(0, 0, 0); line-height: 1.5 !important;\">,\r\n</span><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">3</span>     stuno <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">VARCHAR</span>(<span style=\"color: rgb(128, 0, 0); font-weight: bold; line-height: 1.5 !important;\">12</span>) <span style=\"color: rgb(128, 128, 128); line-height: 1.5 !important;\">NOT</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">NULL</span><span style=\"color: rgb(0, 0, 0); line-height: 1.5 !important;\">,\r\n</span><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">4</span>     stuname <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">VARCHAR</span>(<span style=\"color: rgb(128, 0, 0); font-weight: bold; line-height: 1.5 !important;\">30</span>) <span style=\"color: rgb(128, 128, 128); line-height: 1.5 !important;\">NOT</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">null</span>\r\n<span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">5</span> );</code></pre><p style=\"margin-left: auto;\">2、向学生表中插入数据</p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">1</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">INSERT</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">INTO</span> student <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">VALUES</span> (<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">1</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span>,<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">131111099</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span>,<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">小李</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(0, 0, 0); line-height: 1.5 !important;\">);\r\n</span><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">2</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">INSERT</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">INTO</span> student <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">VALUES</span> (<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">2</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span>,<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">131111100</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span>,<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">小陈</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(0, 0, 0); line-height: 1.5 !important;\">);\r\n</span><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">3</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">INSERT</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">INTO</span> student <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">VALUES</span> (<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">3</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span>,<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">131111101</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span>,<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">小王</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(0, 0, 0); line-height: 1.5 !important;\">);\r\n</span><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">4</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">INSERT</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">INTO</span> student <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">VALUES</span> (<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">4</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span>,<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">131111102</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span>,<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">小黑</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(0, 0, 0); line-height: 1.5 !important;\">);\r\n</span><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">5</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">INSERT</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">INTO</span> student <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">VALUES</span> (<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">5</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span>,<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">131111099</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span>,<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">小曹</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(0, 0, 0); line-height: 1.5 !important;\">);\r\n</span><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">6</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">INSERT</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">INTO</span> student <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">VALUES</span> (<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">6</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span>,<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">131111099</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span>,<span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">小李</span><span style=\"color: rgb(255, 0, 0); line-height: 1.5 !important;\">\'</span>);</code></pre><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p style=\"margin-left: auto;\"><span style=\"color: rgb(255, 0, 0);\">3、查找仅学号重复的记录</span></p><p style=\"margin-left: auto;\">&nbsp;从插入记录上看，id为1、5、6的记录学号都是相同的，那么验证一下查询的数据是否正确</p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">1</span> <span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">--</span><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 学号重复</span>\r\n<span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">2</span> <span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">--</span><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 先按学号进行分组，然后查询学数量 &gt; 1的记录的学号</span>\r\n<span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">3</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">SELECT</span> <span style=\"color: rgb(128, 128, 128); line-height: 1.5 !important;\">*</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">FROM</span> student <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">WHERE</span> stuno <span style=\"color: rgb(128, 128, 128); line-height: 1.5 !important;\">IN</span><span style=\"color: rgb(0, 0, 0); line-height: 1.5 !important;\"> (\r\n</span><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">4</span>     <span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">--</span><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 查找重复的学号</span>\r\n<span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">5</span>     <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">SELECT</span> stuno <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">FROM</span> student <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">GROUP</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">BY</span> stuno <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">HAVING</span> <span style=\"color: rgb(255, 0, 255); line-height: 1.5 !important;\">COUNT</span>(stuno) <span style=\"color: rgb(128, 128, 128); line-height: 1.5 !important;\">&gt;</span> <span style=\"color: rgb(128, 0, 0); font-weight: bold; line-height: 1.5 !important;\">1</span>\r\n<span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">6</span> );</code></pre><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p style=\"margin-left: auto;\">查询结果如下：</p><p style=\"margin-left: auto;\"><img src=\"https://images2018.cnblogs.com/blog/944901/201805/944901-20180523143848784-1080222774.png\" alt=\"\"></p><p style=\"margin-left: auto;\">查询结果和我们事先分析的数据一致，所以查询结果是正确的。</p><p style=\"margin-left: auto;\"><span style=\"color: rgb(255, 0, 0);\">4、查找学号和姓名均重复的记录</span></p><p style=\"margin-left: auto;\">从插入记录上看，只有id为1、6的记录学号和姓名是完全重复的，那么验证一下查询的数据是否正确</p><p>按 Ctrl+C 复制代码</p><p>按 Ctrl+C 复制代码</p><p style=\"margin-left: auto;\">查询结果如下：</p><p style=\"margin-left: auto;\"><img src=\"https://images2018.cnblogs.com/blog/944901/201805/944901-20180523144308842-1638128755.png\" alt=\"\"></p><p style=\"margin-left: auto;\">查询结果和我们事先分析的数据一致，所以查询结果是正确的。</p><p style=\"margin-left: auto;\"><span style=\"color: rgb(255, 0, 0);\">5、删除多余的重复记录(多个字段)，只保留最小id的记录</span></p><p style=\"margin-left: auto;\">重复记录可能有多条，但是我们只希望保留id最小的那条记录，因为学号和姓名均重复的只有id为1、6的记录，保留id为1的记录，那么验证一下查询的数据是否正确</p><p>按 Ctrl+C 复制代码</p><p>按 Ctrl+C 复制代码</p><p style=\"margin-left: auto;\">查询结果如下：</p><p style=\"margin-left: auto;\"><img src=\"https://images2018.cnblogs.com/blog/944901/201805/944901-20180523144636134-2067989082.png\" alt=\"\"></p><p style=\"margin-left: auto;\">可以看出，id为6的记录已经被删除了，所以结果正确</p><p style=\"margin-left: auto;\">警告：不能根据本表的查询结果来更新本表的数据</p><p style=\"margin-left: auto;\">在其它的帖子中有看到如下写法来删除重复数据：</p><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><pre><code><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">1</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">DELETE</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">FROM</span> student <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">WHERE</span> (stuno,stuname) <span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">--</span><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 注意：此处一定要加括号，当成联合字段来处理</span>\r\n<span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">2</span>     <span style=\"color: rgb(128, 128, 128); line-height: 1.5 !important;\">IN</span><span style=\"color: rgb(0, 0, 0); line-height: 1.5 !important;\"> (\r\n</span><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">3</span>         <span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">--</span><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 查找学号和姓名均重复的学生信息</span>\r\n<span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">4</span>         <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">SELECT</span> stuno,stuname <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">FROM</span> student <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">GROUP</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">BY</span> stuno,stuname <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">HAVING</span> <span style=\"color: rgb(255, 0, 255); line-height: 1.5 !important;\">COUNT</span>(<span style=\"color: rgb(128, 0, 0); font-weight: bold; line-height: 1.5 !important;\">1</span>) <span style=\"color: rgb(128, 128, 128); line-height: 1.5 !important;\">&gt;</span> <span style=\"color: rgb(128, 0, 0); font-weight: bold; line-height: 1.5 !important;\">1</span>\r\n<span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">5</span>     ) <span style=\"color: rgb(128, 128, 128); line-height: 1.5 !important;\">AND</span> id <span style=\"color: rgb(128, 128, 128); line-height: 1.5 !important;\">NOT</span> <span style=\"color: rgb(128, 128, 128); line-height: 1.5 !important;\">IN</span><span style=\"color: rgb(0, 0, 0); line-height: 1.5 !important;\"> (\r\n</span><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">6</span>         <span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">--</span><span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 查询最小id的记录</span>\r\n<span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">7</span>         <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">SELECT</span> <span style=\"color: rgb(255, 0, 255); line-height: 1.5 !important;\">MIN</span>(id) <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">FROM</span> student <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">GROUP</span> <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">BY</span> stuno,stuname <span style=\"color: rgb(0, 0, 255); line-height: 1.5 !important;\">HAVING</span> <span style=\"color: rgb(255, 0, 255); line-height: 1.5 !important;\">COUNT</span>(<span style=\"color: rgb(128, 0, 0); font-weight: bold; line-height: 1.5 !important;\">1</span>) <span style=\"color: rgb(128, 128, 128); line-height: 1.5 !important;\">&gt;</span> <span style=\"color: rgb(128, 0, 0); font-weight: bold; line-height: 1.5 !important;\">1</span>\r\n<span style=\"color: rgb(0, 128, 128); line-height: 1.5 !important;\">8</span> );</code></pre><p><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></p><p style=\"margin-left: auto;\">会报如下错误：</p><p style=\"margin-left: auto;\">　　[Err] 1093 - You can\'t specify target table \'student\' for update in FROM clause</p><p>当你的才华撑不起你的野心时，只有静下心学习才是唯一的出路</p>');
INSERT INTO `ape_document_article` VALUES (59, '<blockquote><p>在php7.0 linux环境中，在对foreach遍历时不能对正在遍历的数组进行删除元素，修改元素，增加元素操作，因为这些操作并不能对正在遍历的数组产生影响。</p></blockquote><h2>场景还原</h2><pre><code><span class=\"token php language-php\"><span class=\"token delimiter important\" style=\"color: rgb(204, 153, 205); font-weight: bold;\"><!--?php</span-->\r\n<span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$arr</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\" style=\"color: rgb(240, 141, 73);\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 一维数组，包含5个元素 </span>\r\n\r\n<span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$arr</span> <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">as</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$key</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span><span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">&gt;</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\" style=\"color: rgb(240, 141, 73);\">0</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">===</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$arr</span><span class=\"token punctuation\">[</span><span class=\"token number\" style=\"color: rgb(240, 141, 73);\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 删除第4个元素 </span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">echo</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$key</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n</span><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"position: absolute; pointer-events: none; top: 0px; left: -3.8em; width: 3em; letter-spacing: -1px; border-right: 1px solid rgb(153, 153, 153); user-select: none;\"></span></span></code></pre><h2>理论结果</h2><pre><code><span class=\"token number\" style=\"color: rgb(240, 141, 73);\">0124</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"position: absolute; pointer-events: none; top: 0px; left: -3.8em; width: 3em; letter-spacing: -1px; border-right: 1px solid rgb(153, 153, 153); user-select: none;\"></span></code></pre><h2>实际结果</h2><pre><code><span class=\"token number\" style=\"color: rgb(240, 141, 73);\">01234</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"position: absolute; pointer-events: none; top: 0px; left: -3.8em; width: 3em; letter-spacing: -1px; border-right: 1px solid rgb(153, 153, 153); user-select: none;\"></span></code></pre><h2>分析</h2><p>在我的常规理解中，unset可以删除数组中的指定元素，确实，unset是把数组$arr中的指定元素$arr[3]给删除了（不相信的话，可以把$arr数组打印出来看一看）。<br>既然$arr[3]这个元素被删除，为什么在遍历的时候还会出现？？<br>我的猜想是：foreach在遍历的时候，会先把$arr数组拷贝一份，保证被遍历的数组 在遍历的过程中 数据的完整性，确保在遍历的时候不会被修改。所以我们使用unset去删除数组元素的时候，其实并不是删除正在被遍历的数组，而是在操作$arr变量。<br>也就是说：被遍历的数组 !== $arr，被遍历的数组 === $arr的副本。</p><h5>当然这只是我的猜想...</h5><h2>其他提示</h2><blockquote><p>对正在被遍历的数组进行添加元素或者修改元素的操作跟删除元素的操作是一样的，不会对正在被遍历的数组产生影响。</p></blockquote><pre><code><span class=\"token php language-php\"><span class=\"token delimiter important\" style=\"color: rgb(204, 153, 205); font-weight: bold;\"><!--?php</span-->\r\n<span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$arr</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\" style=\"color: rgb(240, 141, 73);\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 一维数组，包含5个元素 </span>\r\n\r\n<span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$arr</span> <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">as</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$key</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span><span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">&gt;</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$arr</span><span class=\"token punctuation\">[</span><span class=\"token number\" style=\"color: rgb(240, 141, 73);\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$arr</span><span class=\"token punctuation\">[</span><span class=\"token number\" style=\"color: rgb(240, 141, 73);\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">40</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$arr</span><span class=\"token punctuation\">[</span><span class=\"token number\" style=\"color: rgb(240, 141, 73);\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">100</span><span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">echo</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$value</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n</span><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"position: absolute; pointer-events: none; top: 0px; left: -3.8em; width: 3em; letter-spacing: -1px; border-right: 1px solid rgb(153, 153, 153); user-select: none;\"></span></span></code></pre><p>结果依旧是一样：</p><pre><code><span class=\"token number\" style=\"color: rgb(240, 141, 73);\">01234</span></code></pre>');
INSERT INTO `ape_document_article` VALUES (60, '<p><span style=\"color: rgb(0, 0, 0); font-size: 14px;\">本地环境是和公司项目环境保持一致的 7.1，可是 laravel6.0 升级必须要求 7.2，（组内有小伙伴的本地环境是 7.2，然后 push 代码之后导致项目 dev 环境无法自动部署），想了想，还是得在本地弄一个方便切换 php 版本的东西。</span></p><p><strong>方法一：安装 php-version（如果没有用 valet，这个应该是可以的）</strong></p><p>step 1、使用 brew 安装多个 php 版本</p><pre><code>brew install php@7.1&nbsp;// 原本有就不需要\r\nbrew install php@7.2<br></code></pre><p>step 2、发现 brew 安转 php-version 的命令失效了，那就手动安装吧<br></p><pre><code>[qian@bogon ~ ]$&nbsp;mkdir&nbsp;$HOME/.local\r\n[qian@bogon ~ ]$ cd&nbsp;$HOME/.local\r\n[qian@bogon .local ]$ git&nbsp;clone&nbsp;https://github.com/wilmoore/php-version.git\r\n[qian@bogon .local ]$ source&nbsp;$HOME/.local/php-version/php-version.sh//测试&nbsp; 查看当前php版本\r\n[qian@bogon .local ]$ php-version* 7.1.18&nbsp;7.2.22<br></code></pre><p><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">现在添加环境变量</span><br></p><pre><code>[qian@bogon ~ ]$&nbsp;echo&nbsp;\"source $HOME/.local/php-version/php-version.sh\"&gt;&gt; ~/.zshrc\r\n[qian@bogon ~ ]$ source ~/.zshrc<br></code></pre><p>切换 php 版本<br></p><pre><code>php-version 7.1<br></code></pre><p>或</p><pre><code>php-version 7.2</code></pre>');
INSERT INTO `ape_document_article` VALUES (61, '<p><span style=\"color: rgb(50, 50, 50); font-size: 16px;\">201909最新版XyPla</span>yer 智能解析 X3.91 正式版 修复非m3u8资源无法选集的问题2019.9.17 更新 X3.91正式版<br></p><p><br></p><p><a href=\"http://www.example.com\" target=\"_blank\">下载地址</a><br></p>');
INSERT INTO `ape_document_article` VALUES (62, '<pre><code><span style=\"color:#9876aa;background-color:#232525;\">$webApi </span><span style=\"background-color:#232525;\">=[<br></span><span style=\"background-color:#232525;\">    </span><span style=\"color:#6a8759;background-color:#232525;\">\'api\' </span><span style=\"background-color:#232525;\">=&gt; </span><span style=\"color:#6a8759;background-color:#232525;\">\'https://list.youku.com/category/page?\'</span><span style=\"color:#cc7832;background-color:#232525;\">, </span><span style=\"color:#808080;background-color:#232525;\">//请求列表 demo https://list.youku.com/category/page?c=97&amp;type=show&amp;p=1&amp;s=6&amp;u=2<br></span><span style=\"color:#808080;background-color:#232525;\">    </span><span style=\"color:#6a8759;background-color:#232525;\">\'cate\' </span><span style=\"background-color:#232525;\">=&gt; [</span><span style=\"color:#6a8759;background-color:#232525;\">\'电影\'</span><span style=\"background-color:#232525;\">=&gt;</span><span style=\"color:#6897bb;background-color:#232525;\">96</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\'电视剧\'</span><span style=\"background-color:#232525;\">=&gt;</span><span style=\"color:#6897bb;background-color:#232525;\">97</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\'综艺\'</span><span style=\"background-color:#232525;\">=&gt;</span><span style=\"color:#6897bb;background-color:#232525;\">85</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\'少儿\'</span><span style=\"background-color:#232525;\">=&gt;</span><span style=\"color:#6897bb;background-color:#232525;\">177</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\'动漫\'</span><span style=\"background-color:#232525;\">=&gt;</span><span style=\"color:#6897bb;background-color:#232525;\">100</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\'纪录片\'</span><span style=\"background-color:#232525;\">=&gt;</span><span style=\"color:#6897bb;background-color:#232525;\">84</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\'音乐\'</span><span style=\"background-color:#232525;\">=&gt;</span><span style=\"color:#6897bb;background-color:#232525;\">95</span><span style=\"background-color:#232525;\">]</span><span style=\"color:#cc7832;background-color:#232525;\">,<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"color:#6a8759;background-color:#232525;\">\'mode\' </span><span style=\"background-color:#232525;\">=&gt; [</span><span style=\"color:#6a8759;background-color:#232525;\">\'hot\' </span><span style=\"background-color:#232525;\">=&gt; </span><span style=\"color:#6897bb;background-color:#232525;\">4</span><span style=\"color:#cc7832;background-color:#232525;\">, </span><span style=\"color:#6a8759;background-color:#232525;\">\'new\' </span><span style=\"background-color:#232525;\">=&gt; </span><span style=\"color:#6897bb;background-color:#232525;\">5</span><span style=\"color:#cc7832;background-color:#232525;\">, </span><span style=\"color:#6a8759;background-color:#232525;\">\'all\' </span><span style=\"background-color:#232525;\">=&gt; </span><span style=\"color:#6897bb;background-color:#232525;\">6</span><span style=\"color:#cc7832;background-color:#232525;\">, </span><span style=\"color:#6a8759;background-color:#232525;\">\'reviews\' </span><span style=\"background-color:#232525;\">=&gt; </span><span style=\"color:#6897bb;background-color:#232525;\">2</span><span style=\"background-color:#232525;\">]</span><span style=\"color:#cc7832;background-color:#232525;\">,  </span><span style=\"color:#808080;background-color:#232525;\">//热门 最新 默认或者最新更新  好评<br></span><span style=\"color:#808080;background-color:#232525;\">    </span><span style=\"color:#6a8759;background-color:#232525;\">\'status\'</span><span style=\"background-color:#232525;\">=&gt;  [</span><span style=\"color:#6a8759;background-color:#232525;\">\'finish\'</span><span style=\"background-color:#232525;\">=&gt;</span><span style=\"color:#6897bb;background-color:#232525;\">1</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\'update\'</span><span style=\"background-color:#232525;\">=&gt;</span><span style=\"color:#6897bb;background-color:#232525;\">2</span><span style=\"background-color:#232525;\">]</span><span style=\"color:#cc7832;background-color:#232525;\">, </span><span style=\"color:#808080;background-color:#232525;\">//更新状态<br></span><span style=\"color:#808080;background-color:#232525;\">    </span><span style=\"color:#6a8759;background-color:#232525;\">\'getInfoApi\' </span><span style=\"background-color:#232525;\">=&gt; </span><span style=\"color:#6a8759;background-color:#232525;\">\'https://api.youku.com/videos/show.json?client_id=af43ee2709aa59ab&amp;ext=show&amp;video_id=\'</span><span style=\"color:#cc7832;background-color:#232525;\">, </span><span style=\"color:#808080;background-color:#232525;\">//获取视频信息 demo https://api.youku.com/videos/show.json?client_id=af43ee2709aa59ab&amp;ext=show&amp;video_id=XNDQwODUyMzM0OA==<br></span><span style=\"color:#808080;background-color:#232525;\">    </span><span style=\"color:#6a8759;background-color:#232525;\">\'listinfoApi\' </span><span style=\"background-color:#232525;\">=&gt; </span><span style=\"color:#6a8759;background-color:#232525;\">\'https://list.youku.com/show/module?callback=json&amp;tab=showInfo\'</span><span style=\"color:#cc7832;background-color:#232525;\">, </span><span style=\"color:#808080;background-color:#232525;\">//获取剧集列表 demo https://list.youku.com/show/module?id=308528&amp;tab=showInfo&amp;cname=电视剧&amp;callback=json<br></span><span style=\"color:#808080;background-color:#232525;\">    </span><span style=\"color:#6a8759;background-color:#232525;\">\'relistinfoApi\' </span><span style=\"background-color:#232525;\">=&gt; </span><span style=\"color:#6a8759;background-color:#232525;\">\'https://list.youku.com/show/episode?callback=json\'</span><span style=\"color:#cc7832;background-color:#232525;\">, </span><span style=\"color:#808080;background-color:#232525;\">//获取剧集列表 demo https://list.youku.com/show/episode?id=308528&amp;stage=reload_41&amp;callback=json<br></span><span style=\"background-color:#232525;\">]</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\"><br></span><span style=\"color:#9876aa;background-color:#232525;\">$videoId </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#6a8759;background-color:#232525;\">\'5b5de27b671c417380c0\'</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#9876aa;background-color:#232525;\">$cate </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#6a8759;background-color:#232525;\">\'电视剧\'</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"background-color:#232525;\">var_dump(_get_video_list(</span><span style=\"color:#9876aa;background-color:#232525;\">$webApi</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#9876aa;background-color:#232525;\">$videoId</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#9876aa;background-color:#232525;\">$cate</span><span style=\"background-color:#232525;\">))</span><span style=\"color:#cc7832;background-color:#232525;\">; </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">die</span><span style=\"background-color:#232525;\">()</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\"><br></span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">function </span><span style=\"color:#ffc66d;background-color:#232525;\">_get_video_list</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$webApi</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#9876aa;background-color:#232525;\">$videoId</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#9876aa;background-color:#232525;\">$cate</span><span style=\"background-color:#232525;\">){<br></span><span style=\"background-color:#232525;\">    </span><span style=\"color:#9876aa;background-color:#232525;\">$getChildApi </span><span style=\"background-color:#232525;\">=  </span><span style=\"color:#9876aa;background-color:#232525;\">$webApi</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'listinfoApi\'</span><span style=\"background-color:#232525;\">].</span><span style=\"color:#6a8759;background-color:#232525;\">\'&amp;id=\'</span><span style=\"background-color:#232525;\">.</span><span style=\"color:#9876aa;background-color:#232525;\">$videoId</span><span style=\"background-color:#232525;\">.</span><span style=\"color:#6a8759;background-color:#232525;\">\'&amp;cname=\'</span><span style=\"background-color:#232525;\">.</span><span style=\"color:#9876aa;background-color:#232525;\">$cate</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"color:#9876aa;background-color:#232525;\">$listInfo </span><span style=\"background-color:#232525;\">= file_get_contents(</span><span style=\"color:#9876aa;background-color:#232525;\">$getChildApi</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"color:#9876aa;background-color:#232525;\">$listInfo </span><span style=\"background-color:#232525;\">= json_decode(winJsonToJson(</span><span style=\"color:#9876aa;background-color:#232525;\">$listInfo</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">, </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">true</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">if </span><span style=\"background-color:#232525;\">(!is_array(</span><span style=\"color:#9876aa;background-color:#232525;\">$listInfo</span><span style=\"background-color:#232525;\">) &amp;&amp; </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">empty</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$listInfo</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'html\'</span><span style=\"background-color:#232525;\">])) {<br></span><span style=\"background-color:#232525;\">       </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">return </span><span style=\"background-color:#232525;\">[]</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">    </span><span style=\"color:#9876aa;background-color:#232525;\">$children </span><span style=\"background-color:#232525;\">= []</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"color:#9876aa;background-color:#232525;\">$list </span><span style=\"background-color:#232525;\">= _html_to_list(</span><span style=\"color:#9876aa;background-color:#232525;\">$listInfo</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'html\'</span><span style=\"background-color:#232525;\">])</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"color:#9876aa;background-color:#232525;\">$children </span><span style=\"background-color:#232525;\">= array_merge(</span><span style=\"color:#9876aa;background-color:#232525;\">$children</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#9876aa;background-color:#232525;\">$list</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'children_list\'</span><span style=\"background-color:#232525;\">])</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">unset</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$listInfo</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">if </span><span style=\"background-color:#232525;\">(</span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">isset</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$list</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'album_tab_list\'</span><span style=\"background-color:#232525;\">]) &amp;&amp; !</span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">empty</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$list</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'album_tab_list\'</span><span style=\"background-color:#232525;\">])){<br></span><span style=\"background-color:#232525;\">        </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">foreach </span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$list</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'album_tab_list\'</span><span style=\"background-color:#232525;\">] </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">as </span><span style=\"color:#9876aa;background-color:#232525;\">$album_tab</span><span style=\"background-color:#232525;\">){<br></span><span style=\"background-color:#232525;\">            </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">if </span><span style=\"background-color:#232525;\">(in_array(</span><span style=\"color:#9876aa;background-color:#232525;\">$album_tab</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#9876aa;background-color:#232525;\">$list</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'album_tab_list_finish\'</span><span style=\"background-color:#232525;\">])){<br></span><span style=\"background-color:#232525;\">                </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">continue</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">            </span><span style=\"color:#9876aa;background-color:#232525;\">$getChildApi </span><span style=\"background-color:#232525;\">=  </span><span style=\"color:#9876aa;background-color:#232525;\">$webApi</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'relistinfoApi\'</span><span style=\"background-color:#232525;\">].</span><span style=\"color:#6a8759;background-color:#232525;\">\'&amp;id=\'</span><span style=\"background-color:#232525;\">.</span><span style=\"color:#9876aa;background-color:#232525;\">$videoId</span><span style=\"background-color:#232525;\">.</span><span style=\"color:#6a8759;background-color:#232525;\">\'&amp;stage=\'</span><span style=\"background-color:#232525;\">.</span><span style=\"color:#9876aa;background-color:#232525;\">$album_tab</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#9876aa;background-color:#232525;\">$listInfo </span><span style=\"background-color:#232525;\">= file_get_contents(</span><span style=\"color:#9876aa;background-color:#232525;\">$getChildApi</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#9876aa;background-color:#232525;\">$listInfo </span><span style=\"background-color:#232525;\">= json_decode(winJsonToJson(</span><span style=\"color:#9876aa;background-color:#232525;\">$listInfo</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">, </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">true</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">if </span><span style=\"background-color:#232525;\">(!is_array(</span><span style=\"color:#9876aa;background-color:#232525;\">$listInfo</span><span style=\"background-color:#232525;\">) &amp;&amp; </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">empty</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$listInfo</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'html\'</span><span style=\"background-color:#232525;\">])) {<br></span><span style=\"background-color:#232525;\">              </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">continue</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">            </span><span style=\"color:#9876aa;background-color:#232525;\">$relist </span><span style=\"background-color:#232525;\">= _html_to_list(</span><span style=\"color:#9876aa;background-color:#232525;\">$listInfo</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'html\'</span><span style=\"background-color:#232525;\">]</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">true</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#9876aa;background-color:#232525;\">$children </span><span style=\"background-color:#232525;\">= array_merge(</span><span style=\"color:#9876aa;background-color:#232525;\">$children</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#9876aa;background-color:#232525;\">$relist</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'children_list\'</span><span style=\"background-color:#232525;\">])</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">unset</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$relist</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">        </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">    }<br></span><span style=\"background-color:#232525;\">    </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">return </span><span style=\"color:#9876aa;background-color:#232525;\">$children</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\"><br></span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">function </span><span style=\"color:#ffc66d;background-color:#232525;\">_html_to_list</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$html</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#9876aa;background-color:#232525;\">$reload</span><span style=\"background-color:#232525;\">=</span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">false</span><span style=\"background-color:#232525;\">){<br></span><span style=\"background-color:#232525;\">    </span><span style=\"color:#9876aa;background-color:#232525;\">$result </span><span style=\"background-color:#232525;\">= [<br></span><span style=\"background-color:#232525;\">        </span><span style=\"color:#6a8759;background-color:#232525;\">\'children_list\' </span><span style=\"background-color:#232525;\">=&gt;[]</span><span style=\"color:#cc7832;background-color:#232525;\">,<br></span><span style=\"color:#cc7832;background-color:#232525;\">        </span><span style=\"color:#6a8759;background-color:#232525;\">\'album_tab_list_finish\' </span><span style=\"background-color:#232525;\">=&gt; []<br></span><span style=\"background-color:#232525;\">    ]</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"color:#9876aa;background-color:#232525;\">$hackEncoding </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#6a8759;background-color:#232525;\">\'<!--?xml encoding=\"UTF-8\"-->\'</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"color:#9876aa;background-color:#232525;\">$dom </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">new </span><span style=\"background-color:#232525;\">DOMDocument()</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"background-color:#232525;\">@</span><span style=\"color:#9876aa;background-color:#232525;\">$dom</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">loadHTML</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$hackEncoding </span><span style=\"background-color:#232525;\">.</span><span style=\"color:#9876aa;background-color:#232525;\">$html</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;</span><span style=\"color:#808080;background-color:#232525;\">//$a是上面得到的一些a标签<br></span><span style=\"color:#808080;background-color:#232525;\">    </span><span style=\"color:#9876aa;background-color:#232525;\">$url </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">new </span><span style=\"background-color:#232525;\">DOMXPath(</span><span style=\"color:#9876aa;background-color:#232525;\">$dom</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">if </span><span style=\"background-color:#232525;\">(!</span><span style=\"color:#9876aa;background-color:#232525;\">$reload</span><span style=\"background-color:#232525;\">){<br></span><span style=\"background-color:#232525;\">        </span><span style=\"color:#9876aa;background-color:#232525;\">$result</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'album_tab_list\'</span><span style=\"background-color:#232525;\">] = []</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">        </span><span style=\"color:#9876aa;background-color:#232525;\">$data </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">evaluate</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#6a8759;background-color:#232525;\">\'//ul[contains(@class, \"p-tab-pills\")]\'</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">        </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">foreach </span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$data </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">as </span><span style=\"color:#9876aa;background-color:#232525;\">$val</span><span style=\"background-color:#232525;\">) {<br></span><span style=\"background-color:#232525;\">            </span><span style=\"color:#9876aa;background-color:#232525;\">$item </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#9876aa;background-color:#232525;\">$val</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#9876aa;background-color:#232525;\">childNodes</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">foreach </span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$item </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">as </span><span style=\"color:#9876aa;background-color:#232525;\">$v</span><span style=\"background-color:#232525;\">) {<br></span><span style=\"background-color:#232525;\">                </span><span style=\"color:#9876aa;background-color:#232525;\">$result</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'album_tab_list\'</span><span style=\"background-color:#232525;\">][] = trim(</span><span style=\"color:#9876aa;background-color:#232525;\">$v</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">getAttribute</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#6a8759;background-color:#232525;\">\'data-id\'</span><span style=\"background-color:#232525;\">))</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">        }<br></span><span style=\"background-color:#232525;\">        </span><span style=\"color:#9876aa;background-color:#232525;\">$data </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">evaluate</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#6a8759;background-color:#232525;\">\'//div[@class=\"p-panels\"]/div\'</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"background-color:#232525;\">}</span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">else</span><span style=\"background-color:#232525;\">{<br></span><span style=\"background-color:#232525;\">        </span><span style=\"color:#9876aa;background-color:#232525;\">$data </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">evaluate</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#6a8759;background-color:#232525;\">\'//div[@class=\"p-panel\"]\'</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">    </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">foreach </span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$data </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">as </span><span style=\"color:#9876aa;background-color:#232525;\">$val</span><span style=\"background-color:#232525;\">) {<br></span><span style=\"background-color:#232525;\">        </span><span style=\"color:#9876aa;background-color:#232525;\">$item </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#9876aa;background-color:#232525;\">$val</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#9876aa;background-color:#232525;\">childNodes</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">        </span><span style=\"color:#9876aa;background-color:#232525;\">$album_tab_list_finish</span><span style=\"background-color:#232525;\">[] = trim(</span><span style=\"color:#9876aa;background-color:#232525;\">$val</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">getAttribute</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#6a8759;background-color:#232525;\">\'id\'</span><span style=\"background-color:#232525;\">))</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">        </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">foreach </span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$item </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">as </span><span style=\"color:#9876aa;background-color:#232525;\">$v</span><span style=\"background-color:#232525;\">) {<br></span><span style=\"background-color:#232525;\">            </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">foreach </span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$v</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#9876aa;background-color:#232525;\">childNodes </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">as </span><span style=\"color:#9876aa;background-color:#232525;\">$child</span><span style=\"background-color:#232525;\">){<br></span><span style=\"background-color:#232525;\">                </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">if </span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$child</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">getElementsByTagName</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#6a8759;background-color:#232525;\">\'i\'</span><span style=\"background-color:#232525;\">)-&gt;</span><span style=\"color:#9876aa;background-color:#232525;\">length </span><span style=\"background-color:#232525;\">&gt;</span><span style=\"color:#6897bb;background-color:#232525;\">0</span><span style=\"background-color:#232525;\">){<br></span><span style=\"background-color:#232525;\">                    </span><span style=\"color:#9876aa;background-color:#232525;\">$icon_labels </span><span style=\"background-color:#232525;\">=  </span><span style=\"color:#9876aa;background-color:#232525;\">$child</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">getElementsByTagName</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#6a8759;background-color:#232525;\">\'i\'</span><span style=\"background-color:#232525;\">)-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">item</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#6897bb;background-color:#232525;\">0</span><span style=\"background-color:#232525;\">)-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">getAttribute</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#6a8759;background-color:#232525;\">\'class\'</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">                </span><span style=\"background-color:#232525;\">}</span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">else</span><span style=\"background-color:#232525;\">{<br></span><span style=\"background-color:#232525;\">                    </span><span style=\"color:#9876aa;background-color:#232525;\">$icon_labels </span><span style=\"background-color:#232525;\">= </span><span style=\"color:#6a8759;background-color:#232525;\">\'\'</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">                </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">                </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">if </span><span style=\"background-color:#232525;\">(!</span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">empty</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$icon_labels</span><span style=\"background-color:#232525;\">)){<br></span><span style=\"background-color:#232525;\">                    </span><span style=\"color:#9876aa;background-color:#232525;\">$icon_labels </span><span style=\"background-color:#232525;\">= explode(</span><span style=\"color:#6a8759;background-color:#232525;\">\' \'</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#9876aa;background-color:#232525;\">$icon_labels</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">                </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">                </span><span style=\"color:#9876aa;background-color:#232525;\">$result</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'children_list\'</span><span style=\"background-color:#232525;\">][] = [<br></span><span style=\"background-color:#232525;\">                    </span><span style=\"color:#6a8759;background-color:#232525;\">\'title\' </span><span style=\"background-color:#232525;\">=&gt; </span><span style=\"color:#9876aa;background-color:#232525;\">$child</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#9876aa;background-color:#232525;\">textContent</span><span style=\"color:#cc7832;background-color:#232525;\">,<br></span><span style=\"color:#cc7832;background-color:#232525;\">                    </span><span style=\"color:#6a8759;background-color:#232525;\">\'url\' </span><span style=\"background-color:#232525;\">=&gt; trimUrl(</span><span style=\"color:#6a8759;background-color:#232525;\">\'https:\'</span><span style=\"background-color:#232525;\">.</span><span style=\"color:#9876aa;background-color:#232525;\">$child</span><span style=\"background-color:#232525;\">-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">getElementsByTagName</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#6a8759;background-color:#232525;\">\'a\'</span><span style=\"background-color:#232525;\">)-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">item</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#6897bb;background-color:#232525;\">0</span><span style=\"background-color:#232525;\">)-&gt;</span><span style=\"color:#ffc66d;background-color:#232525;\">getAttribute</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#6a8759;background-color:#232525;\">\'href\'</span><span style=\"background-color:#232525;\">))</span><span style=\"color:#cc7832;background-color:#232525;\">,<br></span><span style=\"color:#cc7832;background-color:#232525;\">                    </span><span style=\"color:#6a8759;background-color:#232525;\">\'label_icon\' </span><span style=\"background-color:#232525;\">=&gt; </span><span style=\"color:#9876aa;background-color:#232525;\">$icon_labels<br></span><span style=\"color:#9876aa;background-color:#232525;\">                </span><span style=\"background-color:#232525;\">]</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">            </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">        }<br></span><span style=\"background-color:#232525;\">    }<br></span><span style=\"background-color:#232525;\">    </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">return </span><span style=\"color:#9876aa;background-color:#232525;\">$result</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\"><br></span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">function </span><span style=\"color:#ffc66d;background-color:#232525;\">winJsonToJson</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$string</span><span style=\"background-color:#232525;\">){<br></span><span style=\"background-color:#232525;\">    </span><span style=\"color:#9876aa;background-color:#232525;\">$string </span><span style=\"background-color:#232525;\">= substr(</span><span style=\"color:#9876aa;background-color:#232525;\">$string</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"background-color:#232525;\">strpos(</span><span style=\"color:#9876aa;background-color:#232525;\">$string</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\'(\'</span><span style=\"background-color:#232525;\">)+</span><span style=\"color:#6897bb;background-color:#232525;\">1</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"color:#9876aa;background-color:#232525;\">$string </span><span style=\"background-color:#232525;\">= substr(</span><span style=\"color:#9876aa;background-color:#232525;\">$string</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6897bb;background-color:#232525;\">0</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"background-color:#232525;\">stripos(</span><span style=\"color:#9876aa;background-color:#232525;\">$string</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\')\'</span><span style=\"background-color:#232525;\">))</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">return </span><span style=\"color:#9876aa;background-color:#232525;\">$string</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\"><br></span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">function </span><span style=\"color:#ffc66d;background-color:#232525;\">trimUrl</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"background-color:#232525;\">){<br></span><span style=\"background-color:#232525;\">    </span><span style=\"color:#9876aa;background-color:#232525;\">$url </span><span style=\"background-color:#232525;\">= trimStr(</span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"color:#9876aa;background-color:#232525;\">$pattern</span><span style=\"background-color:#232525;\">=</span><span style=\"color:#6a8759;background-color:#232525;\">\"#(http|https)://(.*\\.)?.*\\..*#i\"</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">if</span><span style=\"background-color:#232525;\">(!preg_match(</span><span style=\"color:#9876aa;background-color:#232525;\">$pattern</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"background-color:#232525;\">)){<br></span><span style=\"background-color:#232525;\">        </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">return false</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">    </span><span style=\"color:#9876aa;background-color:#232525;\">$arr </span><span style=\"background-color:#232525;\">= parse_url(</span><span style=\"color:#9876aa;background-color:#232525;\">$url</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">if </span><span style=\"background-color:#232525;\">(</span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">empty</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$arr</span><span style=\"background-color:#232525;\">)){<br></span><span style=\"background-color:#232525;\">        </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">return false</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">    </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">if </span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$arr</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'scheme\'</span><span style=\"background-color:#232525;\">] !== </span><span style=\"color:#6a8759;background-color:#232525;\">\'https\' </span><span style=\"background-color:#232525;\">|| !</span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">isset</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$arr</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'scheme\'</span><span style=\"background-color:#232525;\">])){<br></span><span style=\"background-color:#232525;\">        </span><span style=\"color:#9876aa;background-color:#232525;\">$arr</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'scheme\'</span><span style=\"background-color:#232525;\">] = </span><span style=\"color:#6a8759;background-color:#232525;\">\'https\'</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"background-color:#232525;\">}<br></span><span style=\"background-color:#232525;\">    </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">return </span><span style=\"color:#9876aa;background-color:#232525;\">$arr</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'scheme\'</span><span style=\"background-color:#232525;\">].</span><span style=\"color:#6a8759;background-color:#232525;\">\'://\'</span><span style=\"background-color:#232525;\">.</span><span style=\"color:#9876aa;background-color:#232525;\">$arr</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'host\'</span><span style=\"background-color:#232525;\">].</span><span style=\"color:#9876aa;background-color:#232525;\">$arr</span><span style=\"background-color:#232525;\">[</span><span style=\"color:#6a8759;background-color:#232525;\">\'path\'</span><span style=\"background-color:#232525;\">]</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"background-color:#232525;\">}<br></span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">function </span><span style=\"color:#ffc66d;background-color:#232525;\">trimStr</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#9876aa;background-color:#232525;\">$string</span><span style=\"background-color:#232525;\">){<br></span><span style=\"background-color:#232525;\">    </span><span style=\"color:#9876aa;background-color:#232525;\">$string </span><span style=\"background-color:#232525;\">= strip_tags(</span><span style=\"color:#9876aa;background-color:#232525;\">$string</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"color:#cc7832;background-color:#232525;\">    </span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">return </span><span style=\"background-color:#232525;\">trim(str_replace(</span><span style=\"color:#cc7832;background-color:#232525;font-weight:bold;\">array</span><span style=\"background-color:#232525;\">(</span><span style=\"color:#6a8759;background-color:#232525;\">\"\'\"</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\'\"\'</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\" \"</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\"</span><span style=\"color:#cc7832;background-color:#232525;\">\\t</span><span style=\"color:#6a8759;background-color:#232525;\">\"</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\"</span><span style=\"color:#cc7832;background-color:#232525;\">\\n</span><span style=\"color:#6a8759;background-color:#232525;\">\"</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\"</span><span style=\"color:#cc7832;background-color:#232525;\">\\r</span><span style=\"color:#6a8759;background-color:#232525;\">\"</span><span style=\"color:#cc7832;background-color:#232525;\">,</span><span style=\"color:#6a8759;background-color:#232525;\">\"</span><span style=\"color:#cc7832;background-color:#232525;\">\\r\\n</span><span style=\"color:#6a8759;background-color:#232525;\">\"</span><span style=\"background-color:#232525;\">)</span><span style=\"color:#cc7832;background-color:#232525;\">, </span><span style=\"color:#6a8759;background-color:#232525;\">\"\"</span><span style=\"color:#cc7832;background-color:#232525;\">, </span><span style=\"color:#9876aa;background-color:#232525;\">$string</span><span style=\"background-color:#232525;\">))</span><span style=\"color:#cc7832;background-color:#232525;\">;<br></span><span style=\"background-color:#232525;\">}</span></code></pre>');
INSERT INTO `ape_document_article` VALUES (63, '<h1>Redis批量删除key的小技巧，你知道吗？</h1><blockquote><p>在使用redis的过程中，经常会遇到要批量删除某种规则的key，但是redis提供了批量查询一类key的命令keys或scan，没有提供批量删除某种规则key的命令，怎么办？看完本文即可，哈哈。</p></blockquote><h3><span style=\"font-size: inherit; color: rgb(51, 51, 51);\"><b>一用keys+xargs实现</b></span></h3><p>开始实战</p><h4><span style=\"font-size: inherit; color: inherit;\">1.连接redis，初始数据</span></h4><pre><code>./redis-cli&nbsp;-h&nbsp;<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">127.0</span>.<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">0</span>.<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">1</span>&nbsp;-p&nbsp;<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">6379</span><br style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-meta\" style=\"margin: 0px; padding: 0px; color: rgb(91, 218, 237); font-size: inherit; line-height: inherit; overflow-wrap: inherit !important; word-break: inherit !important;\"><span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">127.0</span>.<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">0</span>.<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">1</span><span class=\"hljs-symbol\" style=\"margin: 0px; padding: 0px; color: rgb(0, 176, 232);\">:</span><span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">6379</span>&gt;</span>&nbsp;set&nbsp;java_suisui_1&nbsp;<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">1</span><br style=\"margin: 0px; padding: 0px;\">OK<br style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-meta\" style=\"margin: 0px; padding: 0px; color: rgb(91, 218, 237); font-size: inherit; line-height: inherit; overflow-wrap: inherit !important; word-break: inherit !important;\">127.<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">0</span>.<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">0</span>.<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">1</span><span class=\"hljs-symbol\" style=\"margin: 0px; padding: 0px; color: rgb(0, 176, 232);\">:</span><span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">6379</span>&gt;</span>&nbsp;set&nbsp;java_suisui_2&nbsp;<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">2</span><br style=\"margin: 0px; padding: 0px;\">OK<br style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-meta\" style=\"margin: 0px; padding: 0px; color: rgb(91, 218, 237); font-size: inherit; line-height: inherit; overflow-wrap: inherit !important; word-break: inherit !important;\">127.<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">0</span>.<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">0</span>.<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">1</span><span class=\"hljs-symbol\" style=\"margin: 0px; padding: 0px; color: rgb(0, 176, 232);\">:</span><span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">6379</span>&gt;</span>&nbsp;set&nbsp;java_suisui_3&nbsp;<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">3</span><br style=\"margin: 0px; padding: 0px;\">OK<br style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-meta\" style=\"margin: 0px; padding: 0px; color: rgb(91, 218, 237); font-size: inherit; line-height: inherit; overflow-wrap: inherit !important; word-break: inherit !important;\">127.<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">0</span>.<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">0</span>.<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">1</span><span class=\"hljs-symbol\" style=\"margin: 0px; padding: 0px; color: rgb(0, 176, 232);\">:</span><span class=\"hljs-number\" style=\"margin: 0px; padding: 0px;\">6379</span>&gt;</span>&nbsp;set&nbsp;java_suisui_4&nbsp;<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">4</span><br style=\"margin: 0px; padding: 0px;\">OK<br style=\"margin: 0px; padding: 0px;\"></code></pre><h4><span style=\"font-size: inherit; color: inherit;\">2.使用keys命令查看数据</span></h4><pre><code><span class=\"hljs-meta\" style=\"margin: 0px; padding: 0px; color: rgb(91, 218, 237); font-size: inherit; line-height: inherit; overflow-wrap: inherit !important; word-break: inherit !important;\"><span class=\"hljs-meta\" style=\"margin: 0px; padding: 0px; color: rgb(43, 145, 175);\">127.0.0.1:6379&gt;</span></span>&nbsp;keys&nbsp;java_suisui<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">_</span>*<br style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">1</span>)&nbsp;<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(238, 220, 112); font-size: inherit; line-height: inherit; overflow-wrap: inherit !important; word-break: inherit !important;\"><span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(163, 21, 21);\">\"java_suisui_1\"</span></span><br style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">2</span>)&nbsp;<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(238, 220, 112); font-size: inherit; line-height: inherit; overflow-wrap: inherit !important; word-break: inherit !important;\"><span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(163, 21, 21);\">\"java_suisui_2\"</span></span><br style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">3</span>)&nbsp;<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(238, 220, 112); font-size: inherit; line-height: inherit; overflow-wrap: inherit !important; word-break: inherit !important;\"><span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(163, 21, 21);\">\"java_suisui_3\"</span></span><br style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">4</span>)&nbsp;<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(238, 220, 112); font-size: inherit; line-height: inherit; overflow-wrap: inherit !important; word-break: inherit !important;\"><span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(163, 21, 21);\">\"java_suisui_4\"</span></span><br style=\"margin: 0px; padding: 0px;\"></code></pre><h4><span style=\"font-size: inherit; color: inherit;\">3.退出redis的客户端</span></h4><pre><code>127<span class=\"hljs-selector-class\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); overflow-wrap: inherit !important; word-break: inherit !important;\">.0</span><span class=\"hljs-selector-class\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); overflow-wrap: inherit !important; word-break: inherit !important;\">.0</span><span class=\"hljs-selector-class\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); overflow-wrap: inherit !important; word-break: inherit !important;\">.1</span><span class=\"hljs-selector-pseudo\" style=\"margin: 0px; padding: 0px; color: inherit; font-size: inherit; line-height: inherit; overflow-wrap: inherit !important; word-break: inherit !important;\"><span class=\"hljs-selector-pseudo\" style=\"margin: 0px; padding: 0px; color: rgb(43, 145, 175);\">:6379</span></span>&gt;&nbsp;<span class=\"hljs-selector-tag\" style=\"margin: 0px; padding: 0px; color: rgb(248, 35, 117); font-size: inherit; line-height: inherit; overflow-wrap: inherit !important; word-break: inherit !important;\"><span class=\"hljs-selector-tag\" style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255);\">exit</span></span><br style=\"margin: 0px; padding: 0px;\"></code></pre><h4><span style=\"font-size: inherit; color: inherit;\">4.使用keys+xargs批量删除</span></h4><pre><code>[root@node1&nbsp;src]<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(128, 128, 128); font-size: inherit; line-height: inherit; overflow-wrap: inherit !important; word-break: inherit !important;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0);\">#&nbsp;./redis-cli&nbsp;-h&nbsp;127.0.0.1&nbsp;-p&nbsp;6379&nbsp;keys&nbsp;\"java_suisui*\"&nbsp;|&nbsp;xargs&nbsp;./redis-cli&nbsp;-h&nbsp;127.0.0.1&nbsp;-p&nbsp;6379&nbsp;del</span></span><br style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0);\">(</span><span class=\"hljs-built_in\" style=\"margin: 0px; padding: 0px; color: rgb(248, 35, 117); font-size: inherit; line-height: inherit; overflow-wrap: inherit !important; word-break: inherit !important;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0);\">integer</span></span><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0);\">)&nbsp;4</span><br style=\"margin: 0px; padding: 0px;\"></code></pre><p>执行上述命令后4条记录全部删除。</p><h4><span style=\"font-size: inherit; color: inherit;\">5.注意事项</span></h4><p>redis是单线程架构，如果redis包含了大量的键，执行keys命令可能会造成redis阻塞，所以一般建议不要在生产环境下使用keys命令。如果非要遍历键删除的话，可以在以下三种情况使用：<br>(1).在一个不对外提供服务的Redis从节点上执行，这样不会阻塞到客户端的请求，但是会影响到主从复制。<br>(2).如果确认键值总数确实比较少，可以执行该命令。<br>(3).使用scan命令渐进式的遍历所有键，可以有效防止阻塞。</p><h3><span style=\"font-size: inherit; color: rgb(51, 51, 51);\">二、使用scan+xargs实现</span></h3><p>开始实战，前三个步骤和上面一样，不再重复记录。</p><h4><span style=\"font-size: inherit; color: inherit;\">1.使用scan+xargs批量删除</span></h4><pre><code>[root@node1&nbsp;src]<span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(128, 128, 128); font-size: inherit; line-height: inherit; overflow-wrap: inherit !important; word-break: inherit !important;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0);\">#&nbsp;./redis-cli&nbsp;-h&nbsp;127.0.0.1&nbsp;-p&nbsp;6379&nbsp;--scan&nbsp;--pattern&nbsp;\'java*\'&nbsp;|&nbsp;xargs&nbsp;./redis-cli&nbsp;-h&nbsp;127.0.0.1&nbsp;-p&nbsp;6379&nbsp;del</span></span><br style=\"margin: 0px; padding: 0px;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0);\">(</span><span class=\"hljs-built_in\" style=\"margin: 0px; padding: 0px; color: rgb(248, 35, 117); font-size: inherit; line-height: inherit; overflow-wrap: inherit !important; word-break: inherit !important;\"><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0);\">integer</span></span><span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0);\">)&nbsp;4</span><br style=\"margin: 0px; padding: 0px;\"></code></pre><p>执行上述命令后4条记录全部删除。</p><h3><span style=\"font-size: inherit; color: rgb(51, 51, 51);\">三、xargs命令介绍</span></h3><p>xargs 可以将管道或标准输入（stdin）数据转换成命令行参数，也能够从文件的输出中读取数据。<br>xargs 是一个强有力的命令，它能够捕获一个命令的输出，然后传递给另外一个命令。</p><pre><code>./redis-cli&nbsp;-h&nbsp;<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">127.0</span>.<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">0</span>.<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">1</span>&nbsp;-p&nbsp;<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">6379</span>&nbsp;<span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(248, 35, 117); font-size: inherit; line-height: inherit; overflow-wrap: inherit !important; word-break: inherit !important;\"><span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255);\">keys</span></span>&nbsp;<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(238, 220, 112); font-size: inherit; line-height: inherit; overflow-wrap: inherit !important; word-break: inherit !important;\"><span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(163, 21, 21);\">\"java_suisui*\"</span></span>&nbsp;|&nbsp;xargs&nbsp;./redis-cli&nbsp;-h&nbsp;<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">127.0</span>.<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">0</span>.<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">1</span>&nbsp;-p&nbsp;<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); overflow-wrap: inherit !important; word-break: inherit !important;\">6379</span>&nbsp;del<br style=\"margin: 0px; padding: 0px;\"></code></pre><p>上述命令解释：<br>就是用keys java_suisui*查询出所有匹配的key，通过xargs命令，将前面查询出来的key作为后面redis的del命令的输入，这样就可以实现redis批量删除键了。</p>');
INSERT INTO `ape_document_article` VALUES (64, '<p style=\"margin-left: auto;\"><span style=\"font-size: 14pt;\">Failed to decode response: zlib_decode(): data error</span></p><p style=\"margin-left: auto;\"><img alt=\"微信图片_20191110224140.png\" src=\"/upload/image/2019-11-10/5dc82192826fd.png\" width=\"722\" height=\"139\"><br></p><p style=\"margin-left: auto;\"><span style=\"font-size: 14pt;\">解决问题的命令，composer diagnose&nbsp;&nbsp;</span><br></p><p style=\"margin-left: auto;\">&nbsp;<img alt=\"微信图片_20191110224308.png\" src=\"/upload/image/2019-11-10/5dc821ea08d8d.png\" width=\"728\" height=\"370\"></p><p style=\"margin-left: auto;\"><span style=\"font-size: 14pt;\">&nbsp;执行composer update 解决</span></p>');
INSERT INTO `ape_document_article` VALUES (65, '<p>视频储存是很多人的一个难题…自己买个服务器又需要带宽有需要硬盘够大！<br></p><p>看看怎么是一个完美的存储.</p><h2>开始操作</h2><p>原理 : 视频切片成 m3u8 之后，视频会变成一段段的 ts 格式的视频然后上传至图床</p><p><br></p><pre><code class=\"lang-php\"><!--?php\r\n \r\n$v_path = $argv[1]; //切片路径\r\n$v_name = $argv[2]; //带切片的视频路径名称\r\n$s = 5; //切片秒  ts 切片必须小于 5MB\r\nif (empty($v_path) || empty($v_name)) {\r\n	echo \"请填写完整参数\";\r\n	exit;\r\n}\r\n \r\nif ($v_path == \'/\' || $v_path == \'\\\\\') {\r\n	$v_path = \'\';\r\n} else {\r\n	mkFolder($v_path);\r\n	$v_path = $v_path . \"/\";\r\n}\r\n//这是 FFmpeg 处理命令大家自行更改\r\nexec(\"ffmpeg -i $v_name -c copy -map 0 -f segment -segment_list \" . $v_path . \"playlist.m3u8 -segment_time $s \" . $v_path . \"player%03d.ts\");\r\n \r\n$m = file_get_contents(\'./\' . $v_path . \'playlist.m3u8\');\r\n \r\npreg_match_all(\'/player(.*?)\\.ts/\', $m, $arr);\r\n \r\nforeach ($arr[1] as $key =--> $value) {\r\n	echo \"处理第\" . $value . \'个切片\' . \"\\n\";\r\n	$ali = upload(\'./\' . $v_path . \'player\' . $value . \'.ts\');\r\n	$m = str_replace(\'player\' . $value . \'.ts\', $ali, $m);\r\n	file_put_contents(\'./\' . $v_path . \'play.m3u8\', $m);\r\n}\r\n&nbsp;\r\necho \"处理完毕\" . \"\\n\";\r\necho \"播放链接为：/\" . $v_path . \'play.m3u8\';\r\n&nbsp;\r\nfunction upload($file) {\r\n	$post[\'file\'] = file_path($file);\r\n	$post[\'scene\'] = \'aeMessageCenterV2ImageRule\';\r\n	$post[\'name\'] = \'player.jpg\';\r\n	$rel = get_curl(\'https://kfupload.alibaba.com/mupload\', $post, \'iAliexpress/6.22.1 (iPhone; iOS 12.1.2; Scale/2.00)\');\r\n	$rel = json_decode($rel, true);\r\n&nbsp;\r\n	return $rel[\'url\'];\r\n}\r\n&nbsp;\r\nfunction get_curl($url, $post = 0, $ua = 0) {\r\n	$ch = curl_init();\r\n	curl_setopt($ch, CURLOPT_URL, $url);\r\n	// 不验证证书\r\n	curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\n	curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\r\n	// 最大执行时间\r\n	curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 120);\r\n	curl_setopt($ch, CURLOPT_TIMEOUT, 120);\r\n	$httpheader[] = \"Accept:application/json\";\r\n	$httpheader[] = \"Accept-Encoding:gzip,deflate,sdch\";\r\n	$httpheader[] = \"Accept-Language:zh-CN,zh;q=0.8\";\r\n	$httpheader[] = \"Connection:close\";\r\n	$ip = mt_rand(48, 140) . \".\" . mt_rand(10, 240) . \".\" . mt_rand(10, 240) . \".\" . mt_rand(10, 240); //随机 ip\r\n	$httpheader[] = \'CLIENT-IP:\' . $ip;\r\n	$httpheader[] = \'X-FORWARDED-FOR:\' . $ip;\r\n	curl_setopt($ch, CURLOPT_HTTPHEADER, $httpheader);\r\n	if ($post) {\r\n		curl_setopt($ch, CURLOPT_POST, 1);\r\n		curl_setopt($ch, CURLOPT_POSTFIELDS, $post);\r\n	}\r\n&nbsp;\r\n	if ($ua) {\r\n		curl_setopt($ch, CURLOPT_USERAGENT, $ua);\r\n	} else {\r\n		curl_setopt($ch, CURLOPT_USERAGENT, \"Mozilla/5.0 (Linux; U; Android 4.0.4; es-mx; HTC_One_X Build/IMM76D) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0\");\r\n	}\r\n	curl_setopt($ch, CURLOPT_ENCODING, \"gzip\");\r\n	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n	$ret = curl_exec($ch);\r\n	curl_close($ch);\r\n	return $ret;\r\n}\r\nfunction mkFolder($path) {\r\n	if (!is_readable($path)) {\r\n		is_file($path) or mkdir($path, 0700);\r\n	}\r\n}\r\nfunction file_path($file) {\r\n	if (class_exists(\'CURLFile\')) {\r\n		return $post[\'file\'] = new \\CURLFile(realpath($file));\r\n	} else {\r\n		return $post[\'file\'] = \'@\' . realpath($file);\r\n	}\r\n}\r\n&nbsp;</code></pre><p>把这个另存为 m3u8.php(什么名都成!这个就随便命名一下)</p><p>运行命令:</p><p><span style=\"color: rgb(202, 68, 64); font-size: 13px;\">php m3u8.php&nbsp;</span><a href=\"https://blog.kieng.cn/tag/%e8%a7%86%e9%a2%91\" target=\"_blank\">视频</a><span style=\"color: rgb(202, 68, 64); font-size: 13px;\">的储存路径 视频完整路径</span></p><p>如:<br><code>php m3u8.php mp4 wwwroot/test/test.mp4</code><br></p><p>注意:这个接口只能上次小于 5MB 以下的图片(视频切片)所以切片完文件大小必须小于 5MB,还有就是 PHP 本身就不适合写脚本,单线程处理,很慢.建议用 PY 或者 java(我不会,希望有大佬写一下),其他的自己看代码就能懂,其实没啥.</p><p>转载自&nbsp;KIENG 博客<br></p>');
INSERT INTO `ape_document_article` VALUES (66, '<p>找到需要下载的歌曲,然后分享,复制一下链接.</p><p>这个随便找一个:</p><pre><code><ol class=\"linenums\" style=\"-webkit-tap-highlight-color: transparent; margin-right: 0px; margin-bottom: 0px; margin-left: 33px; padding: 0px; list-style: none;\"><li class=\"L0\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"com\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(147,=\"\" 161,=\"\" 161);\"=\"\">//分享链接会泄露个人信息,我就*代替了</span></li><li class=\"L1\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">https</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">:</span><span class=\"com\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(147,=\"\" 161,=\"\" 161);\"=\"\">//node.kg.qq.com/play?s=**********&amp;shareuid=********&amp;topsource=a0_pn201001006_z11_u10923685_l0_t1577770997__</span></li></ol></code></pre><p>右键查看<a href=\"https://blog.kieng.cn/tag/%e6%ba%90%e7%a0%81\" target=\"_blank\">源码</a>:</p><p><img alt=\"PHP-全民 K 歌直链信息解析源码\" src=\"https://blog.kieng.cn/wp-content/uploads/2019/12/2019123106023297-1024x250.png\"></p><p>你会发现这其实一个 JSON 数据…那么就不用说了..</p><h2>源码</h2><pre><code><ol class=\"linenums\" style=\"-webkit-tap-highlight-color: transparent; margin-right: 0px; margin-bottom: 0px; margin-left: 33px; padding: 0px; list-style: none;\"><li class=\"L0\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\"><!--?</span--><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">php</span></span></li><li class=\"L1\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">&nbsp;</span></li><li class=\"L2\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">header</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'content-type:application/json\'</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">);</span></li><li class=\"L3\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">&nbsp;</span></li><li class=\"L4\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$url </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">=</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"lit\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(174,=\"\" 129,=\"\" 255);\"=\"\">@$_GET</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">[</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'url\'</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">];</span></li><li class=\"L5\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">&nbsp;</span></li><li class=\"L6\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"kwd\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(249,=\"\" 38,=\"\" 89);\"=\"\">if</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">empty</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$url</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">))</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">{</span></li><li class=\"L7\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">	echo json_encode</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">([</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'code\'</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">=&gt;</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"lit\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(174,=\"\" 129,=\"\" 255);\"=\"\">1</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'msg\'</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">=&gt;</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'没有播放链接\'</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">],</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"lit\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(174,=\"\" 129,=\"\" 255);\"=\"\">320</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">);</span></li><li class=\"L8\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">	</span><span class=\"kwd\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(249,=\"\" 38,=\"\" 89);\"=\"\">exit</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">;</span></li><li class=\"L9\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">}</span></li><li class=\"L0\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">&nbsp;</span></li><li class=\"L1\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$data </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">=</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> curlGet</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$url</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">);</span></li><li class=\"L2\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">&nbsp;</span></li><li class=\"L3\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$jsonData </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">=</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> getsubstr</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$data</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'window.__DATA__ = \'</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\';\'</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">);</span></li><li class=\"L4\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">&nbsp;</span></li><li class=\"L5\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$jsonArr </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">=</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> json_decode</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$jsonData</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"kwd\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(249,=\"\" 38,=\"\" 89);\"=\"\">true</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">);</span></li><li class=\"L6\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">&nbsp;</span></li><li class=\"L7\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$play </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">=</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">[</span></li><li class=\"L8\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">	</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'avatar\'</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">=&gt;</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> $jsonArr</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">[</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'detail\'</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">][</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'avatar\'</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">],</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"com\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(147,=\"\" 161,=\"\" 161);\"=\"\">//歌手头像</span></li><li class=\"L9\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">	</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'content\'</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">=&gt;</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> $jsonArr</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">[</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'detail\'</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">][</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'content\'</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">],</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"com\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(147,=\"\" 161,=\"\" 161);\"=\"\">//分享内容</span></li><li class=\"L0\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">	</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'cover\'</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">=&gt;</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> $jsonArr</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">[</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'detail\'</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">][</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'cover\'</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">],</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"com\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(147,=\"\" 161,=\"\" 161);\"=\"\">//歌曲封面</span></li><li class=\"L1\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">	</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'nick\'</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">=&gt;</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> $jsonArr</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">[</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'detail\'</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">][</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'kg_nick\'</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">],</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"com\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(147,=\"\" 161,=\"\" 161);\"=\"\">//歌手昵称</span></li><li class=\"L2\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">	</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'playurl\'</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">=&gt;</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> $jsonArr</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">[</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'detail\'</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">][</span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'playurl\'</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">],</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"com\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(147,=\"\" 161,=\"\" 161);\"=\"\">//mp3 下载地址</span></li><li class=\"L3\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">];</span></li><li class=\"L4\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">&nbsp;</span></li><li class=\"L5\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">echo json_encode</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$play</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"lit\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(174,=\"\" 129,=\"\" 255);\"=\"\">320</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">);</span></li><li class=\"L6\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">&nbsp;</span></li><li class=\"L7\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"com\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(147,=\"\" 161,=\"\" 161);\"=\"\">// 取中间文本函数</span></li><li class=\"L8\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"kwd\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(249,=\"\" 38,=\"\" 89);\"=\"\">function</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> getsubstr</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$str</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> $leftStr</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> $rightStr</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">)</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">{</span></li><li class=\"L9\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">&nbsp;</span></li><li class=\"L0\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">	$left </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">=</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> strpos</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$str</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> $leftStr</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">);</span></li><li class=\"L1\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">&nbsp;</span></li><li class=\"L2\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">	$right </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">=</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> strpos</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$str</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> $rightStr</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> $left</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">);</span></li><li class=\"L3\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">&nbsp;</span></li><li class=\"L4\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">	</span><span class=\"kwd\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(249,=\"\" 38,=\"\" 89);\"=\"\">if</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$left </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">&lt;</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"lit\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(174,=\"\" 129,=\"\" 255);\"=\"\">0</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"kwd\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(249,=\"\" 38,=\"\" 89);\"=\"\">or</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> $right </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">&lt;</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> $left</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">)</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">{</span></li><li class=\"L5\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">		</span><span class=\"kwd\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(249,=\"\" 38,=\"\" 89);\"=\"\">return</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"str\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(230,=\"\" 219,=\"\" 116);\"=\"\">\'\'</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">;</span></li><li class=\"L6\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">	</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">}</span></li><li class=\"L7\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">&nbsp;</span></li><li class=\"L8\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">	</span><span class=\"kwd\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(249,=\"\" 38,=\"\" 89);\"=\"\">return</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> substr</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$str</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> $left </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">+</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> strlen</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$leftStr</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">),</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> $right </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">-</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> $left </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">-</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> strlen</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$leftStr</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">));</span></li><li class=\"L9\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">}</span></li><li class=\"L0\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"kwd\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(249,=\"\" 38,=\"\" 89);\"=\"\">function</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> curlGet</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$url</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">)</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">{</span></li><li class=\"L1\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">	$ch </span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">=</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> curl_init</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">();</span></li><li class=\"L2\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">	curl_setopt</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$ch</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> CURLOPT_URL</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> $url</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">);</span></li><li class=\"L3\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">	curl_setopt</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$ch</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> CURLOPT_RETURNTRANSFER</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"kwd\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(249,=\"\" 38,=\"\" 89);\"=\"\">true</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">);</span></li><li class=\"L4\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">	curl_setopt</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$ch</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> CURLOPT_SSL_VERIFYPEER</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\"> </span><span class=\"kwd\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(249,=\"\" 38,=\"\" 89);\"=\"\">false</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">);</span></li><li class=\"L5\" style=\"-webkit-tap-highlight-color: transparent; line-height: 20px; margin-left: 0px; padding-left: 12px; color: rgb(190, 190, 197); list-style: decimal;\"><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">	curl_setopt</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">(</span><span class=\"pln\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(102,=\"\" 217,=\"\" 239);\"=\"\">$ch</span><span class=\"pun\" style=\"-webkit-tap-highlight-color: transparent; cursor: url(\" static=\"\" cur=\"\" default.cur\"),=\"\" url(\"=\"\" auto;=\"\" color:=\"\" rgb(248,=\"\" 248,=\"\" 242);\"=\"\">,</span></li></ol></code></pre>');
INSERT INTO `ape_document_article` VALUES (67, '<p><span style=\"font-size: 1px;\">在这个充满敌意的互联网，我们对您的网站进行动态安全评估，若您精心部署的HTTPS符合最佳安全实践，我们将会为您的客户展示MySSL检测通过的安全签章和高评分的评级报告，提高客户对您网站的信任和支付信心，进而增加订单量，提升品牌价值。</span><br></p><p>体验。</p><p><img src=\"https://www.liwei8090.com/wp-content/uploads/2018/09/liwei8090-MySSL-20180906001.jpg\" alt=\"给网站添加MySSL安全认证签章体验\" width=\"520\" height=\"340\"></p><p>&nbsp;</p><h3 style=\"margin-left: -21px;\">检测结果一：域名绑定未知非法IP</h3><p>对于这一类的攻击还是不得不防，万一被沦陷就损失惨重。回到正题，最后在MySSL通过在线用户反馈提交得以解决，解决的处理方式就是“不显示相关IP”。当然，现在已经没有显示问题，所以就没有办法提供截图。不管怎么样，问题得以解决，有可能是问题真实存在，也有可能是MySSL平台误判，都无从得知。对于网站的安全防御，后期还是不能松懈的。</p><p><img src=\"https://www.liwei8090.com/wp-content/uploads/2018/09/liwei8090-MySSL-20180906002.jpg\" alt=\"给网站添加MySSL安全认证签章体验\" width=\"520\" height=\"350\"></p><p>&nbsp;</p><h3 style=\"margin-left: -21px;\">检测结果二：PCI DSS不合规</h3><p>对于这个问题，其实就无关紧要了，这是一个浏览器兼容性的问题。解决的方法也很简单，对于WordPress网站来说，我们只需要通过SFTP找到yourdomain.com.conf文件中的TLS v1.0并删除即可。</p><ol><li>ssl_protocols&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLSv1.1&nbsp;TLSv1.2&nbsp;TLSv1.3;</li></ol><p>删除该标准后会导致老版本浏览器不兼容网站，但主流的Chrome、Firefox和国产浏览器基本都兼容。具体有关PCI DSS合规标准介绍和解决不合规问题，可以参阅详细原文《<a href=\"https://blog.myssl.com/pci-dss/\" target=\"_blank\">更严格的PCI DSS合规标准</a>》。</p><p><img src=\"https://www.liwei8090.com/wp-content/uploads/2018/09/liwei8090-MySSL-20180906003.jpg\" alt=\"给网站添加MySSL安全认证签章体验\" width=\"520\" height=\"290\"></p><p>&nbsp;</p><h3 style=\"margin-left: -21px;\">添加MySSL安全认证签章</h3><p>给自己网站添加MySSL安全认证签章无非就是涂一个新鲜感，然后亲测尝试了一下。当今的互联网似乎都充满了敌意，网友对网站的安全和个人隐私信息都很担忧，如果有一个工具能够对网站进行动态安全评估，这会使用户对你的网站提高信任度。</p><p>MySSL提供了4种样式添加安全认证签章，添加的方法也很简单，这里不再复述。详细的设置方法和样式代码可以阅读官方文档《<a href=\"https://blog.myssl.com/myssl-seal/\" target=\"_blank\">为您的网站添加MySSL安全认证签章</a>》，下面展示4种安全认证签章样式：</p><p><img src=\"https://www.liwei8090.com/wp-content/uploads/2018/09/liwei8090-MySSL-20180906004.jpg\" alt=\"给网站添加MySSL安全认证签章体验\" width=\"297\" height=\"203\"><img src=\"https://www.liwei8090.com/wp-content/uploads/2018/09/liwei8090-MySSL-20180906005.jpg\" alt=\"给网站添加MySSL安全认证签章体验\" width=\"297\" height=\"280\"><img src=\"https://www.liwei8090.com/wp-content/uploads/2018/09/liwei8090-MySSL-20180906006.jpg\" alt=\"给网站添加MySSL安全认证签章体验\" width=\"297\" height=\"226\"><img src=\"https://www.liwei8090.com/wp-content/uploads/2018/09/liwei8090-MySSL-20180906007.jpg\" alt=\"给网站添加MySSL安全认证签章体验\" width=\"297\" height=\"291\"></p><p>&nbsp;</p><p>有网友表示添加这样的HTTPS安全认证签章会给网站造成很多麻烦，比如：熊掌号收录问题、造成悬浮广告嫌疑。其中利弊各有取舍，出于好奇和安全体验了一次，大家可以在本页面底部查看效果。至于这个体验能持续多久，就不好保证了。毕竟这样的一个认证结构还没有被大众认可，所以大家自行取舍吧。</p>');
INSERT INTO `ape_document_article` VALUES (68, '<p>代码</p><p><br></p><pre><code class=\"lang-php\"><span style=\"color: rgb(98, 151, 85); background-color: rgb(35, 37, 37); font-style: italic;\">**<br></span><span style=\"color: rgb(98, 151, 85); background-color: rgb(35, 37, 37); font-style: italic;\"> * Curl 伪造 IP 并从指定网址获取数据<br></span><span style=\"color: rgb(98, 151, 85); background-color: rgb(35, 37, 37); font-style: italic;\"> * </span><span style=\"color: rgb(98, 151, 85); background-color: rgb(35, 37, 37); font-weight: bold; font-style: italic;\">@param </span><span style=\"color: rgb(98, 151, 85); background-color: rgb(35, 37, 37); font-style: italic;\">$url string 接口地址<br></span><span style=\"color: rgb(98, 151, 85); background-color: rgb(35, 37, 37); font-style: italic;\"> * </span><span style=\"color: rgb(98, 151, 85); background-color: rgb(35, 37, 37); font-weight: bold; font-style: italic;\">@param </span><span style=\"color: rgb(98, 151, 85); background-color: rgb(35, 37, 37); font-style: italic;\">$ip string|boolean 伪造的 IP<br></span><span style=\"color: rgb(98, 151, 85); background-color: rgb(35, 37, 37); font-style: italic;\"> * </span><span style=\"color: rgb(98, 151, 85); background-color: rgb(35, 37, 37); font-weight: bold; font-style: italic;\">@param </span><span style=\"color: rgb(98, 151, 85); background-color: rgb(35, 37, 37); font-style: italic;\">$isMobile boolean 是否手机<br></span><span style=\"color: rgb(98, 151, 85); background-color: rgb(35, 37, 37); font-style: italic;\"> * </span><span style=\"color: rgb(98, 151, 85); background-color: rgb(35, 37, 37); font-weight: bold; font-style: italic;\">@return </span><span style=\"color: rgb(98, 151, 85); background-color: rgb(35, 37, 37); font-style: italic;\">bool|string 抓取到的内容<br></span><span style=\"color: rgb(98, 151, 85); background-color: rgb(35, 37, 37); font-style: italic;\"> */<br></span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">function </span><span style=\"color: rgb(114, 115, 122); background-color: rgb(35, 37, 37);\">apiCurl</span><span style=\"background-color: rgb(35, 37, 37);\">(</span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$url</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">,</span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ip</span><span style=\"background-color: rgb(35, 37, 37);\">=</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">false,</span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$isMobile</span><span style=\"background-color: rgb(35, 37, 37);\">=</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">false</span><span style=\"background-color: rgb(35, 37, 37);\">){<br></span><span style=\"background-color: rgb(35, 37, 37);\">    </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ch </span><span style=\"background-color: rgb(35, 37, 37);\">= curl_init()</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">;     </span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">// Curl 初始化<br></span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">    </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$timeout </span><span style=\"background-color: rgb(35, 37, 37);\">= </span><span style=\"color: rgb(104, 151, 187); background-color: rgb(35, 37, 37);\">30</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">;     </span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">// 超时时间：30s<br></span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">    </span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">if</span><span style=\"background-color: rgb(35, 37, 37);\">(</span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$isMobile</span><span style=\"background-color: rgb(35, 37, 37);\">){<br></span><span style=\"background-color: rgb(35, 37, 37);\">        </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ua </span><span style=\"background-color: rgb(35, 37, 37);\">= </span><span style=\"color: rgb(106, 135, 89); background-color: rgb(35, 37, 37);\">\'Mozilla/5.0 (iPhone; CPU iPhone OS 12_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/72.0.3626.101 Mobile/15E148 Safari/605.1\'</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">;<br></span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">    </span><span style=\"background-color: rgb(35, 37, 37);\">}</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">else</span><span style=\"background-color: rgb(35, 37, 37);\">{<br></span><span style=\"background-color: rgb(35, 37, 37);\">        </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ua</span><span style=\"background-color: rgb(35, 37, 37);\">=</span><span style=\"color: rgb(106, 135, 89); background-color: rgb(35, 37, 37);\">\'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\'</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">;    </span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">// 伪造抓取 UA<br></span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">    </span><span style=\"background-color: rgb(35, 37, 37);\">}<br></span><span style=\"background-color: rgb(35, 37, 37);\">    curl_setopt(</span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ch</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37); font-style: italic;\">CURLOPT_URL</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$url</span><span style=\"background-color: rgb(35, 37, 37);\">)</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">;              </span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">// 设置 Curl 目标<br></span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">    </span><span style=\"background-color: rgb(35, 37, 37);\">curl_setopt(</span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ch</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37); font-style: italic;\">CURLOPT_RETURNTRANSFER</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(104, 151, 187); background-color: rgb(35, 37, 37);\">1</span><span style=\"background-color: rgb(35, 37, 37);\">)</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">;      </span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">// Curl 请求有返回的值<br></span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">    </span><span style=\"background-color: rgb(35, 37, 37);\">curl_setopt(</span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ch</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37); font-style: italic;\">CURLOPT_CONNECTTIMEOUT</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$timeout</span><span style=\"background-color: rgb(35, 37, 37);\">)</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">;     </span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">// 设置抓取超时时间<br></span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">    </span><span style=\"background-color: rgb(35, 37, 37);\">curl_setopt(</span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ch</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37); font-style: italic;\">CURLOPT_FOLLOWLOCATION</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(104, 151, 187); background-color: rgb(35, 37, 37);\">1</span><span style=\"background-color: rgb(35, 37, 37);\">)</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">;        </span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">// 跟踪重定向<br></span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">    </span><span style=\"background-color: rgb(35, 37, 37);\">curl_setopt(</span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ch</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37); font-style: italic;\">CURLOPT_ENCODING</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(106, 135, 89); background-color: rgb(35, 37, 37);\">\"\"</span><span style=\"background-color: rgb(35, 37, 37);\">)</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">;    </span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">// 设置编码<br></span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">    </span><span style=\"background-color: rgb(35, 37, 37);\">curl_setopt(</span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ch</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37); font-style: italic;\">CURLOPT_REFERER</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$url</span><span style=\"background-color: rgb(35, 37, 37);\">)</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">;   </span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">// 伪造来源网址<br></span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">    </span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">if</span><span style=\"background-color: rgb(35, 37, 37);\">(!</span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ip</span><span style=\"background-color: rgb(35, 37, 37);\">){<br></span><span style=\"background-color: rgb(35, 37, 37);\">        </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ip </span><span style=\"background-color: rgb(35, 37, 37);\">= rand(</span><span style=\"color: rgb(104, 151, 187); background-color: rgb(35, 37, 37);\">0</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">,</span><span style=\"color: rgb(104, 151, 187); background-color: rgb(35, 37, 37);\">254</span><span style=\"background-color: rgb(35, 37, 37);\">).</span><span style=\"color: rgb(106, 135, 89); background-color: rgb(35, 37, 37);\">\'.\'</span><span style=\"background-color: rgb(35, 37, 37);\">.rand(</span><span style=\"color: rgb(104, 151, 187); background-color: rgb(35, 37, 37);\">0</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">,</span><span style=\"color: rgb(104, 151, 187); background-color: rgb(35, 37, 37);\">254</span><span style=\"background-color: rgb(35, 37, 37);\">).</span><span style=\"color: rgb(106, 135, 89); background-color: rgb(35, 37, 37);\">\'.\'</span><span style=\"background-color: rgb(35, 37, 37);\">.rand(</span><span style=\"color: rgb(104, 151, 187); background-color: rgb(35, 37, 37);\">0</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">,</span><span style=\"color: rgb(104, 151, 187); background-color: rgb(35, 37, 37);\">254</span><span style=\"background-color: rgb(35, 37, 37);\">).</span><span style=\"color: rgb(106, 135, 89); background-color: rgb(35, 37, 37);\">\'.\'</span><span style=\"background-color: rgb(35, 37, 37);\">.rand(</span><span style=\"color: rgb(104, 151, 187); background-color: rgb(35, 37, 37);\">0</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">,</span><span style=\"color: rgb(104, 151, 187); background-color: rgb(35, 37, 37);\">254</span><span style=\"background-color: rgb(35, 37, 37);\">)</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">;</span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">//随机生成ip数据<br></span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">    </span><span style=\"background-color: rgb(35, 37, 37);\">}<br></span><span style=\"background-color: rgb(35, 37, 37);\">    curl_setopt(</span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ch</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37); font-style: italic;\">CURLOPT_USERAGENT</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ua</span><span style=\"background-color: rgb(35, 37, 37);\">)</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">;   </span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">// 伪造ua<br></span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">    </span><span style=\"background-color: rgb(35, 37, 37);\">curl_setopt(</span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ch</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37); font-style: italic;\">CURLOPT_ENCODING</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(106, 135, 89); background-color: rgb(35, 37, 37);\">\'gzip\'</span><span style=\"background-color: rgb(35, 37, 37);\">)</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">; </span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">// 取消gzip压缩<br></span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">    </span><span style=\"background-color: rgb(35, 37, 37);\">curl_setopt(</span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ch</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37); font-style: italic;\">CURLOPT_SSL_VERIFYPEER</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, FALSE</span><span style=\"background-color: rgb(35, 37, 37);\">)</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">; </span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">// https请求 不验证证书和hosts<br></span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">    </span><span style=\"background-color: rgb(35, 37, 37);\">curl_setopt(</span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ch</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37); font-style: italic;\">CURLOPT_SSL_VERIFYHOST</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">, FALSE</span><span style=\"background-color: rgb(35, 37, 37);\">)</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">;<br></span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">    </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$content </span><span style=\"background-color: rgb(35, 37, 37);\">= curl_exec(</span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ch</span><span style=\"background-color: rgb(35, 37, 37);\">)</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">;<br></span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">    </span><span style=\"background-color: rgb(35, 37, 37);\">curl_close(</span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$ch</span><span style=\"background-color: rgb(35, 37, 37);\">)</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">;    </span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">// 结束 Curl<br></span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">    </span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">return </span><span style=\"color: rgb(152, 118, 170); background-color: rgb(35, 37, 37);\">$content</span><span style=\"color: rgb(204, 120, 50); background-color: rgb(35, 37, 37);\">;    </span><span style=\"color: rgb(128, 128, 128); background-color: rgb(35, 37, 37);\">// 函数返回内容<br></span><span style=\"background-color: rgb(35, 37, 37);\">}<br></span></code></pre>');
INSERT INTO `ape_document_article` VALUES (69, '<p>先在form 表达中添加 layedit</p><pre><code><span style=\"color:#e8bf6a;\">&lt;div </span><span style=\"color:#bababa;\">class=</span><span style=\"color:#a5c261;\">\"layui-row layui-col-space10 layui-form-item\"</span><span style=\"color:#e8bf6a;\">&gt;<br></span><span style=\"color:#e8bf6a;\">    &lt;label </span><span style=\"color:#bababa;\">class=</span><span style=\"color:#a5c261;\">\"layui-form-label\"</span><span style=\"color:#e8bf6a;\">&gt;</span>问题内容：<span style=\"color:#e8bf6a;\">&lt;/label&gt;<br></span><span style=\"color:#e8bf6a;\">    &lt;div </span><span style=\"color:#bababa;\">class=</span><span style=\"color:#a5c261;\">\"layui-input-block\"</span><span style=\"color:#e8bf6a;\">&gt;<br></span><span style=\"color:#e8bf6a;\">        &lt;textarea </span><span style=\"color:#bababa;\">id=</span><span style=\"color:#a5c261;\">\"container\" </span><span style=\"color:#bababa;\">name=</span><span style=\"color:#a5c261;\">\"content\" </span><span style=\"color:#bababa;\">lay-verify=</span><span style=\"color:#a5c261;\">\"content\"</span><span style=\"color:#e8bf6a;\">&gt;&lt;/textarea&gt;<br></span><span style=\"color:#e8bf6a;\">    &lt;/div&gt;<br></span><span style=\"color:#e8bf6a;\">&lt;/div&gt;</span></code></pre><p>初始化</p><pre><code><span style=\"color:#cc7832;font-weight:bold;\">\r\nvar </span>$ = <span style=\"color:#9876aa;\">layui</span>.<span style=\"color:#9876aa;\">$<br></span><span style=\"color:#9876aa;\">    </span><span style=\"color:#cc7832;\">,</span>layedit = <span style=\"color:#9876aa;\">layui</span>.<span style=\"color:#9876aa;\">layedit<br></span><span style=\"color:#9876aa;\">    </span><span style=\"color:#cc7832;\">,</span>form = <span style=\"color:#9876aa;\">layui</span>.<span style=\"color:#9876aa;\">form</span><span style=\"color:#cc7832;\">;<br></span><span style=\"color:#cc7832;\"><br></span>layedit.<span style=\"color:#ffc66d;\">set</span>({<br>    <span style=\"color:#9876aa;\">uploadImage</span>: {<br>        <span style=\"color:#9876aa;\">url</span>: <span style=\"color:#6a8759;\">\"{:url(\'/admin/words/upload\')}\" </span><span style=\"color:#808080;\">//接口url<br></span><span style=\"color:#808080;\">    </span>}<br>})<span style=\"color:#cc7832;\">;<br></span><span style=\"color:#cc7832;font-weight:bold;\">var </span>index = layedit.<span style=\"color:#ffc66d;\">build</span>(<span style=\"color:#6a8759;\">\'container\'</span>)<span style=\"color:#cc7832;\">; </span><span style=\"color:#808080;\">//建立编辑器<br></span><span style=\"color:#808080;\">\r\n//处理同步问题<br></span>form.verify({<br>    <span style=\"color:#ffc66d;\">content</span>: <span style=\"color:#cc7832;font-weight:bold;\">function</span>(value) {<br>        <span style=\"color:#cc7832;font-weight:bold;\">return </span>layedit.<span style=\"color:#9876aa;\">sync</span>(index)<span style=\"color:#cc7832;\">;<br></span><span style=\"color:#cc7832;\">    </span>}<br>})<span style=\"color:#cc7832;\">;<br></span></code></pre><p><br></p><p>处理办法解析</p><p><span style=\"color: rgb(51, 51, 51); font-size: 14px;\">在&lt;textarea&gt;标签中加入lay-verify=\"content\" 然后在form的表单自定义验证中加入如下代码即可</span></p><pre><code>form.verify({<br>            content: function(value) { <br>                return layedit.sync(index);<br>            }<br>        });</code></pre><p><br></p><p>或者提交时候使用</p><pre><code>form.on(\'submit(form)\', function(data){&nbsp;&nbsp;\r\n&nbsp;&nbsp;layedit.sync(index);\r\n&nbsp;&nbsp;//获取数据用 $(selector).serialize() 而不是data.field,data.field获取会是修改后的值，或者延时一秒也可以\r\n}）</code></pre>');
INSERT INTO `ape_document_article` VALUES (70, '<p># Git</p><p># 常用命令</p><p>常用</p><p>git clone 克隆</p><p>git pull 拉取</p><p>git add . 加入缓存区</p><p>git commit -m “” 提交到本地</p><p>git push origin xxx 推送到远程服务器</p><p>git merge xxx 合并 合并其他分支代码到当前分支（当前分支获取到代码后，是commit本地，需要push才会到远程分支）</p><p>git checkout xxx 切换</p><p>git pull origin xxx 拉取其他分支代码到当前分支（当前分支获取到代码后，是commit本地，需要push才会到远程分支）</p><p>git branch 查看分支</p><p>git branch -a 查看全部分支</p><p>git remote update origin --prune 更新远程分支</p><p>git branch xxx 创建一个分支</p><p>git branch -d xxx 删除分支</p><p>&nbsp;</p><p>打tag</p><p>git tag 查看tag列表</p><p>git show v1.0 查看tag信息</p><p>git tag -a v1.0.0 -m \'tag备注\' 打一个tag</p><p>git push origin v1.0.0 将打好的tag推到远程仓库</p><p>&nbsp;</p><p>暂存(add后就表示修改的文件新增的文件添加到了缓存区stage)</p><p>git status 查看当前状态</p><p>&nbsp;</p><p>撤销(可以撤销add暂存到缓存区的文件)</p><p>git reset HEAD 撤销上一次add</p><p>git reset HEAD xxx.xxx 撤销某一个文件的add</p><p>&nbsp;</p><p>回滚(可以回滚commit，如果想回滚远程分支，先回滚当前分支，然后push)</p><p>git reset --hard HEAD^ 回滚上个版本（^的个数就是回滚几个版本，也可以用HEAD~2）</p><p>git reset --hard xxxx 回滚到某个版本号</p><p>git push origin xxx -f (回滚本地分支后如何回滚远程分支，需要强制推到远程分支，这样远程分支也会被回滚，强推容易回滚掉别人的版本)</p><p>git log 查看历史提交（版本号）</p><p>git reflow 操作历史</p><p>&nbsp;</p><p>初始化</p><p>git init 初始化</p><p>git remote add origin “xxx” 关联远程仓库地址</p><p>git config user.name&nbsp; “xxx” 设置名字</p><p>git config user.email “xxx” 设置邮箱</p><p>&nbsp;</p><p>GitHub</p><p>先fork一个仓库，然后pull request贡献代码</p><p># 工作场景</p><p>develop：多人开发的线上分支</p><p>new_branch：自己的本地分支（保持与develop同步）</p><p><br><br></p><p>拉取某个项目仓库</p><p>git clone xxx@xxx.git</p><p>&nbsp;</p><p>创建自己的分支，切换到该分支</p><p>git branch new_branch</p><p>git checkout new_branch</p><p>写代码 xxx xxx</p><p>提交代码</p><p>git pull origin develop // 同步线上分支develop到本地new_branch分支</p><p>// 合并代码/解决冲突</p><p>git add . 或者 git add xxx.xx // 添加到缓存区</p><p>git commit -m \"完成xxx，修复xxx，解决xxx，恢复xxx\" // 提交到本地</p><p>git push origin new_branch // 推送到远程new_branch分支</p><p>git checkout develop // 切换到多人开发的develop分支上</p><p>git pull origin develop // 拉一下最新代码</p><p>git merge new_branch // 将自己分支的代码合并到develop分支上</p><p>git push origin develop // 推送到远程develop分支</p><p>git checkout new_branch // 切换回自己的分支</p>');
INSERT INTO `ape_document_article` VALUES (71, '<p>Redis支持RDB和AOF两种持久化机制，持久化功能有效地避免因进程退出造成的数据丢失问题，当下次重启时利用之前持久化的文件即可实现数 据恢复。理解掌握持久化机制对于Redis运维非常重要</p><h1>1.RDB持久化</h1><p>RDB持久化是把当前进程数据生成快照保存到硬盘的过程，触发RDB持久化过程分为手动触发和自动触发</p><h4>1）触发机制</h4><p>手动触发分别对应save和bgsave命令</p><p>·save命令：阻塞当前Redis服务器，直到RDB过程完成为止，对于内存 比较大的实例会造成长时间阻塞，线上环境不建议使用</p><p>·bgsave命令：Redis进程执行fork操作创建子进程，RDB持久化过程由子 进程负责，完成后自动结束。阻塞只发生在fork阶段，一般时间很短</p><h4>2）自动触发RDB的持久</h4><p>1）使用save相关配置，如“save m n”。表示m秒内数据集存在n次修改 时，自动触发bgsave。</p><p>2）如果从节点执行全量复制操作，主节点自动执行bgsave生成RDB文件并发送给从节点，更多细节见6.3节介绍的复制原理。</p><p>3）执行debug reload命令重新加载Redis时，也会自动触发save操作。</p><p>4）默认情况下执行shutdown命令时，如果没有开启AOF持久化功能则 自动执行bgsave。</p><p>bgsave是主流的触发RDB持久化方式</p><p><img src=\"//upload-images.jianshu.io/upload_images/17993869-ec903b30431cb304.png?imageMogr2/auto-orient/strip|imageView2/2/w/721/format/webp\"></p><p>1）执行bgsave命令，Redis父进程判断当前是否存在正在执行的子进 程，如RDB/AOF子进程，如果存在bgsave命令直接返回。</p><p>2）父进程执行fork操作创建子进程，fork操作过程中父进程会阻塞，通 过info stats命令查看latest_fork_usec选项，可以获取最近一个fork操作的耗时，单位为微秒</p><p>3）父进程fork完成后，bgsave命令返回“Background saving started”信息并不再阻塞父进程，可以继续响应其他命令。</p><p>4）子进程创建RDB文件，根据父进程内存生成临时快照文件，完成后 对原有文件进行原子替换。执行lastsave命令可以获取最后一次生成RDB的 时间，对应info统计的rdb_last_save_time选项。</p><p>5）进程发送信号给父进程表示完成，父进程更新统计信息，具体见 info Persistence下的rdb_*相关选项。</p><p>RDB文件的处理</p><p>保存：RDB文件保存在dir配置指定的目录下，文件名通过dbfilename配 置指定。可以通过执行config set dir{newDir}和config set dbfilename{newFileName}运行期动态执行，当下次运行时RDB文件会保存到新目录。</p><h1>RDB的优缺点<br></h1><h4>RDB的优点：<br></h4><p>·RDB是一个紧凑压缩的二进制文件，代表Redis在某个时间点上的数据 快照。非常适用于备份，全量复制等场景。比如每6小时执行bgsave备份， 并把RDB文件拷贝到远程机器或者文件系统中（如hdfs），用于灾难恢复。</p><p>·Redis加载RDB恢复数据远远快于AOF的方式。</p><h4>RDB的缺点：</h4><p>·RDB方式数据没办法做到实时持久化/秒级持久化。因为bgsave每次运 行都要执行fork操作创建子进程，属于重量级操作，频繁执行成本过高。</p><p>·RDB文件使用特定二进制格式保存，Redis版本演进过程中有多个格式 的RDB版本，存在老版本Redis服务无法兼容新版RDB格式的问题。</p><p>针对RDB不适合实时持久化的问题，Redis提供了AOF持久化方式来解决。</p><h1>2.AOF持久化</h1><p>AOF（append only file）持久化：以独立日志的方式记录每次写命令， 重启时再重新执行AOF文件中的命令达到恢复数据的目的。AOF的主要作用 是解决了数据持久化的实时性，目前已经是Redis持久化的主流方式</p><h4>1）使用AOF</h4><p>开启AOF功能需要设置配置：appendonly yes，默认不开启。AOF文件名 通过appendfilename配置设置，默认文件名是appendonly.aof。保存路径同 RDB持久化方式一致，通过dir配置指定。AOF的工作流程操作：命令写入 （append）、文件同步（sync）、文件重写（rewrite）、重启加载 （load）</p><p><img src=\"//upload-images.jianshu.io/upload_images/17993869-798dae4b8f2b12bd.png?imageMogr2/auto-orient/strip|imageView2/2/w/352/format/webp\"></p><h4>1）所有的写入命令会追加到aof_buf（缓冲区）中。<br></h4><h4>2）AOF缓冲区根据对应的策略向硬盘做同步操作。</h4><p>AOF为什么把命令追加到aof_buf中？Redis使用单线程响应命令，如 果每次写AOF文件命令都直接追加到硬盘，那么性能完全取决于当前硬盘负 载。先写入缓冲区aof_buf中，还有另一个好处，Redis可以提供多种缓冲区同步硬盘的策略，在性能和安全性方面做出平衡</p><h4>3）随着AOF文件越来越大，需要定期对AOF文件进行重写，达到压缩的目的。</h4><p>重写后的AOF文件为什么可以变小？有如下原因：</p><p>1）进程内已经超时的数据不再写入文件。</p><p>2）旧的AOF文件含有无效命令，如del key1、hdel key2、srem keys、set a111、set a222等。重写使用进程内数据直接生成，这样新的AOF文件只保</p><p>留最终数据的写入命令。</p><p>3）多条写命令可以合并为一个，如：lpush list a、lpush list b、lpush list c可以转化为：lpush list a b c。为了防止单条命令过大造成客户端缓冲区溢 出，对于list、set、hash、zset等类型操作，以64个元素为界拆分为多条。</p><p>AOF重写降低了文件占用空间，除此之外，另一个目的是：更小的AOF 文件可以更快地被Redis加载</p><p>AOF重写过程可以手动触发和自动触发：</p><p>·手动触发：直接调用bgrewriteaof命令。</p><p>·自动触发：根据auto-aof-rewrite-min-size和auto-aof-rewrite-percentage参数确定自动触发时机</p><p>·auto-aof-rewrite-min-size：表示运行AOF重写时文件最小体积，默认 为64MB。</p><p>·auto-aof-rewrite-percentage：代表当前AOF文件空间 （aof_current_size）和上一次重写后AOF文件空间（aof_base_size）的比值。</p><p>自动触发时机=aof_current_size&gt;auto-aof-rewrite-minsize&amp;&amp;（aof_current_size-aof_base_size）/aof_base_size&gt;=auto-aof-rewritepercentage</p><p>其中aof_current_size和aof_base_size可以在info Persistence统计信息中查看。</p><p><img src=\"//upload-images.jianshu.io/upload_images/17993869-a4fb3ba15660fdb5.png?imageMogr2/auto-orient/strip|imageView2/2/w/542/format/webp\"></p><h4><br></h4><h4>4）当Redis服务器重启时，可以加载AOF文件进行数据恢复。</h4><p><img src=\"//upload-images.jianshu.io/upload_images/17993869-c33d4cf63aff4967.png?imageMogr2/auto-orient/strip|imageView2/2/w/550/format/webp\"></p><p>流程说明：</p><p>1）AOF持久化开启且存在AOF文件时，优先加载AOF文件，打印如下日志：</p><p>* DB loaded from append only file: 5.841 seconds</p><p>2）AOF关闭或者AOF文件不存在时，加载RDB文件，打印如下日志：</p><p>* DB loaded from disk: 5.586 seconds</p><p>3）加载AOF/RDB文件成功后，Redis启动成功。</p><p>4）AOF/RDB文件存在错误时，Redis启动失败并打印错误信息。</p><p>本章重点回顾</p><p>1）Redis提供了两种持久化方式：RDB和AOF。</p><p>2）RDB使用一次性生成内存快照的方式，产生的文件紧凑压缩比更 高，因此读取RDB恢复速度更快。由于每次生成RDB开销较大，无法做到实</p><p>时持久化，一般用于数据冷备和复制传输。</p><p>3）save命令会阻塞主线程不建议使用，bgsave命令通过fork操作创建子 进程生成RDB避免阻塞。</p><p>4）AOF通过追加写命令到文件实现持久化，通过appendfsync参数可以 控制实时/秒级持久化。因为需要不断追加写命令，所以AOF文件体积逐渐变大，需要定期执行重写操作来降低文件体积。</p><p>5）AOF重写可以通过auto-aof-rewrite-min-size和auto-aof-rewritepercentage参数控制自动触发，也可以使用bgrewriteaof命令手动触发。</p><p>6）子进程执行期间使用copy-on-write机制与父进程共享内存，避免内 存消耗翻倍。AOF重写期间还需要维护重写缓冲区，保存新的写入命令避免数据丢失。</p><p>7）持久化阻塞主线程场景有：fork阻塞和AOF追加阻塞。fork阻塞时间 跟内存量和系统有关，AOF追加阻塞说明硬盘资源紧张。</p><p>8）单机下部署多个实例时，为了防止出现多个子进程执行重写操作， 建议做隔离控制，避免CPU和IO资源竞争。</p><p>作者：huxt</p><p>链接：<a href=\"https://www.jianshu.com/p/d3ba7b8ad964\" rel=\"nofollow\">https://www.jianshu.com/p/d3ba7b8ad964</a></p><p>来源：简书</p><p>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>');
INSERT INTO `ape_document_article` VALUES (72, '<p>企业业务量比较小的时候，单台服务器就可以满足业务需要了。但是随着业务发展，单服务器的问题就凸显出来了：</p><ul><li>当服务器挂掉时，业务就会中断</li><li>当业务量增加，单台服务器性能变差，如何透明的扩展服务器和带宽，增加服务器吞吐量</li></ul><p>负载均衡器可以解决以上问题</p><h2>1 负载均衡器拓扑图</h2><p><img src=\"https://yqfile.alicdn.com/74801c3b3c7fe37bd77df14292d9998b4561473b.png\" alt=\"loadbalancer\" width=\"480\" height=\"236.4\"></p><p>本文会根据拓扑图，用haproxy和keepalived搭建一个负载均衡器</p><h2>2 准备</h2><h3>2.1 准备环境</h3><p>准备5台CentOS7.3主机和一个VIP地址:</p><ul><li><p>准备一个可用IP用作虚拟IP(VIP):</p><ul><li>VIP: 192.168.1.100</li></ul></li><li><p>负载均衡器会用到2台主机，一主一备的架构</p><ul><li>lb1(默认为主): 192.168.1.101</li><li>lb2(默认为备): 192.168.1.102</li></ul></li><li><p>后端服务器集群中主机的IP地址</p><ul><li>s1: 192.168.1.2</li><li>s2: 192.168.1.3</li><li>s3: 192.168.1.4</li></ul></li></ul><h3>2.2 主机配置</h3><h4>2.2.1 所有主机上关闭防火墙</h4><pre><code>systemctl stop firewalld\r\nsystemctl <span class=\"hljs-built_in\" style=\"color: rgb(230, 219, 116);\">disable</span> firewalld</code></pre><h4>2.2.2 所有主机关闭selinux</h4><pre><code>setenforce 0\r\nvi /etc/selinux/config\r\nSELINUX=disabled</code></pre><h3>2.3 安装haproxy和keepalived</h3><p>lb1和lb2上安装haproxy和keepalived</p><pre><code>yum install haproxy keepalived -y</code></pre><h3>2.4 安装nginx(有其他后端测程序，可省略此步)</h3><p>s1 s2 s3上安装nginx，目的是把nginx作为后端，如果有其他后端程序，这一步可以省略</p><pre><code>yum install epel-release -y\r\nyum install nginx -y</code></pre><h3>2.3 配置keepalived</h3><p>KeepAlived是基于VRRP(Virtual Router Redundancy Protocol，虚拟路由冗余协议)实现的一个高可用方案，通过VIP（虚拟IP）和心跳检测来实现高可用</p><p>Keepalived有两个角色，Master和Backup。一般会是１个Master,多个Backup。</p><p>Master会绑定VIP到自己网卡上，对外提供服务。Master和Backup会定时确定对方状态，当Master不可用的时候，Backup会通知网关，并把VIP绑定到自己的网卡上，实现服务不中断，高可用</p><h4>2.3.1　配置Master</h4><p>编辑lb1(192.168.1.101)上的/etc/keepalived/keepalived.conf</p><pre><code>! Configuration File <span class=\"hljs-keyword\" style=\"color: rgb(249, 38, 114);\">for</span> keepalived\r\n\r\nglobal_defs {\r\n   <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 通知邮件服务器的配置</span>\r\n   notification_email {\r\n     <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 当master失去VIP或则VIP的时候，会发一封通知邮件到your-email@qq.com</span>\r\n     your-email@qq.com\r\n   }\r\n   <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 发件人信息</span>\r\n   notification_email_from keepalived@qq.com\r\n   <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 邮件服务器地址</span>\r\n   smtp_server 127.0.0.1\r\n   <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 邮件服务器超时时间</span>\r\n   smtp_connect_timeout 30\r\n   <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 邮件TITLE</span>\r\n   router_id LVS_DEVEL\r\n}\r\n\r\nvrrp_instance VI_1 {\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 主机: MASTER</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 备机: BACKUP</span>\r\n    state MASTER\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 实例绑定的网卡, 用ip a命令查看网卡编号</span>\r\n    interface eno16777984\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 虚拟路由标识，这个标识是一个数字(1-255)，在一个VRRP实例中主备服务器ID必须一样</span>\r\n    virtual_router_id 88\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 优先级，数字越大优先级越高，在一个实例中主服务器优先级要高于备服务器</span>\r\n    priority 100\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 主备之间同步检查的时间间隔单位秒</span>\r\n    advert_int 1\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 验证类型和密码</span>\r\n    authentication {\r\n        <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 验证类型有两种 PASS和HA</span>\r\n        auth_<span class=\"hljs-built_in\" style=\"color: rgb(230, 219, 116);\">type</span> PASS\r\n        <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 验证密码，在一个实例中主备密码保持一样</span>\r\n        auth_pass 11111111\r\n    }\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 虚拟IP地址,可以有多个，每行一个</span>\r\n    virtual_ipaddress {\r\n        192.168.1.100\r\n    }\r\n}\r\n\r\nvirtual_server 192.168.1.100 443 {\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 健康检查时间间隔</span>\r\n    delay_loop 6\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 调度算法</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Doc: http://www.keepalived.org/doc/scheduling_algorithms.html</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Round Robin (rr)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Weighted Round Robin (wrr)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Least Connection (lc)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Weighted Least Connection (wlc)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Locality-Based Least Connection (lblc)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Locality-Based Least Connection with Replication (lblcr)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Destination Hashing (dh)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Source Hashing (sh)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Shortest Expected Delay (seq)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Never Queue (nq)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Overflow-Connection (ovf)</span>\r\n    lb_algo rr\r\n    lb_kind NAT\r\n    persistence_timeout 50\r\n    protocol TCP\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 通过调度算法把Master切换到真实的负载均衡服务器上</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 真实的主机会定期确定进行健康检查，如果MASTER不可用，则切换到备机上</span>\r\n    real_server 192.168.1.101 443 {\r\n        weight 1\r\n        TCP_CHECK {\r\n            <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 连接超端口</span>\r\n            connect_port 443\r\n            <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 连接超时时间</span>\r\n            connect_timeout 3\r\n        }\r\n    }\r\n    real_server 192.168.1.102 443 {\r\n        weight 1\r\n        TCP_CHECK {\r\n            connect_port 443\r\n            connect_timeout 3\r\n        }\r\n    }\r\n}</code></pre><h4>2.3.2　配置BACKUP</h4><p>编辑lb2(192.168.1.102)上的/etc/keepalived/keepalived.conf</p><pre><code>! Configuration File <span class=\"hljs-keyword\" style=\"color: rgb(249, 38, 114);\">for</span> keepalived\r\n\r\nglobal_defs {\r\n   <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 通知邮件服务器的配置</span>\r\n   notification_email {\r\n     <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 当master失去VIP或则VIP的时候，会发一封通知邮件到your-email@qq.com</span>\r\n     your-email@qq.com\r\n   }\r\n   <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 发件人信息</span>\r\n   notification_email_from keepalived@qq.com\r\n   <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 邮件服务器地址</span>\r\n   smtp_server 127.0.0.1\r\n   <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 邮件服务器超时时间</span>\r\n   smtp_connect_timeout 30\r\n   <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 邮件TITLE</span>\r\n   router_id LVS_DEVEL\r\n}\r\n\r\nvrrp_instance VI_1 {\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 主机: MASTER</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 备机: BACKUP</span>\r\n    state BACKUP\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 实例绑定的网卡, 用ip a命令查看网卡编号</span>\r\n    interface eno16777984\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 虚拟路由标识，这个标识是一个数字(1-255)，在一个VRRP实例中主备服务器ID必须一样</span>\r\n    virtual_router_id 88\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 优先级，数字越大优先级越高，在一个实例中主服务器优先级要高于备服务器</span>\r\n    priority 99\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 主备之间同步检查的时间间隔单位秒</span>\r\n    advert_int 1\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 验证类型和密码</span>\r\n    authentication {\r\n        <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 验证类型有两种 PASS和HA</span>\r\n        auth_<span class=\"hljs-built_in\" style=\"color: rgb(230, 219, 116);\">type</span> PASS\r\n        <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 验证密码，在一个实例中主备密码保持一样</span>\r\n        auth_pass 11111111\r\n    }\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 虚拟IP地址,可以有多个，每行一个</span>\r\n    virtual_ipaddress {\r\n        192.168.1.100\r\n    }\r\n}\r\n\r\nvirtual_server 192.168.1.100 443 {\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 健康检查时间间隔</span>\r\n    delay_loop 6\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 调度算法</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Doc: http://www.keepalived.org/doc/scheduling_algorithms.html</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Round Robin (rr)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Weighted Round Robin (wrr)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Least Connection (lc)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Weighted Least Connection (wlc)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Locality-Based Least Connection (lblc)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Locality-Based Least Connection with Replication (lblcr)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Destination Hashing (dh)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Source Hashing (sh)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Shortest Expected Delay (seq)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Never Queue (nq)</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Overflow-Connection (ovf)</span>\r\n    lb_algo rr\r\n    lb_kind NAT\r\n    persistence_timeout 50\r\n    protocol TCP\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 通过调度算法把Master切换到真实的负载均衡服务器上</span>\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 真实的主机会定期确定进行健康检查，如果MASTER不可用，则切换到备机上</span>\r\n    real_server 192.168.1.101 443 {\r\n        weight 1\r\n        TCP_CHECK {\r\n            <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 连接超端口</span>\r\n            connect_port 443\r\n            <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># 连接超时时间</span>\r\n            connect_timeout 3\r\n        }\r\n    }\r\n    real_server 192.168.1.102 443 {\r\n        weight 1\r\n        TCP_CHECK {\r\n            connect_port 443\r\n            connect_timeout 3\r\n        }\r\n    }\r\n}</code></pre><h3>2.4 配置haproxy</h3><p>编辑lb1(192.168.1.101)和lb2(192.168.1.102)上的/etc/haproxy/haproxy.cfg<br>把后端服务器IP(192.168.1.2, 192.168.1.3, 192.168.1.4)加到backend里</p><pre><code><span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\">#---------------------------------------------------------------------</span>\r\n<span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># Global settings</span>\r\n<span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\">#---------------------------------------------------------------------</span>\r\nglobal\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(230, 219, 116);\">log</span>         127.0.0.1 <span class=\"hljs-built_in\" style=\"color: rgb(230, 219, 116);\">local</span>2\r\n\r\n    chroot      /var/lib/haproxy\r\n    pidfile     /var/run/haproxy.pid\r\n    maxconn     4096\r\n    user        haproxy\r\n    group       haproxy\r\n    daemon\r\n\r\n    <span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\"># turn on stats unix socket</span>\r\n    stats socket /var/lib/haproxy/stats\r\n\r\nlisten stats\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(230, 219, 116);\">bind</span>    *:9000\r\n    mode    http\r\n    stats   <span class=\"hljs-built_in\" style=\"color: rgb(230, 219, 116);\">enable</span>\r\n    stats   hide-version\r\n    stats   uri       /stats\r\n    stats   refresh   30s\r\n    stats   realm     Haproxy\\ Statistics\r\n    stats   auth      admin:admin\r\n\r\n\r\nfrontend  k8s-api\r\n    <span class=\"hljs-built_in\" style=\"color: rgb(230, 219, 116);\">bind</span> *:443\r\n    mode tcp\r\n    option tcplog\r\n    tcp-request inspect-delay 5s\r\n    tcp-request content accept <span class=\"hljs-keyword\" style=\"color: rgb(249, 38, 114);\">if</span> { req_ssl_hello_<span class=\"hljs-built_in\" style=\"color: rgb(230, 219, 116);\">type</span> 1 }\r\n    default_backend k8s-api-backend\r\n\r\nbackend k8s-api-backend\r\n    mode tcp\r\n    option tcplog\r\n    option tcp-check\r\n    balance roundrobin\r\n    server master1 192.167.1.2:80 maxconn 1024 weight 5 check\r\n    server master2 192.167.1.3:80 maxconn 1024 weight 5 check\r\n    server master3 192.167.1.4:80 maxconn 1024 weight 5 check</code></pre><h3>2.5 配置nginx</h3><p>给nginx添加SSL证书，配置过程略</p><pre><code>vi /usr/share/nginx/html/index.html</code></pre><p>把index.html里面字符串Welcome to nginx改成Welcome to nginx HA</p><h2>3 启动服务</h2><h3>3.1 启动nginx</h3><pre><code>sudo systemctl start nginx\r\nsudo systemctl <span class=\"hljs-built_in\" style=\"color: rgb(230, 219, 116);\">enable</span> nginx</code></pre><h3>3.2 启动haproxy</h3><pre><code>sudo systemctl start haproxy\r\nsudo systemctl <span class=\"hljs-built_in\" style=\"color: rgb(230, 219, 116);\">enable</span> haproxy</code></pre><h3>3.3 启动keepalived</h3><pre><code>sudo systemctl start keepalived\r\nsudo systemctl <span class=\"hljs-built_in\" style=\"color: rgb(230, 219, 116);\">enable</span> keepalived</code></pre><p>在MASTER上运行ip a</p><pre><code> eno16777984: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP qlen 1000\r\n    link/ether 00:xx:xx:xx:3d:0c brd ff:ff:ff:ff:ff:ff\r\n    inet 192.168.1.101/24 brd 192.168.1.255 scope global eno16777984\r\n       valid_lft forever preferred_lft forever\r\n    inet 192.168.1.100/32 scope global eno16777984\r\n       valid_lft forever preferred_lft forever\r\n    inet6 eeee:eeee:1c9d:2009:250:56ff:fe9c:3d0c/64 scope global noprefixroute dynamic\r\n       valid_lft 7171sec preferred_lft 7171sec\r\n    inet6 eeee::250:56ff:eeee:3d0c/64 scope link\r\n       valid_lft forever preferred_lft forever</code></pre><p>会发现VIP(192.168.1.100)已经绑定好了</p><pre><code>inet 192.168.1.100/32 scope global eno16777984\r\n       valid_lft forever preferred_lft forever</code></pre><p>如果发现VIP无法绑定</p><pre><code>vi /etc/sysctl.conf</code></pre><p>添加两行</p><pre><code>net.ipv4.ip_forward = 1\r\nnet.ipv4.ip_nonlocal_<span class=\"hljs-built_in\" style=\"color: rgb(230, 219, 116);\">bind</span> = 1</code></pre><p>让新配置生效</p><pre><code>sysctl -p</code></pre><h2>4 验证</h2><h3>4.1 查看状态</h3><pre><code><span class=\"hljs-number\" style=\"color: rgb(174, 129, 255);\">1.</span> 在浏览器输入 http:<span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\">//192.168.1.100:9000/stats 查看haproxy状态</span>\r\n<span class=\"hljs-number\" style=\"color: rgb(174, 129, 255);\">2.</span> 在浏览器输入 https:<span class=\"hljs-comment\" style=\"color: rgb(117, 113, 94);\">//192.168.1.100 查看服务状态</span>\r\n   是否成功显示为nginx欢迎页面</code></pre><h3>4.2 主备切换</h3><pre><code><span class=\"hljs-bullet\" style=\"color: rgb(174, 129, 255);\">1. </span>在浏览器输入 https://192.168.1.100 查看是否成功显示nginx欢迎页面\r\n<span class=\"hljs-bullet\" style=\"color: rgb(174, 129, 255);\">2. </span>lb1(192.168.1.101)关机，查看是否还可以访问https://192.168.1.100， 如果成功，则说明VIP成功切换到备机\r\n<span class=\"hljs-bullet\" style=\"color: rgb(174, 129, 255);\">3. </span>在lb2(192.168.1.102)上执行ip a，查看网卡是否绑定VIP(192.168.1.100)\r\n<span class=\"hljs-bullet\" style=\"color: rgb(174, 129, 255);\">3. </span>启动lb1(192.168.1.101)\r\n<span class=\"hljs-code\" style=\"color: rgb(166, 226, 46);\">   目的是为了验证VIP是否切回MASTER主机(因为MASTER端的配置文件中priority为100，而BACKUP为99，health check会自动把VIP绑定到priority高的主机上)</span></code></pre><p>转载自&nbsp;<a href=\"https://yq.aliyun.com/articles/609851?spm=a2c4e.11153940.bloghomeflow.104.417a291abDIzgA\">https://yq.aliyun.com/articles/609851?spm=a2c4e.11153940.bloghomeflow.104.417a291abDIzgA</a></p>');
INSERT INTO `ape_document_article` VALUES (73, '<p><b>说明：仅以最快的速度记录部署成功，故会少很多步骤和介绍</b></p><p><b>准备</b></p><p>虚拟机(CentOS 7)</p><p>准备了4台虚拟机，用于测试</p><p>IP	作用</p><table><colgroup><col width=\"49.85422740524781%\"><col width=\"50.14577259475219%\"></colgroup><thead><tr><th>192.168.1.128<br></th><th>keepalived master<br></th></tr></thead><tbody><tr><td>192.168.1.129<br></td><td>&nbsp;keepalived backup<br></td></tr><tr><td>192.168.1.130<br></td><td>nginx1<br></td></tr><tr><td>192.168.1.131<br></td><td>nginx2<br></td></tr><tr><td>192.168.1.200<br></td><td>虚拟ip VIP<br></td></tr></tbody></table><p><b>架构示意图</b></p><p><img src=\"https://img-blog.csdnimg.cn/20190116204111426.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1cGVuZ2ZlaTEwMDk=,size_16,color_FFFFFF,t_70\"><br></p><p>软件安装</p><p>在192.168.1.128及192.168.1.129上安装keepalived</p><p>在192.168.1.130及192.168.1.131上安装nginx</p><p><b>防火墙配置</b></p><p>所有主机上关闭防火墙，仅部署测试用，具体配置请自行参考</p><pre><code>systemctl stop firewalld\r\nsystemctl <span class=\"hljs-built_in\" style=\"color: rgb(230, 219, 116);\">disable</span> firewalld</code></pre><p><br></p><p><b>基础软件安装</b></p><pre><code>yum install gcc\r\nyum -y install openssl-devel\r\nyum -y install libnl libnl-devel\r\nyum install -y libnfnetlink-devel\r\nyum -y install net-tools\r\nyum install vim -y</code></pre><p><b style=\"color: rgb(51, 51, 51);\">在两台<span style=\"color: rgb(51, 51, 51); font-size: 16px;\">keepalived</span>服务器安装 KeepAlived 和LVS管理工具&nbsp;<span style=\"color: rgb(51, 51, 51); font-size: 16px;\">ipvsadm</span>安装</b></p><pre><code>yum install  keepalived &nbsp;ipvsadm -y</code></pre><p>keepalived启动等命令</p><pre><code>systemctl  start|stop|restart|status|enable&nbsp; keepalived</code></pre><p>设置自启</p><pre><code>systemctl enable&nbsp;keepalived</code></pre><p><b>配置MASTER</b></p><p>进入192.168.1.128服务器</p><pre><code>cd /etc/keepalived</code></pre><p>#备份默认的keepalived配置</p><pre><code>mv keepalived.conf keepalived-back.conf\r\nvim keepalived.conf</code></pre><p>添加以下配置:</p><pre><code>global_defs {\r\n&nbsp; &nbsp;notification_email {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;edisonchou@hotmail.com\r\n&nbsp; &nbsp;}\r\n&nbsp; &nbsp;notification_email_from sns-lvs@gmail.com\r\n&nbsp; &nbsp;smtp_server 192.168.80.1\r\n&nbsp; &nbsp;smtp_connection_timeout 30\r\n&nbsp; &nbsp;router_id LVS_DEVEL&nbsp; # 设置lvs的id，在一个网络内应该是唯一的\r\n}\r\nvrrp_instance VI_1 {\r\n&nbsp; &nbsp; state MASTER&nbsp; &nbsp;#指定Keepalived的角色，MASTER为主，BACKUP为备 记得大写\r\n&nbsp; &nbsp; interface eno16777736&nbsp; #网卡id 不同的电脑网卡id会有区别 可以使用:ip a查看\r\n&nbsp; &nbsp; virtual_router_id 51&nbsp; #虚拟路由编号，主备要一致\r\n&nbsp; &nbsp; priority 100&nbsp; #定义优先级，数字越大，优先级越高，主DR必须大于备用DR\r\n&nbsp; &nbsp; advert_int 1&nbsp; #检查间隔，默认为1s\r\n&nbsp; &nbsp; authentication {&nbsp; &nbsp;#这里配置的密码最多为8位，主备要一致，否则无法正常通讯\r\n&nbsp; &nbsp; &nbsp; &nbsp; auth_type PASS\r\n&nbsp; &nbsp; &nbsp; &nbsp; auth_pass 1111\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp; virtual_ipaddress {\r\n&nbsp; &nbsp; &nbsp; &nbsp; 192.168.1.200&nbsp; #定义虚拟IP(VIP)为192.168.1.200，可多设，每行一个\r\n&nbsp; &nbsp; }\r\n}\r\n# 定义对外提供服务的LVS的VIP以及port\r\nvirtual_server 192.168.1.200 80 {\r\n&nbsp; &nbsp; delay_loop 6 # 设置健康检查时间，单位是秒\r\n&nbsp; &nbsp; lb_algo rr # 设置负载调度的算法为wlc\r\n&nbsp; &nbsp; lb_kind DR # 设置LVS实现负载的机制，有NAT、TUN、DR三个模式\r\n&nbsp; &nbsp; nat_mask 255.255.255.0\r\n&nbsp; &nbsp; persistence_timeout 0\r\n&nbsp; &nbsp; protocol TCP\r\n&nbsp; &nbsp; real_server 192.168.1.130 80 {&nbsp; # 指定real server1的IP地址\r\n&nbsp; &nbsp; &nbsp; &nbsp; weight 3&nbsp; &nbsp;# 配置节点权值，数字越大权重越高\r\n&nbsp; &nbsp; &nbsp; &nbsp; TCP_CHECK {\r\n&nbsp; &nbsp; &nbsp; &nbsp; connect_timeout 10\r\n&nbsp; &nbsp; &nbsp; &nbsp; nb_get_retry 3\r\n&nbsp; &nbsp; &nbsp; &nbsp; delay_before_retry 3\r\n&nbsp; &nbsp; &nbsp; &nbsp; connect_port 80\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp; real_server 192.168.1.131 80 {&nbsp; # 指定real server2的IP地址\r\n&nbsp; &nbsp; &nbsp; &nbsp; weight 3&nbsp; # 配置节点权值，数字越大权重越高\r\n&nbsp; &nbsp; &nbsp; &nbsp; TCP_CHECK {\r\n&nbsp; &nbsp; &nbsp; &nbsp; connect_timeout 10\r\n&nbsp; &nbsp; &nbsp; &nbsp; nb_get_retry 3\r\n&nbsp; &nbsp; &nbsp; &nbsp; delay_before_retry 3\r\n&nbsp; &nbsp; &nbsp; &nbsp; connect_port 80\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp;}\r\n}</code></pre><p><b>配置BACKUP</b></p><p>进入192.168.1.129服务器</p><pre><code>cd /etc/keepalived</code></pre><p>#备份默认的keepalived配置</p><pre><code>mv keepalived.conf keepalived-back.conf\r\nvim keepalived.conf</code></pre><p>添加以下配置:</p><pre><code>global_defs {\r\n&nbsp; &nbsp;notification_email {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;edisonchou@hotmail.com\r\n&nbsp; &nbsp;}\r\n&nbsp; &nbsp;notification_email_from sns-lvs@gmail.com\r\n&nbsp; &nbsp;smtp_server 192.168.80.1\r\n&nbsp; &nbsp;smtp_connection_timeout 30\r\n&nbsp; &nbsp;router_id LVS_DEVEL&nbsp; # 设置lvs的id，在一个网络内应该是唯一的\r\n}\r\nvrrp_instance VI_1 {\r\n&nbsp; &nbsp; state BACKUP #指定Keepalived的角色，MASTER为主，BACKUP为备 记得大写\r\n&nbsp; &nbsp; interface eno16777736&nbsp; #网卡id 不同的电脑网卡id会有区别 可以使用:ip a查看\r\n&nbsp; &nbsp; virtual_router_id 51&nbsp; #虚拟路由编号，主备要一致\r\n&nbsp; &nbsp; priority 50&nbsp; #定义优先级，数字越大，优先级越高，主DR必须大于备用DR\r\n&nbsp; &nbsp; advert_int 1&nbsp; #检查间隔，默认为1s\r\n&nbsp; &nbsp; authentication {&nbsp; &nbsp;#这里配置的密码最多为8位，主备要一致，否则无法正常通讯\r\n&nbsp; &nbsp; &nbsp; &nbsp; auth_type PASS\r\n&nbsp; &nbsp; &nbsp; &nbsp; auth_pass 1111\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp; virtual_ipaddress {\r\n&nbsp; &nbsp; &nbsp; &nbsp; 192.168.1.200&nbsp; #定义虚拟IP(VIP)为192.168.1.200，可多设，每行一个\r\n&nbsp; &nbsp; }\r\n}\r\n# 定义对外提供服务的LVS的VIP以及port\r\nvirtual_server 192.168.1.200 80 {\r\n&nbsp; &nbsp; delay_loop 6 # 设置健康检查时间，单位是秒\r\n&nbsp; &nbsp; lb_algo rr # 设置负载调度的算法为wlc\r\n&nbsp; &nbsp; lb_kind DR # 设置LVS实现负载的机制，有NAT、TUN、DR三个模式\r\n&nbsp; &nbsp; nat_mask 255.255.255.0\r\n&nbsp; &nbsp; persistence_timeout 0\r\n&nbsp; &nbsp; protocol TCP\r\n&nbsp; &nbsp; real_server 192.168.1.130 80 {&nbsp; # 指定real server1的IP地址\r\n&nbsp; &nbsp; &nbsp; &nbsp; weight 3&nbsp; &nbsp;# 配置节点权值，数字越大权重越高\r\n&nbsp; &nbsp; &nbsp; &nbsp; TCP_CHECK {\r\n&nbsp; &nbsp; &nbsp; &nbsp; connect_timeout 10\r\n&nbsp; &nbsp; &nbsp; &nbsp; nb_get_retry 3\r\n&nbsp; &nbsp; &nbsp; &nbsp; delay_before_retry 3\r\n&nbsp; &nbsp; &nbsp; &nbsp; connect_port 80\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp; real_server 192.168.1.131 80 {&nbsp; # 指定real server2的IP地址\r\n&nbsp; &nbsp; &nbsp; &nbsp; weight 3&nbsp; # 配置节点权值，数字越大权重越高\r\n&nbsp; &nbsp; &nbsp; &nbsp; TCP_CHECK {\r\n&nbsp; &nbsp; &nbsp; &nbsp; connect_timeout 10\r\n&nbsp; &nbsp; &nbsp; &nbsp; nb_get_retry 3\r\n&nbsp; &nbsp; &nbsp; &nbsp; delay_before_retry 3\r\n&nbsp; &nbsp; &nbsp; &nbsp; connect_port 80\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp;}\r\n}\r\n</code></pre><p>配置注意项</p><p>router_id</p><p>后面跟的自定义的ID在同一个网络下是一致的</p><p>state</p><p>state后跟的MASTER和BACKUP必须是大写；否则会造成配置无法生效的问题</p><p>interface</p><p>网卡ID；这个值不能完全拷贝我的配置，要根据自己的实际情况来看，可以使用以下方式查询</p><p>ip a</p><p><img src=\"https://img-blog.csdnimg.cn/20190117165709448.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1cGVuZ2ZlaTEwMDk=,size_16,color_FFFFFF,t_70\"><br></p><p>priority</p><p>主备优先级</p><p>MASTER中配置的priority必须比BACKUP大；差值最好&gt;=50</p><p>authentication</p><p>主备之间的认证方式</p><p>一般使用PASS即可；主备的配置必须一致；否则无法通讯，会导致裂脑；密码不能大于8位</p><p>virtual_ipaddress</p><p>配置的VIP；允许配置多个</p><p>启动keepalived</p><p>在192.168.1.128和192.168.1.129下分别执行以下指令重启keepalived</p><pre><code>systemctl start keepalived</code></pre><p>检查主keepalived 启动后的配置情况</p><p>ip a</p><p><img src=\"https://img-blog.csdnimg.cn/2019011717090497.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1cGVuZ2ZlaTEwMDk=,size_16,color_FFFFFF,t_70\"><br></p><p>如果网卡下出现192.168.1.200（VIP）说明主已经启动成功</p><p>检查备keepalived 启动后的配置情况</p><p>ip a</p><p>备服务器的网卡下没有出现192.168.1.200（VIP）的ip，说明备服务正常</p><p>注:如果这里也出现了VIP，那么说明裂脑了，需要检查防火墙是否配置正确；是否允许了vrrp的多播通讯</p><p><b><img src=\"https://img-blog.csdnimg.cn/20190117171119191.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1cGVuZ2ZlaTEwMDk=,size_16,color_FFFFFF,t_70\"><br></b></p><p><b>nginx安装</b></p><p>只需要在192.168.1.130及192.168.1.131上安装nginx即可</p><p>安装nginx，目的是把nginx作为后端，如果有其他后端程序，这一步可以省略</p><pre><code>yum install epel-release -y\r\nyum install nginx -y</code></pre><p>启动nginx服务</p><p>确保nginx已经正常运行了</p><pre><code>ps -ef|grep nginx</code></pre><p>编辑realserver脚本文件两台机器都要搞<br></p><p>进入init文件夹</p><p><code>cd /etc/init.d/</code></p><p>编辑脚本</p><p><code>vim realserver</code></p><p>添加以下脚本</p><p>#虚拟的vip 根据自己的实际情况定义</p><pre><code>#!/bin/bash\r\n#虚拟的vip 根据自己的实际情况定义\r\nSNS_VIP=192.168.1.200\r\n/etc/rc.d/init.d/functions\r\ncase \"$1\" in\r\nstart)\r\n&nbsp; &nbsp; &nbsp; &nbsp;ifconfig lo:0 $SNS_VIP netmask 255.255.255.255 broadcast $SNS_VIP\r\n&nbsp; &nbsp; &nbsp; &nbsp;/sbin/route add -host $SNS_VIP dev lo:0\r\n&nbsp; &nbsp; &nbsp; &nbsp;echo \"1\" &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore\r\n&nbsp; &nbsp; &nbsp; &nbsp;echo \"2\" &gt;/proc/sys/net/ipv4/conf/lo/arp_announce\r\n&nbsp; &nbsp; &nbsp; &nbsp;echo \"1\" &gt;/proc/sys/net/ipv4/conf/all/arp_ignore\r\n&nbsp; &nbsp; &nbsp; &nbsp;echo \"2\" &gt;/proc/sys/net/ipv4/conf/all/arp_announce\r\n&nbsp; &nbsp; &nbsp; &nbsp;sysctl -p &gt;/dev/null 2&gt;&amp;1\r\n&nbsp; &nbsp; &nbsp; &nbsp;echo \"RealServer Start OK\"\r\n&nbsp; &nbsp; &nbsp; &nbsp;;;\r\nstop)\r\n&nbsp; &nbsp; &nbsp; &nbsp;ifconfig lo:0 down\r\n&nbsp; &nbsp; &nbsp; &nbsp;route del $SNS_VIP &gt;/dev/null 2&gt;&amp;1\r\n&nbsp; &nbsp; &nbsp; &nbsp;echo \"0\" &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore\r\n&nbsp; &nbsp; &nbsp; &nbsp;echo \"0\" &gt;/proc/sys/net/ipv4/conf/lo/arp_announce\r\n&nbsp; &nbsp; &nbsp; &nbsp;echo \"0\" &gt;/proc/sys/net/ipv4/conf/all/arp_ignore\r\n&nbsp; &nbsp; &nbsp; &nbsp;echo \"0\" &gt;/proc/sys/net/ipv4/conf/all/arp_announce\r\n&nbsp; &nbsp; &nbsp; &nbsp;echo \"RealServer Stoped\"\r\n&nbsp; &nbsp; &nbsp; &nbsp;;;\r\n*)\r\n&nbsp; &nbsp; &nbsp; &nbsp;echo \"Usage: $0 {start|stop}\"\r\n&nbsp; &nbsp; &nbsp; &nbsp;exit 1\r\nesac\r\nexit 0\r\n<br></code></pre><p>保存并设置脚本的执行权限<br></p><pre><code>chmod 755 /etc/init.d/realserver</code></pre><p>因为realserver脚本中用到了/etc/rc.d/init.d/functions，所以一并设置权限</p><pre><code>chmod 755 /etc/rc.d/init.d/functions</code></pre><p>执行脚本</p><pre><code>service realserver start</code></pre><p><img src=\"https://img-blog.csdnimg.cn/20190117163235313.\"><br></p><p>查看执行结果</p><p>ip a</p><p>如果看到以下效果，说明脚本已经执行成功了</p><p><img src=\"https://img-blog.csdnimg.cn/2019011716340393.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1cGVuZ2ZlaTEwMDk=,size_16,color_FFFFFF,t_70\"><br></p><p><b><br></b></p><p><b>LVS管理工具-ipvsadm</b></p><p>查看统计</p><p>查看当前配置的虚拟服务和各个RS的权重</p><pre><code>　ipvsadm -Ln</code></pre><p>查看当前ipvs模块中记录的连接（可用于观察转发情况）</p><pre><code>　ipvsadm -lnc</code></pre><p>查看ipvs模块的转发情况统计</p><pre><code>ipvsadm -Ln --stats | --rate</code></pre><p>lvs超时配置</p><p>查看lvs的超时时间</p><pre><code>ipvsadm -L --timeout</code></pre><p>优化连接超时时间</p><pre><code>ipvsadm --set 1 10 300</code></pre><p>这里的TCP的连接超时时间最好和keepalived中的persistence_timeout超时时间保持一致；persistence_timeout的超时时间表示指定时间内，同ip的请求会转发到同一个服务；</p><p>测试</p><p>正常代理转发</p><p>使用我linux虚拟机的windows宿主机进行测试</p><p>测试vip</p><p>ping 192.168.1.200</p><p><img src=\"https://img-blog.csdnimg.cn/20190117171541433.\"><br></p><p>测试vip监听的端口</p><p>telnet 192.168.1.200 80</p><p><img src=\"https://img-blog.csdnimg.cn/20190117171722528.\"><br><br></p><p>请求虚拟IP查看转发的服务</p><p><img src=\"https://img-blog.csdnimg.cn/20190117183101312.gif\"><br></p><p><br></p><p>KeepAlived高可用测试</p><p>停掉主keepalived</p><pre><code>systemctl stop keepalived&nbsp;</code></pre><p>vip漂移至备服务器</p><p><img src=\"https://img-blog.csdnimg.cn/20190117185442175.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1cGVuZ2ZlaTEwMDk=,size_16,color_FFFFFF,t_70\"><br></p><p>此时网页访问:192.168.1.200依然能够正常访问；却分发依然正常</p><p><img src=\"https://img-blog.csdnimg.cn/20190117185850848.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1cGVuZ2ZlaTEwMDk=,size_16,color_FFFFFF,t_70\"><br><br></p><p>重启主keepalived</p><p>主服务恢复之后；vip又会自动漂移回主服务</p><p>LVS监控真实服务测试</p><p>查看最新的虚拟ip对应的RealServer的情况</p><pre><code>ipvsadm -l<br></code></pre><p><img src=\"https://img-blog.csdnimg.cn/2019011719233567.\"><br></p><p>可以看出192.168.1.130和192.168.1.131两台正式服务都还在</p><p>测试停掉192.168.1.130</p><p><img src=\"https://img-blog.csdnimg.cn/20190117192516121.\" width=\"640\" height=\"101.95348837209302\"><br><br></p><p>再次查看虚拟ip对应的RealServer的情况</p><p><br><img src=\"https://img-blog.csdnimg.cn/20190117192556364.\"><br></p><p>可以看出192.168.1.130这台已经挂掉的服务器已经被移除了</p><p>测试访问虚拟ip</p><p><br><img src=\"https://img-blog.csdnimg.cn/20190117192749836.gif\"><br></p><p>所有的访问都只会转发到131的真实服务器</p><p>恢复192.168.1.130</p><p>lvs又会自动监控并加入192.168.1.130</p><p><img src=\"https://img-blog.csdnimg.cn/2019011719295996.\" width=\"640\" height=\"82.68733850129199\"><br></p><p><img src=\"https://img-blog.csdnimg.cn/20190117193014318.\"><br></p><p><b>常见问题</b></p><p><b>裂脑</b></p><p>主备keepalived服务器同时出现了VIP；导致vip无法正常使用</p><p>常见原因为防火墙配置所致导致多播心跳失败</p><p><b>vip能ping通，但是vip监听的端口不通</b></p><p>第一个原因:nginx1和nginx2两台服务器的服务没有正常启动</p><p>第二个原因:请参考上面Nginx服务器那一大项中所说的配置，可能没有配置好</p><p><b>vip ping不通</b></p><p>核对是否出现裂脑</p><p>核对keepalived的配置是否正确</p><p><br></p><p>参考文章，感谢原作者</p><p><a href=\"https://blog.csdn.net/lupengfei1009/article/details/86514445\" rel=\"nofollow\">https://blog.csdn.net/lupengfei1009/article/details/86514445</a></p><p><a href=\"https://www.linuxidc.com/Linux/2016-03/129232.htm\">https://www.linuxidc.com/Linux/2016-03/129232.htm</a><br></p>');
INSERT INTO `ape_document_article` VALUES (74, '<h1 style=\"margin-left: 0pt;\"><span style=\"color: rgb(0, 0, 0); font-size: 14pt;\">1.准备工作。</span></h1><p style=\"margin-left: 0pt;\"><span style=\"color: rgb(51, 51, 51); font-size: 12pt;\"><font>准备三台虚拟机</font></span></p><p style=\"margin-left: 0pt;\"><span style=\"color: rgb(51, 51, 51); font-size: 12pt;\">nginx<font>负载均衡器 </font><font>192.168.0.204</font></span></p><p style=\"margin-left: 0pt;\"><span style=\"color: rgb(51, 51, 51); font-size: 12pt;\"><font>两台</font>nginx<font>主机 </font><font>192.168.0202/192.168.0.203</font></span></p><p style=\"margin-left: 0pt;\"><b><span style=\"color: rgb(51, 51, 51);\">1.1&nbsp;</span></b><b><span style=\"color: rgb(51, 51, 51);\"><font>关闭防火墙</font></span></b><b></b></p><p><span style=\"color: rgb(0, 0, 0); font-size: 10.5pt;\"><font>所有主机上关闭防火墙，仅部署测试用，具体配置请自行参考</font></span></p><pre><code>systemctl&nbsp;stop firewalld\r\nsystemctl&nbsp;disable&nbsp;firewalld</code></pre><p style=\"margin-left: 0pt;\"><b><span style=\"color: rgb(51, 51, 51);\">1.2 </span></b><b><span style=\"color: rgb(51, 51, 51);\"><font>所有主机安装</font>nginx</span></b><b></b></p><pre><code>yum install epel-release -y\r\nyum install nginx -y</code></pre><h1 style=\"margin-left: 0pt;\"><span style=\"color: rgb(0, 0, 0); font-size: 14pt;\">2.Nginx负载均衡的集中方式介绍</span></h1><h2 style=\"margin-left: 0pt;\"><span style=\"color: rgb(0, 0, 0); font-size: 13pt;\">2.1 轮询</span></h2><p style=\"margin-left: 0pt;\"><span style=\"color: rgb(51, 51, 51); font-size: 12pt;\"><font>轮询方式是</font>Nginx<font>负载默认的方式，顾名思义，所有请求都按照时间顺序分配到不同的服务上，如果服务</font><font>Down</font><font>掉，可以自动剔除，如下配置后轮训</font><font>10001</font><font>服务和</font><font>10002</font><font>服务。</font></span></p><pre><code>upstream &nbsp;cluster&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server &nbsp;&nbsp;192.168.0.202;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server &nbsp;&nbsp;192.168.0.203;\r\n}</code></pre><h2 style=\"margin-left: 0pt;\"><span style=\"color: rgb(0, 0, 0); font-size: 13pt;\">2.2 权重</span></h2><p style=\"margin-left: 0pt;\"><span style=\"color: rgb(51, 51, 51); font-size: 12pt;\"><font>指定每个服务的权重比例，</font>weight<font>和访问比率成正比，通常用于后端服务机器性能不统一，将性能好的分配权重高来发挥服务器最大性能，如下配置后</font><font>10002</font><font>服务的访问比率会是</font><font>10001</font><font>服务的二倍。</font></span></p><pre><code>upstream &nbsp;cluster&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server &nbsp;&nbsp;192.168.0.202&nbsp;weight=1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server &nbsp;&nbsp;192.168.0.203&nbsp;weight=2;\r\n}</code></pre><h2 style=\"margin-left: 0pt;\"><span style=\"color: rgb(0, 0, 0); font-size: 13pt;\">2.3 iphash</span></h2><p style=\"margin-left: 0pt;\"><span style=\"color: rgb(51, 51, 51); font-size: 12pt;\"><font>每个请求都根据访问</font>ip<font>的</font><font>hash</font><font>结果分配，经过这样的处理，每个访客固定访问一个后端服务，如下配置（</font><font>ip_hash</font><font>可以和</font><font>weight</font><font>配合使用）。</font></span></p><pre><code>upstream &nbsp;cluster&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip_hash;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server &nbsp;&nbsp;192.168.0.202&nbsp;weight=1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server &nbsp;&nbsp;192.168.0.203&nbsp;weight=2;\r\n}</code></pre><h2 style=\"margin-left: 0pt;\"><span style=\"color: rgb(0, 0, 0); font-size: 13pt;\">2.4 最少连接</span></h2><p style=\"margin-left: 0pt;\"><span style=\"color: rgb(51, 51, 51); font-size: 12pt;\"><font>将请求分配到连接数最少的服务上。</font></span></p><pre><code>upstream &nbsp;cluster&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;least_conn;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server &nbsp;&nbsp;192.168.0.202&nbsp;weight=1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server &nbsp;&nbsp;192.168.0.203&nbsp;weight=2;\r\n}</code></pre><h2 style=\"margin-left: 0pt;\"><span style=\"color: rgb(0, 0, 0); font-size: 13pt;\">2.5 fair</span></h2><p style=\"margin-left: 0pt;\"><span style=\"color: rgb(51, 51, 51); font-size: 12pt;\"><font>按后端服务器的响应时间来分配请求，响应时间短的优先分配。</font></span></p><pre><code>upstream &nbsp;cluster&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server &nbsp;&nbsp;192.168.0.202&nbsp;weight=1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server &nbsp;&nbsp;192.168.0.203&nbsp;weight=2;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fair; &nbsp;\r\n}</code></pre><h1 style=\"margin-left: 0pt;\"><span style=\"color: rgb(0, 0, 0); font-size: 14pt;\">3.Nginx配置</span></h1><p style=\"margin-left: 0pt;\"><span style=\"color: rgb(51, 51, 51); font-size: 12pt;\"><font>以轮训为例，如下是</font>nginx.conf<font>完整代码。</font></span></p><pre><code>worker_processes &nbsp;1;\r\nevents&nbsp;{\r\nworker_connections &nbsp;1024;\r\n}\r\nhttp&nbsp;{\r\n&nbsp;&nbsp;&nbsp;upstream &nbsp;cluster&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server &nbsp;&nbsp;192.168.0.202;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server &nbsp;&nbsp;192.168.0.203;\r\n&nbsp;&nbsp;&nbsp;}\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;server&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listen &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server_name &nbsp;localhost;\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;/&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy_pass http://cluster;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy_redirect&nbsp;default;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</code></pre><h1 style=\"margin-left: 0pt;\"><span style=\"color: rgb(0, 0, 0); font-size: 14pt;\">4.测试</span></h1><p style=\"margin-left: 0pt;\"><span style=\"color: rgb(51, 51, 51); font-size: 12pt;\"><font>重启</font>nginx<font>，第一次访问</font></span><span style=\"color: rgb(66, 152, 186); font-size: 12pt;\">192.168.0.204</span><span style=\"color: rgb(51, 51, 51); font-size: 12pt;\"><font>如图所示，</font></span></p><p style=\"margin-left: 0pt;\"><img alt=\"微信图片_20200404154222.png\" src=\"/upload/image/2020-04-04/5e883c08947e8.png\" width=\"640\" height=\"286.15579480683976\"><br></p><p style=\"margin-left: 0pt;\"><span style=\"color: rgb(51, 51, 51); font-size: 12pt;\"><font>在次访问如图所示</font></span></p><p style=\"margin-left: 0pt;\"><img alt=\"微信图片_20200404154231.png\" src=\"/upload/image/2020-04-04/5e883c1b9e07f.png\" width=\"616\" height=\"270\"><br></p><p style=\"margin-left: 0pt;\"><span style=\"color: rgb(51, 51, 51); font-size: 12pt;\"><font>如果要修改负载均衡算法修改对应</font>upstream<font>模块即可。</font></span></p>');
INSERT INTO `ape_document_article` VALUES (75, '<p>黑白css代码<br></p><pre><code>html{-webkit-filter: grayscale(100%);-moz-filter: grayscale(100%);-ms-filter: grayscale(100%);-o-filter: grayscale(100%);filter: grayscale(100%);filter: gray; }<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (76, '<h3>前言</h3><blockquote>最近帮朋友的公司部署了一套分流+水印的直播系统<p>顺手打包成docker镜像，方便大家需要用到的时候开箱即用，不需要百度一些零碎的文章<br>也可做简单的直播服务，只需调整配置文件便可达到你的需求.</p><p>需求：将直播流分流到两个云厂商的直播云，一个有水印，一个无水印。使用hls播放</p><p>朋友需求的拓扑示意图：</p><p><img alt=\"68747470733a2f2f63646e2e61723431342e636f6d2f61723431342d6e67696e782d72746d702e706e67.png\" src=\"/upload/image/2020-04-09/5e8f1f205180b.png\" width=\"640\" height=\"343.5387673956262\"><br></p><p>当前拓扑示意图（阿里云和腾讯云不方便放出推流和拉流地址，有兴趣的同学可以去申请玩一下）</p><p><img alt=\"68747470733a2f2f63646e2e61723431342e636f6d2f6e67696e782d6c6976652d736572766963652e706e673f613d31 (1).png\" src=\"/upload/image/2020-04-09/5e8f1f2e245f2.png\" width=\"640\" height=\"388.5117493472585\"><br></p></blockquote><h1><a href=\"https://hub.docker.com/repository/docker/ar414/nginx-rtmp-ffmpeg\" target=\"_blank\">docker-nginx-rtmp-ffmpeg</a></h1><p>基于<a href=\"https://github.com/alfg/docker-nginx-rtmp\" target=\"_blank\">docker-nginx-rtmp</a>进行配置部署，这篇文章的意义是实现直播分流及直播画面水印.</p><ul><li>Nginx 1.16.1（从源代码编译的稳定版本）</li><li>nginx-rtmp-module 1.2.1（从源代码编译）</li><li>ffmpeg 4.2.1（从源代码编译）</li><li><p>已配置好的<a href=\"https://github.com/ar414-com/nginx-rtmp-ffmpeg-conf/blob/master/nginx.conf\" target=\"_blank\">nginx.conf</a></p><ul><li>只支持1920*1080（如需支持其他分辨率可参考<a href=\"https://github.com/alfg/docker-nginx-rtmp/blob/master/nginx.conf\" target=\"_blank\">nginx.conf</a>）</li><li><p>实现两路分流</p><ul><li>本机</li><li>直播云（例：阿里云、腾讯云、ucloud）</li></ul></li><li><p>实现直播水印效果</p><ul><li>水印图片存放位置（容器内）：/opt/images/logo.png</li></ul></li></ul></li></ul><h2>部署运行</h2><h3>服务器</h3><ul><li>安装docker(Centos7,其他系统请发挥你的搜索功能)</li></ul><pre><code>$ yum -y install docker #安装docker\r\n$ systemctl enable docker #配置开机启动\r\n$ systemctl start docker #启动docker服务</code></pre><ul><li>拉取docker镜像并运行</li></ul><pre><code>#如果速度慢可使用阿里云：docker pull registry.cn-shenzhen.aliyuncs.com/ar414/nginx-rtmp-ffmpeg:v1\r\n$ docker pull ar414/nginx-rtmp-ffmpeg\r\n$ docker run -it -d -p 1935:1935 -p 8080:80 --rm ar414/nginx-rtmp-ffmpeg</code></pre><ul><li>推流地址（Stream live content to）：</li></ul><pre><code>rtmp://<server ip=\"\">:1935/stream/$STREAM_NAME</server></code></pre><ul><li>SSL证书</li></ul><p>将证书复制到容器内，并在容器内修改nginx.conf配置文件，然后重新commit（操作容器内的文件都需要重新commit才会生效）</p><pre><code>#/etc/nginx/nginx.conf\r\nlisten 443 ssl;\r\nssl_certificate     /opt/certs/example.com.crt;\r\nssl_certificate_key /opt/certs/example.com.key;</code></pre><h3>OBS配置</h3><ul><li>Stream Type:&nbsp;<code>Custom Streaming Server</code></li><li>URL:&nbsp;<code>rtmp://:1935/stream</code></li><li>Stream Key：ar414</li></ul><p><img alt=\"68747470733a2f2f63646e2e61723431342e636f6d2f6f62732d636f6e6669672e706e67.png\" src=\"/upload/image/2020-04-09/5e8f1f41b62fb.png\" width=\"640\" height=\"504.68937875751504\"><br></p><h3>观看测试</h3><blockquote><p>HLS播放测试工具：<a href=\"http://player.alicdn.com/aliplayer/setting/setting.html\">http://player.alicdn.com/aliplayer/setting/setting.html</a>&nbsp;（如果配置了证书则使用https）</p></blockquote><ul><li>HLS播放地址<ul><li>有水印：<a href=\"http://:8080/hls/ar414_wm.m3u8\">http://:8080/hls/ar414_wm.m3u8</a></li></ul></li></ul><p><br></p><p><img alt=\"68747470733a2f2f63646e2e61723431342e636f6d2f61723431342d686c732d776d2e706e67.png\" src=\"/upload/image/2020-04-09/5e8f1f78b996a.png\" width=\"640\" height=\"380.9865470852018\"></p><p><span></span><span style=\"color: rgb(36, 41, 46); font-size: 16px;\">无水印：<a href=\"http://:8080/hls/ar414.m3u8\">http://:8080/hls/ar414.m3u8</a></span><span></span></p><p><img alt=\"68747470733a2f2f63646e2e61723431342e636f6d2f61723431342d686c732e706e67.png\" src=\"/upload/image/2020-04-09/5e8f209f6fdbb.png\" width=\"640\" height=\"380.15572858731923\"><br></p><p><br></p><blockquote><p>RTMP测试工具：<a href=\"https://daumpotplayer.com/download/\">PotPlayer</a></p></blockquote><ul><li>RTMP播放地址<ul><li>无水印：rtmp://:1935/stream/ar414</li></ul></li></ul><p><img alt=\"aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9RRnpSZHo5bGliRWJhaWFiY3ZqcUU0RXBlR0tZNEJxTW1UaWFIYWcyM3hGR25MdWRlVmpSNXFZS1RGUEhqZ2NNbU1LNTdFcWJ0UU5LY3NJZmxpYjFvM2RCa1EvNjQw.jpg\" src=\"/upload/image/2020-04-09/5e8f205e988aa.jpg\" width=\"640\" height=\"360.2962962962963\"><br></p><pre><code>* 有水印：需要分流到其他服务器上\r\n</code></pre><h2>配置文件简解（分流、水印及水印位置）</h2><blockquote><a href=\"https://github.com/ar414-com/nginx-rtmp-ffmpeg-conf/blob/master/nginx.conf\" target=\"_blank\">完整配置文件</a></blockquote><ul><li>RTMP配置</li></ul><pre><code>rtmp {\r\n    server {\r\n        listen 1935; #端口\r\n        chunk_size 4000;\r\n        #RTMP 直播流配置\r\n        application stream {\r\n            live on;\r\n            #添加水印及分流，这次方便测试直接分流到当前服务器hls\r\n            #实际生产一般都分流到直播云（腾讯云、阿里云、ucloud）\r\n            #只需把需要分流的地址替换即可\r\n            #有水印：rtmp://localhost:1935/hls/$name_wm\r\n            #无水印：rtmp://localhost:1935/hls/$name\r\n            exec ffmpeg -i rtmp://localhost:1935/stream/$name -i /opt/images/ar414.png\r\n              -filter_complex \"overlay=10:10,split=1[ar414]\"\r\n              -map \'[ar414]\' -map 0:a -s 1920x1080 -c:v libx264 -c:a aac -g 30 -r 30 -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost:1935/hls/$name_wm\r\n              -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 2500k -f flv -g 30 -r 30 -s 1920x1080 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name;\r\n        }\r\n\r\n        application hls {\r\n            live on;\r\n            hls on;\r\n            hls_fragment 5;\r\n            hls_path /opt/data/hls;\r\n        }\r\n    }\r\n}</code></pre><ul><li>如果需要推多个直播云则复制多个 exec ffmpeg即可 如下：</li></ul><pre><code>application stream {\r\n    live on;\r\n    #分流至本机hls           \r\n    exec ffmpeg -i rtmp://localhost:1935/stream/$name -i /opt/images/ar414.png\r\n      -filter_complex \"overlay=10:10,split=1[ar414]\"\r\n      -map \'[ar414]\' -map 0:a -s 1920x1080 -c:v libx264 -c:a aac -g 30 -r 30 -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost:1935/hls/$name_wm\r\n      -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 2500k -f flv -g 30 -r 30 -s 1920x1080 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name;\r\n    \r\n    #分流至腾讯云\r\n    exec ffmpeg -i rtmp://localhost:1935/stream/$name -i /opt/images/ar414.png\r\n      -filter_complex \"overlay=10:10,split=1[ar414]\"\r\n      -map \'[ar414]\' -map 0:a -s 1920x1080 -c:v libx264 -c:a aac -g 30 -r 30 -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://live-push.tencent.com/stream/$name_wm\r\n      -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 2500k -f flv -g 30 -r 30 -s 1920x1080 -preset superfast -profile:v baseline rtmp://live-push.tencent.com/stream/$name;\r\n\r\n    #分流至阿里云\r\n    exec ffmpeg -i rtmp://localhost:1935/stream/$name -i /opt/images/ar414.png\r\n      -filter_complex \"overlay=10:10,split=1[ar414]\"\r\n      -map \'[ar414]\' -map 0:a -s 1920x1080 -c:v libx264 -c:a aac -g 30 -r 30 -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://live-push.aliyun.com/stream/$name_wm\r\n      -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 2500k -f flv -g 30 -r 30 -s 1920x1080 -preset superfast -profile:v baseline rtmp://live-push.aliyun.com/stream/$name;\r\n}</code></pre><ul></ul><p><b>水印位置</b></p><p>水印图片位置	overlay 值</p><table><colgroup><col width=\"49.85422740524781%\"><col width=\"50.14577259475219%\"></colgroup><thead><tr><th>左上角<br></th><th>&nbsp;10:10<br></th></tr></thead><tbody><tr><td>右上角&nbsp;<br></td><td>main_w-overlay_w-10:10<br></td></tr><tr><td>左下角<br></td><td>&nbsp;10:main_h-overlay_h-10<br></td></tr><tr><td>右下角&nbsp;<br></td><td>main_w-overlay_w-10 : main_h-overlay_h-10<br></td></tr><tr><td><br></td><td></td></tr></tbody></table><p>overlay 参数</p><p>参数	说明</p><p>main_w	视频单帧图像宽度（当前配置文件 1920）</p><p>main_h	视频单帧图像高度（当前配置文件 1080）</p><p>overlay_w	水印图片的宽度</p><p>overlay_h	水印图片的高度</p><p><br></p><p>转载自&nbsp;<a href=\"https://github.com/ar414-com/nginx-rtmp-ffmpeg-conf\">https://github.com/ar414-com/nginx-rtmp-ffmpeg-conf</a></p><h3></h3>');
INSERT INTO `ape_document_article` VALUES (77, '<p>PHP里有个函数很有用。这是在最近的开发中才逐渐用到的。&nbsp;<br>int ignore_user_abort ( [bool setting] )&nbsp;<br>这个函数的作用是指示服务器端在远程客户端关闭连接后是否继续执行下面的脚本。<br><br>setting 参数是一个可选参数。如设置为True，则表示如果用户停止脚本运行，仍然不影响脚本的运行（即：脚本将持续执行）；如果设置为False，则表示当用户停止运行脚本程序时，脚本程序将停止运行。<br><br>下面这个例子，在用户关闭浏览器后，该脚本仍然后在服务器上继续执行：<br><br></p><pre><code><ol class=\"hljs-ln\" style=\"outline: 0px; padding: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; list-style: none; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; border-collapse: collapse; font-size: 16px; overflow: hidden; overflow-wrap: break-word;\"><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\"><span class=\"hljs-meta\" style=\"outline: 0px; color: rgb(97, 174, 238); overflow-wrap: break-word;\">&lt;?php</span></div></div></li><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\">ignore_user_abort();&nbsp;<span class=\"hljs-comment\" style=\"outline: 0px; color: rgb(92, 99, 112); font-style: italic; overflow-wrap: break-word;\">//&nbsp;后台运行</span></div></div></li><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\">set_time_limit(<span class=\"hljs-number\" style=\"outline: 0px; color: rgb(209, 154, 102); overflow-wrap: break-word;\">0</span>);&nbsp;<span class=\"hljs-comment\" style=\"outline: 0px; color: rgb(92, 99, 112); font-style: italic; overflow-wrap: break-word;\">//&nbsp;取消脚本运行时间的超时上限</span></div></div></li><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\"><span class=\"hljs-keyword\" style=\"outline: 0px; color: rgb(198, 120, 221); overflow-wrap: break-word;\">do</span>{</div></div></li><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\">sleep(<span class=\"hljs-number\" style=\"outline: 0px; color: rgb(209, 154, 102); overflow-wrap: break-word;\">60</span>);&nbsp;<span class=\"hljs-comment\" style=\"outline: 0px; color: rgb(92, 99, 112); font-style: italic; overflow-wrap: break-word;\">//&nbsp;休眠1分钟</span></div></div></li><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\">}<span class=\"hljs-keyword\" style=\"outline: 0px; color: rgb(198, 120, 221); overflow-wrap: break-word;\">while</span>(<span class=\"hljs-keyword\" style=\"outline: 0px; color: rgb(198, 120, 221); overflow-wrap: break-word;\">true</span>);</div></div></li><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\"><span class=\"hljs-meta\" style=\"outline: 0px; color: rgb(97, 174, 238); overflow-wrap: break-word;\">?&gt;</span></div></div></li></ol></code></pre><p><br>除非在服务器上关闭这个程序，否则这断代码将永远执行下去。<br><br>-------------------------------------------------------------------------<br><br></p><pre><code><ol class=\"hljs-ln\" style=\"outline: 0px; padding: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; list-style: none; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; border-collapse: collapse; font-size: 16px; overflow: hidden; overflow-wrap: break-word;\"><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\"><span class=\"hljs-meta\" style=\"outline: 0px; color: rgb(97, 174, 238); overflow-wrap: break-word;\">&lt;?php</span></div></div></li><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\">&nbsp;&nbsp;&nbsp;ignore_user_abort();&nbsp;<span class=\"hljs-comment\" style=\"outline: 0px; color: rgb(92, 99, 112); font-style: italic; overflow-wrap: break-word;\">//&nbsp;后台运行</span></div></div></li><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\">&nbsp;&nbsp;&nbsp;set_time_limit(<span class=\"hljs-number\" style=\"outline: 0px; color: rgb(209, 154, 102); overflow-wrap: break-word;\">0</span>);&nbsp;<span class=\"hljs-comment\" style=\"outline: 0px; color: rgb(92, 99, 112); font-style: italic; overflow-wrap: break-word;\">//&nbsp;取消脚本运行时间的超时上限</span></div></div></li><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\">&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"outline: 0px; color: rgb(198, 120, 221); overflow-wrap: break-word;\">echo</span>&nbsp;<span class=\"hljs-string\" style=\"outline: 0px; color: rgb(152, 195, 121); overflow-wrap: break-word;\">\'start.\'</span>;</div></div></li><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\">&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"outline: 0px; color: rgb(198, 120, 221); overflow-wrap: break-word;\">while</span>(!file_exists(<span class=\"hljs-string\" style=\"outline: 0px; color: rgb(152, 195, 121); overflow-wrap: break-word;\">\'close.txt\'</span>)){</div></div></li><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;$fp&nbsp;=&nbsp;fopen(<span class=\"hljs-string\" style=\"outline: 0px; color: rgb(152, 195, 121); overflow-wrap: break-word;\">\'test.txt\'</span>,<span class=\"hljs-string\" style=\"outline: 0px; color: rgb(152, 195, 121); overflow-wrap: break-word;\">\'a+\'</span>);</div></div></li><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;fwrite($fp,date(<span class=\"hljs-string\" style=\"outline: 0px; color: rgb(152, 195, 121); overflow-wrap: break-word;\">\"Y-m-d&nbsp;H:i:s\"</span>)&nbsp;.&nbsp;<span class=\"hljs-string\" style=\"outline: 0px; color: rgb(152, 195, 121); overflow-wrap: break-word;\">\"&nbsp;成功了！rn\"</span>);</div></div></li><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;fclose($fp);</div></div></li><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;sleep(<span class=\"hljs-number\" style=\"outline: 0px; color: rgb(209, 154, 102); overflow-wrap: break-word;\">10</span>);</div></div></li><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\">&nbsp;&nbsp;&nbsp;}</div></div></li><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\">&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"outline: 0px; color: rgb(198, 120, 221); overflow-wrap: break-word;\">echo</span>&nbsp;<span class=\"hljs-string\" style=\"outline: 0px; color: rgb(152, 195, 121); overflow-wrap: break-word;\">\'end.\'</span>;</div></div></li><li style=\"outline: 0px; padding: 0px; margin: 0px; list-style: none; overflow-wrap: break-word; height: 22px;\"><div class=\"hljs-ln-numbers\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px; width: 24px; border-right: 1px solid rgb(197, 197, 197);\"></div><div class=\"hljs-ln-code\" style=\"outline: 0px; padding: 0px; margin: 0px 0px 0px 8px; overflow-wrap: break-word; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; float: left; height: 22px;\"><div class=\"hljs-ln-line\" style=\"outline: 0px; padding: 0px; margin: 0px; overflow-wrap: break-word;\"><span class=\"hljs-meta\" style=\"outline: 0px; color: rgb(97, 174, 238); overflow-wrap: break-word;\">?&gt;</span></div></div></li></ol></code></pre><p><a href=\"http://www.thinksaas.cn/topics/0/3/3910.html\">http://www.thinksaas.cn/topics/0/3/3910.html</a></p>');
INSERT INTO `ape_document_article` VALUES (78, '<p><b>介绍</b></p><p>前文已经说了explain命令的大部分参数，图解：实战EXPLAIN这篇文章把explain的key_len参数分享完，接着分享最左前缀原则，建立如下的表，其中name列和address列都建立了索引</p><pre><code class=\"lang-sql\">CREATE TABLE `teacher` (\r\n&nbsp; `id` int(10) NOT NULL,\r\n&nbsp; `name` char(20) NOT NULL,\r\n&nbsp; `address` varchar(100) DEFAULT NULL,\r\n&nbsp; PRIMARY KEY (`id`),\r\n&nbsp; KEY `idx_name` (`name`),\r\n&nbsp; KEY `idx_addr` (`address`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;</code></pre><p>执行如下命令</p><pre><code class=\"lang-sql\">explain select * from teacher where name = \"张三\"<br></code></pre><p><img alt=\"20181104221050891.png\" src=\"/upload/image/2020-04-14/5e951864a4a0a.png\" width=\"640\" height=\"64.67191601049869\"><br></p><p>explain select * from teacher where address = \"北京\"</p><p><img alt=\"20181104221215891.png\" src=\"/upload/image/2020-04-14/5e95187635518.png\" width=\"640\" height=\"64.33420365535248\"><br></p><p>问题来了，这些key_len是怎么算出来的呢？</p><p>key_len</p><p>key_len表示索引使用的字节数，根据这个值，就可以判断索引使用情况，特别是在组合索引的时候，判断所有的索引字段是否都被查询用到</p><p>字符串类型</p><p><img alt=\"20181104205738871.png\" src=\"/upload/image/2020-04-14/5e95189797aff.png\" width=\"605\" height=\"437\"><br><br></p><p>char和varchar跟字符编码也有密切的联系</p><p>latin1占用一个字节，gbk占用2个字节，utf8占用3个字节，utf8mb4占用4个字节（不同字符编码占用的存储空间不同）</p><p><b>字符类型-索引字段为char类型+不可为Null时</b></p><p>char(n)=n*(utf8mb4=4,utf8=3,gbk=2,latin1=1)</p><p>所以上面第一个列子（查询name=张三）的key_len为20*3=60</p><p>下文中为了描述方便，编码类型默认为utf8</p><p><b>字符类型-索引字段为char类型+允许为Null时</b></p><p>char(n)=n*3+1（允许null，是否为空的标记）</p><p><b>字符类型-索引字段为varchar类型+不可为Null时</b></p><p>varchar(n)=n*3+2（变长列，记录当前数据存了多少）</p><p><b>字符类型-索引字段为varchar类型+允许为Null时</b></p><p>varchar(n)=n*3+1（允许null）+2（变长列）</p><p>所以上面第二个例子（查询住址=北京）的key_len为100*3+1+2=303</p><p><img alt=\"20181104205754996.png\" src=\"/upload/image/2020-04-14/5e9518ebc95ce.png\" width=\"640\" height=\"451.67464114832535\"><br></p><p><img alt=\"20181104205738871.png\" src=\"/upload/image/2020-04-14/5e951902b1d54.png\" width=\"605\" height=\"437\"><br></p><p>datetime类型在5.6中字段长度是5个字节，datetime类型在5.5中字段长度是8个字节</p><p><b>整数/浮点数/时间类型的索引长度</b></p><p>Not Null=字段本身的长度</p><p>Null=字段本身的长度+1</p><p><b>最左前缀原则</b></p><p><b>查询</b></p><p>主要针对组合索引，满足如下2个条件即可满足左前缀原则</p><ol><li>需要查询的列和组合索引的列顺序一致</li><li>查询不要跨列</li></ol><p>构造数据如下，其中在name，address，country上建了联合索引</p><pre><code class=\"lang-sql\">CREATE TABLE `people` (\r\n&nbsp; `name` varchar(50) NOT NULL,\r\n&nbsp; `address` varchar(50) NOT NULL,\r\n&nbsp; `country` varchar(50) NOT NULL,\r\n&nbsp; KEY `idx_name_addr_country` (`name`,`address`,`country`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;</code></pre><p>先简单举个例子，然后总结一下</p><pre><code class=\"lang-sql\">explain select * from people where name = \"jack\" and address = \"beijing\" and country = \"china\"</code></pre><p><img alt=\"20181107135429885.png\" src=\"https://www.apecloud.cn/Public/Uploads/2020-04-14/5e9534aa43314.png\" width=\"640\" height=\"50.577507598784194\"><br></p><p>type为ref，key_len为456=（50*3+2）*3，联合索引的所有列都使用了</p><pre><code>explain select * from people where name = \"jack\"</code></pre><p><img alt=\"20181107135231501.png\" src=\"/upload/image/2020-04-14/5e95349d49499.png\" width=\"640\" height=\"53.21814254859611\"><br></p><p>type为ref，key_len为152=50*3+2，联合索引只使用了name列</p><pre><code>explain select * from people where address = \"beijing\"</code></pre><p><img alt=\"2018110713584572.png\" src=\"https://www.apecloud.cn/Public/Uploads/2020-04-14/5e95348d999dd.png\" width=\"640\" height=\"50.276008492569005\"><br></p><p>type为index，并没有走索引，简单说一下index和ref的区别</p><p><b>index</b>：这种类型表示mysql会对整个该索引进行扫描。要想用到这种类型的索引，对这个索引并无特别要求，只要是索引，或者某个联合索引的一部分，mysql都可能会采用index类型的方式扫描。但是呢，缺点是效率不高，mysql会从索引中的第一个数据一个个的查找到最后一个数据，直到找到符合判断条件的某个索引。所以，上述语句会触发索引</p><p><b>ref</b>：这种类型表示mysql会根据特定的算法快速查找到某个符合条件的索引，而不是会对索引中每一个数据都进行一一的扫描判断，也就是所谓你平常理解的使用索引查询会更快的取出数据。而要想实现这种查找，索引却是有要求的，要实现这种能快速查找的算法，索引就要特定的数据结构。简单说，也就是索引字段的数据必须是有序的，才能实现这种类型的查找，才能利用到索引。</p><p>总结几个典型的例子，联合索引为</p><p>key idx_a_b_c(a,b,c)</p><p>sql	是否使用索引</p><pre><code class=\"lang-sql\">where a = x and b = x and c = x	是\r\nwhere a = x and b = x	是，部分索引\r\nwhere a = x	是，部分索引\r\nwhere b = x	否，不包含最左列name\r\nwhere b = x and c = x	否，不包含最左列name</code></pre><p><b>排序</b></p><p>最左前缀原则不仅用在查询中，还能用在排序中。MySQL中，有两种方式生成有序结果集：</p><p>通过有序索引顺序扫描直接返回有序数据</p><p>Filesort排序，对返回的数据进行排序</p><p>因为索引的结构是B+树，索引中的数据是按照一定顺序进行排列的，所以在排序查询中如果能利用索引，就能避免额外的排序操作。EXPLAIN分析查询时，Extra显示为Using index。</p><p>所有不是通过索引直接返回排序结果的操作都是Filesort排序，也就是说进行了额外的排序操作。EXPLAIN分析查询时，Extra显示为Using filesort，当出现Using filesort时对性能损耗较大，所以要尽量避免Using filesort</p><p>还是先举2个例子，然后总结</p><pre><code>explain select * from people order by name</code></pre><p><img alt=\"2018110715593476.png\" src=\"/upload/image/2020-04-14/5e95359d5bc4f.png\" width=\"640\" height=\"61.68674698795181\"><br></p><p>Extra列只有Using index，即根据索引顺序进行扫描</p><pre><code>explain select * from people order by address</code></pre><p><img alt=\"20181107162452889.png\" src=\"/upload/image/2020-04-14/5e9535a9cec1d.png\" width=\"640\" height=\"55.2212389380531\"><br></p><p>Extra列有Using filesort</p><p>总结：假如说有如下联合索引，key idx_a_b_c(a,b,c)</p><p><b>order by 能使用索引排序</b></p><pre><code>order by a\r\norder by a,b\r\norder by a,b,c\r\norder by a desc, b desc, c desc\r\nwhere a = const order by b,c\r\nwhere a = const and b = const order by c\r\nwhere a = const and b &gt; const order by b,c</code></pre><p><b>order by 不能使用索引进行排序</b></p><pre><code>order by b\r\norder by c\r\norder by b, c\r\norder by a asc, b desc, c desc //排序不一致\r\nwhere g = const order by b,c //丢失a索引\r\nwhere a = const order by c //丢失b索引\r\nwhere a = const order by a,d //d不是索引的一部分\r\nwhere a in (...) order by b,c //范围查询</code></pre><p>有时间会单开一篇文章介绍order by优化，这里只做个粗浅的介绍</p><p><b>联合索引特性</b></p><p><b>增加开销</b>。建一个联合索引(col1,col2,col3)，实际相当于建了(col1),(col1,col2),(col1,col2,col3)三个索引。每多一个索引，都会增加写操作的开销和磁盘空间的开销。对于大量数据的表，使用联合索引会大大增加开销！</p><p><b>覆盖索引</b>。对联合索引(col1,col2,col3)，如果有如下的sql: select col1,col2,col3 from test where col1=1 and col2=2。那么MySQL可以直接通过遍历索引取得数据，而无需回表，这了很多的随机io操作。io操作，特别的随机io其实是dba主要的优化策略。所以，在真正的实际应用中，覆盖索引是主要的提升性能的优化手段之一。</p><p><b>效率高</b>。索引列越多，通过索引筛选出的数据越少。有1000W条数据的表，有如下sql:select from table where col1=1 and col2=2 and col3=3,假设假设每个条件可以筛选出10%的数据，如果只有单值索引，那么通过该索引能筛选出1000W10%=100w条数据，然后再回表从100w条数据中找到符合col2=2 and col3= 3的数据，然后再排序，再分页；如果是联合索引，通过索引筛选出1000w*10%*10% *10%=1w，效率提升可想而知！</p>');
INSERT INTO `ape_document_article` VALUES (79, '<h2>一、supervisor简介</h2><p>Supervisor是用Python开发的一套通用的进程管理程序，能将一个普通的命令行进程变为后台daemon，并监控进程状态，异常退出时能自动重启。它是通过fork/exec的方式把这些被管理的进程当作supervisor的子进程来启动，这样只要在supervisor的配置文件中，把要管理的进程的可执行文件的路径写进去即可。也实现当子进程挂掉的时候，父进程可以准确获取子进程挂掉的信息的，可以选择是否自己启动和报警。supervisor还提供了一个功能，可以为supervisord或者每个子进程，设置一个非root的user，这个user就可以管理它对应的进程。</p><p>注：本文以centos7为例。</p><h2>二、supervisor安装</h2><ol><li><p>配置好yum源后，可以直接安装</p><pre><code>yum install supervisor\r\n</code></pre><br></li><li><p>Debian/Ubuntu可通过apt安装</p><pre><code>apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install supervisor\r\n</code></pre><br></li><li><p>pip安装</p><pre><code>pip install supervisor\r\n</code></pre><br></li><li><p>easy_install安装</p><pre><code>easy_install supervisor\r\n</code></pre><br></li></ol><h2>三、supervisor使用</h2><h5>supervisor配置文件：<code>/etc/supervisor/supervisord.conf</code></h5><p>注：supervisor的配置文件默认是不全的，不过在大部分默认的情况下，上面说的基本功能已经满足。</p><h5>子进程配置文件路径：<code>/etc/supervisord.d/</code></h5><p>注：默认子进程配置文件为ini格式，可在supervisor主配置文件中修改。</p><h2>四、配置文件说明</h2><h4>supervisor.conf配置文件说明：</h4><p></p><pre><code><span class=\"token punctuation\">[</span>unix_http_server<span class=\"token punctuation\">]</span>\r\nfile<span class=\"token operator\">=</span><span class=\"token operator\">/</span>tmp<span class=\"token operator\">/</span>supervisor<span class=\"token punctuation\">.</span>sock   <span class=\"token punctuation\">;</span>UNIX socket 文件，supervisorctl 会使用\r\n<span class=\"token punctuation\">;</span>chmod<span class=\"token operator\">=</span><span class=\"token number\">0700</span>                 <span class=\"token punctuation\">;</span>socket文件的mode，默认是<span class=\"token number\">0700</span>\r\n<span class=\"token punctuation\">;</span>chown<span class=\"token operator\">=</span>nobody<span class=\"token operator\">:</span>nogroup       <span class=\"token punctuation\">;</span>socket文件的owner，格式：uid<span class=\"token operator\">:</span>gid\r\n \r\n<span class=\"token punctuation\">;</span><span class=\"token punctuation\">[</span>inet_http_server<span class=\"token punctuation\">]</span>         <span class=\"token punctuation\">;</span>HTTP服务器，提供web管理界面\r\n<span class=\"token punctuation\">;</span>port<span class=\"token operator\">=</span><span class=\"token number\">127.0</span><span class=\"token punctuation\">.</span><span class=\"token number\">0.1</span><span class=\"token operator\">:</span><span class=\"token number\">9001</span>        <span class=\"token punctuation\">;</span>Web管理后台运行的IP和端口，如果开放到公网，需要注意安全性\r\n<span class=\"token punctuation\">;</span>username<span class=\"token operator\">=</span>user              <span class=\"token punctuation\">;</span>登录管理后台的用户名\r\n<span class=\"token punctuation\">;</span>password<span class=\"token operator\">=</span><span class=\"token number\">123</span>               <span class=\"token punctuation\">;</span>登录管理后台的密码\r\n \r\n<span class=\"token punctuation\">[</span>supervisord<span class=\"token punctuation\">]</span>\r\nlogfile<span class=\"token operator\">=</span><span class=\"token operator\">/</span>tmp<span class=\"token operator\">/</span>supervisord<span class=\"token punctuation\">.</span>log <span class=\"token punctuation\">;</span>日志文件，默认是 $CWD<span class=\"token operator\">/</span>supervisord<span class=\"token punctuation\">.</span>log\r\nlogfile_maxbytes<span class=\"token operator\">=</span><span class=\"token number\">50</span>MB        <span class=\"token punctuation\">;</span>日志文件大小，超出会rotate，默认 <span class=\"token number\">50</span>MB，如果设成<span class=\"token number\">0</span>，表示不限制大小\r\nlogfile_backups<span class=\"token operator\">=</span><span class=\"token number\">10</span>           <span class=\"token punctuation\">;</span>日志文件保留备份数量默认<span class=\"token number\">10</span>，设为<span class=\"token number\">0</span>表示不备份\r\nloglevel<span class=\"token operator\">=</span>info                <span class=\"token punctuation\">;</span>日志级别，默认info，其它<span class=\"token operator\">:</span> debug<span class=\"token punctuation\">,</span>warn<span class=\"token punctuation\">,</span>trace\r\npidfile<span class=\"token operator\">=</span><span class=\"token operator\">/</span>tmp<span class=\"token operator\">/</span>supervisord<span class=\"token punctuation\">.</span>pid <span class=\"token punctuation\">;</span>pid 文件\r\nnodaemon<span class=\"token operator\">=</span><span class=\"token boolean\">false</span>               <span class=\"token punctuation\">;</span>是否在前台启动，默认是<span class=\"token boolean\">false</span>，即以 daemon 的方式启动\r\nminfds<span class=\"token operator\">=</span><span class=\"token number\">1024</span>                  <span class=\"token punctuation\">;</span>可以打开的文件描述符的最小值，默认 <span class=\"token number\">1024</span>\r\nminprocs<span class=\"token operator\">=</span><span class=\"token number\">200</span>                 <span class=\"token punctuation\">;</span>可以打开的进程数的最小值，默认 <span class=\"token number\">200</span>\r\n \r\n<span class=\"token punctuation\">[</span>supervisorctl<span class=\"token punctuation\">]</span>\r\nserverurl<span class=\"token operator\">=</span>unix<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token comment\">//tmp/supervisor.sock ;通过UNIX socket连接supervisord，路径与unix_http_server部分的file一致</span>\r\n<span class=\"token punctuation\">;</span>serverurl<span class=\"token operator\">=</span>http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">127.0</span><span class=\"token punctuation\">.</span><span class=\"token number\">0.1</span><span class=\"token operator\">:</span><span class=\"token number\">9001</span> <span class=\"token punctuation\">;</span> 通过HTTP的方式连接supervisord\r\n \r\n<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">[</span>program<span class=\"token operator\">:</span>xx<span class=\"token punctuation\">]</span>是被管理的进程配置参数，xx是进程的名称\r\n<span class=\"token punctuation\">[</span>program<span class=\"token operator\">:</span>xx<span class=\"token punctuation\">]</span>\r\ncommand<span class=\"token operator\">=</span><span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>apache<span class=\"token operator\">-</span>tomcat<span class=\"token operator\">-</span><span class=\"token number\">8.0</span><span class=\"token punctuation\">.</span><span class=\"token number\">35</span><span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>catalina<span class=\"token punctuation\">.</span>sh run  <span class=\"token punctuation\">;</span> 程序启动命令\r\nautostart<span class=\"token operator\">=</span><span class=\"token boolean\">true</span>       <span class=\"token punctuation\">;</span> 在supervisord启动的时候也自动启动\r\nstartsecs<span class=\"token operator\">=</span><span class=\"token number\">10</span>         <span class=\"token punctuation\">;</span> 启动<span class=\"token number\">10</span>秒后没有异常退出，就表示进程正常启动了，默认为<span class=\"token number\">1</span>秒\r\nautorestart<span class=\"token operator\">=</span><span class=\"token boolean\">true</span>     <span class=\"token punctuation\">;</span> 程序退出后自动重启<span class=\"token punctuation\">,</span>可选值：<span class=\"token punctuation\">[</span>unexpected<span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">]</span>，默认为unexpected，表示进程意外杀死后才重启\r\nstartretries<span class=\"token operator\">=</span><span class=\"token number\">3</span>       <span class=\"token punctuation\">;</span> 启动失败自动重试次数，默认是<span class=\"token number\">3</span>\r\nuser<span class=\"token operator\">=</span>tomcat          <span class=\"token punctuation\">;</span> 用哪个用户启动进程，默认是root\r\npriority<span class=\"token operator\">=</span><span class=\"token number\">999</span>         <span class=\"token punctuation\">;</span> 进程启动优先级，默认<span class=\"token number\">999</span>，值小的优先启动\r\nredirect_stderr<span class=\"token operator\">=</span><span class=\"token boolean\">true</span> <span class=\"token punctuation\">;</span> 把<span class=\"token constant\">stderr</span>重定向到<span class=\"token constant\">stdout</span>，默认<span class=\"token boolean\">false</span>\r\nstdout_logfile_maxbytes<span class=\"token operator\">=</span><span class=\"token number\">20</span>MB  <span class=\"token punctuation\">;</span> <span class=\"token constant\">stdout</span> 日志文件大小，默认<span class=\"token number\">50</span>MB\r\nstdout_logfile_backups <span class=\"token operator\">=</span> <span class=\"token number\">20</span>   <span class=\"token punctuation\">;</span> <span class=\"token constant\">stdout</span> 日志文件备份数，默认是<span class=\"token number\">10</span>\r\n<span class=\"token punctuation\">;</span> <span class=\"token constant\">stdout</span> 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）\r\nstdout_logfile<span class=\"token operator\">=</span><span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>apache<span class=\"token operator\">-</span>tomcat<span class=\"token operator\">-</span><span class=\"token number\">8.0</span><span class=\"token punctuation\">.</span><span class=\"token number\">35</span><span class=\"token operator\">/</span>logs<span class=\"token operator\">/</span>catalina<span class=\"token punctuation\">.</span>out\r\nstopasgroup<span class=\"token operator\">=</span><span class=\"token boolean\">false</span>     <span class=\"token punctuation\">;</span>默认为<span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>进程被杀死时，是否向这个进程组发送stop信号，包括子进程\r\nkillasgroup<span class=\"token operator\">=</span><span class=\"token boolean\">false</span>     <span class=\"token punctuation\">;</span>默认为<span class=\"token boolean\">false</span>，向进程组发送kill信号，包括子进程\r\n \r\n<span class=\"token punctuation\">;</span>包含其它配置文件\r\n<span class=\"token punctuation\">[</span>include<span class=\"token punctuation\">]</span>\r\nfiles <span class=\"token operator\">=</span> relative<span class=\"token operator\">/</span>directory<span class=\"token comment\">/*.ini    ;可以指定一个或多个以.ini结束的配置文件\r\n</span></code></pre><h4>子进程配置文件说明：</h4><p>给需要管理的子进程(程序)编写一个配置文件，放在<code>/etc/supervisor.d/</code>目录下，以<code>.ini</code>作为扩展名（每个进程的配置文件都可以单独分拆也可以把相关的脚本放一起）。如任意定义一个和脚本相关的项目名称的选项组（/etc/supervisord.d/test.conf）：</p><p></p><pre><code><span class=\"token comment\">#项目名</span>\r\n<span class=\"token punctuation\">[</span>program<span class=\"token symbol\">:blog</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token comment\">#脚本目录</span>\r\ndirectory<span class=\"token operator\">=</span><span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>bin\r\n<span class=\"token comment\">#脚本执行命令</span>\r\ncommand<span class=\"token operator\">=</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>test<span class=\"token punctuation\">.</span>py\r\n\r\n<span class=\"token comment\">#supervisor启动的时候是否随着同时启动，默认True</span>\r\nautostart<span class=\"token operator\">=</span><span class=\"token keyword\">true</span>\r\n<span class=\"token comment\">#当程序exit的时候，这个program不会自动重启,默认unexpected，设置子进程挂掉后自动重启的情况，有三个选项，false,unexpected和true。如果为false的时候，无论什么情况下，都不会被重新启动，如果为unexpected，只有当进程的退出码不在下面的exitcodes里面定义的</span>\r\nautorestart<span class=\"token operator\">=</span><span class=\"token keyword\">false</span>\r\n<span class=\"token comment\">#这个选项是子进程启动多少秒之后，此时状态如果是running，则我们认为启动成功了。默认值为1</span>\r\nstartsecs<span class=\"token operator\">=</span><span class=\"token number\">1</span>\r\n\r\n<span class=\"token comment\">#脚本运行的用户身份 </span>\r\nuser <span class=\"token operator\">=</span> test\r\n\r\n<span class=\"token comment\">#日志输出 </span>\r\nstderr_logfile<span class=\"token operator\">=</span><span class=\"token operator\">/</span>tmp<span class=\"token operator\">/</span>blog_stderr<span class=\"token punctuation\">.</span>log \r\nstdout_logfile<span class=\"token operator\">=</span><span class=\"token operator\">/</span>tmp<span class=\"token operator\">/</span>blog_stdout<span class=\"token punctuation\">.</span>log \r\n<span class=\"token comment\">#把stderr重定向到stdout，默认 false</span>\r\nredirect_stderr <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span>\r\n<span class=\"token comment\">#stdout日志文件大小，默认 50MB</span>\r\nstdout_logfile_maxbytes <span class=\"token operator\">=</span> <span class=\"token number\">20</span>M\r\n<span class=\"token comment\">#stdout日志文件备份数</span>\r\nstdout_logfile_backups <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\r\n</code></pre><h5>子进程配置示例：</h5><p></p><pre><code>#说明同上\r\n[program:test] \r\ndirectory=/opt/bin \r\ncommand=/opt/bin/test\r\nautostart=true \r\nautorestart=false \r\nstderr_logfile=/tmp/test_stderr.log \r\nstdout_logfile=/tmp/test_stdout.log \r\n#user = test  \r\n</code></pre><h2>五、supervisor命令说明</h2><h5>常用命令</h5><p></p><pre><code>supervisorctl status        <span class=\"token comment\">//查看所有进程的状态</span>\r\nsupervisorctl stop es       <span class=\"token comment\">//停止es</span>\r\nsupervisorctl start es      <span class=\"token comment\">//启动es</span>\r\nsupervisorctl restart       <span class=\"token comment\">//重启es</span>\r\nsupervisorctl update        <span class=\"token comment\">//配置文件修改后使用该命令加载新的配置</span>\r\nsupervisorctl reload        <span class=\"token comment\">//重新启动配置中的所有程序</span>\r\n</code></pre><p>注：把<code>es</code>换成<code>all</code>可以管理配置中的所有进程。直接输入<code>supervisorctl</code>进入supervisorctl的shell交互界面，此时上面的命令不带supervisorctl可直接使用。</p><h5>注意事项</h5><p>使用supervisor进程管理命令之前先启动supervisord，否则程序报错。<br>使用命令<code>supervisord -c /etc/supervisor/supervisord.conf</code>启动。<br>若是centos7：</p><p></p><pre><code>systemctl start supervisord<span class=\"token punctuation\">.</span>service     <span class=\"token comment\">//启动supervisor并加载默认配置文件</span>\r\nsystemctl enable supervisord<span class=\"token punctuation\">.</span>service    <span class=\"token comment\">//将supervisor加入开机启动项</span>\r\n</code></pre><h5>常见问题</h5><ol><li><p>unix:///var/run/supervisor.sock no such file<br>问题描述：安装好supervisor没有开启服务直接使用supervisorctl报的错<br>解决办法：<code>supervisord -c /etc/supervisor/supervisord.conf</code></p></li><li><p>command中指定的进程已经起来，但supervisor还不断重启<br>问题描述：command中启动方式为后台启动，导致识别不到pid，然后不断重启，这里使用的是elasticsearch，command指定的是<code>$path/bin/elasticsearch -d</code>                    <br>解决办法：supervisor无法检测后台启动进程的pid，而supervisor本身就是后台启动守护进程，因此不用担心这个</p></li><li><p>启动了多个supervisord服务，导致无法正常关闭服务<br>问题描述：在运行<code>supervisord -c /etc/supervisor/supervisord.conf</code>之前，直接运行过<code>supervisord -c /etc/supervisord.d/xx.conf</code>导致有些进程被多个superviord管理，无法正常关闭进程。<br>解决办法：使用<code>ps -fe | grep supervisord</code>查看所有启动过的supervisord服务，kill相关的进程。</p></li></ol><h5>更多信息请移步Supervisor官网：<a href=\"https://links.jianshu.com/go?to=http%3A%2F%2Fsupervisord.org\" target=\"_blank\">http://supervisord.org</a></h5><p><br></p><p>转载自简书</p><p>作者：风吹我已散博客</p><p>链接：<a href=\"https://www.jianshu.com/p/0b9054b33db3\" rel=\"nofollow\">https://www.jianshu.com/p/0b9054b33db3</a></p>');
INSERT INTO `ape_document_article` VALUES (80, '<p>因为mysql5.7默认配置配置问题提示</p><pre><code>E\r\nRROR&nbsp;1292&nbsp;(22007):&nbsp;Incorrect datetime value:&nbsp;\'1970-01-01 08:00:00\'&nbsp;for&nbsp;column&nbsp;\'time\'&nbsp;at&nbsp;row&nbsp;1<br></code></pre><pre><code> SQLSTATE[42000]: Syntax error or access violation: 1067 Invalid default val\r\n  ue for \'license_validity\'<br></code></pre><p>解决办法</p><p>临时修改sql_model</p><pre><code><span style=\"color:#000080;background-color:#f7faff;font-weight:bold;\">public function </span><span style=\"background-color:#f7faff;\">change()<br></span><span style=\"background-color:#f7faff;\">{<br></span><span style=\"background-color:#f7faff;\">    </span><span style=\"color:#660000;background-color:#f7faff;\">$this</span><span style=\"background-color:#f7faff;\">-&gt;execute(</span><span style=\"color:#008000;background-color:#f7faff;font-weight:bold;\">\' set session sql_mode=</span><span style=\"color:#000080;background-color:#f7faff;font-weight:bold;\">\\\'</span><span style=\"color:#008000;background-color:#f7faff;font-weight:bold;\">ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><span style=\"color:#000080;background-color:#f7faff;font-weight:bold;\">\\\'</span><span style=\"color:#008000;background-color:#f7faff;font-weight:bold;\">;\'</span><span style=\"background-color:#f7faff;\">);</span><span style=\"background-color:#f7faff;\"><br></span><span style=\"background-color:#f7faff;\">}</span></code></pre>');
INSERT INTO `ape_document_article` VALUES (81, '<pre><code>  <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//--------------------------------------------------------------------------------------</span>\r\n  <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">/**\r\n    * 函数的含义说明：CURL发送post请求    获取数据\r\n    * \r\n    * @access public \r\n    * @param str          $url     发送接口地址\r\n    * @param array/json   $data    要发送的数据  \r\n    * @param false/true   $json    false $data数组格式  true $data json格式\r\n    * @return  返回json数据\r\n     */</span>   \r\n    <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">public</span> <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">function</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">httpPostRequest</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$url</span><span class=\"token punctuation\">,</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$data</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">null</span><span class=\"token punctuation\">,</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$json</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token boolean constant\" style=\"color: rgb(248, 197, 85);\">FALSE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//创建了一个curl会话资源，成功返回一个句柄；</span>\r\n        <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//设置url</span>\r\n        <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_URL</span><span class=\"token punctuation\">,</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//设置为FALSE 禁止 cURL 验证对等证书（peer’s certificate）</span>\r\n        <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_SSL_VERIFYPEER</span><span class=\"token punctuation\">,</span> <span class=\"token boolean constant\" style=\"color: rgb(248, 197, 85);\">FALSE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//设置为 1 是检查服务器SSL证书中是否存在一个公用名(common name)</span>\r\n        <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_SSL_VERIFYHOST</span><span class=\"token punctuation\">,</span> <span class=\"token boolean constant\" style=\"color: rgb(248, 197, 85);\">FALSE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">!</span><span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//设置请求为POST</span>\r\n            <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_POST</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 60); //最长的可忍受的连接时间</span>\r\n            <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//设置POST的数据域</span>\r\n            <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_POSTFIELDS</span><span class=\"token punctuation\">,</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$json</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n                <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_HEADER</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_HTTPHEADER</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">array</span><span class=\"token punctuation\">(</span>\r\n                        <span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'Content-Type: application/json; charset=utf-8\'</span><span class=\"token punctuation\">,</span>\r\n                        <span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'Content-Length: \'</span> <span class=\"token punctuation\">.</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$data</span><span class=\"token punctuation\">)</span>\r\n                    <span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//设置是否将响应结果存入变量，1是存入，0是直接输出</span>\r\n        <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_RETURNTRANSFER</span><span class=\"token punctuation\">,</span> <span class=\"token boolean constant\" style=\"color: rgb(248, 197, 85);\">TRUE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//然后将响应结果存入变量</span>\r\n        <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$output</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//关闭这个curl会话资源</span>\r\n        <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">return</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$output</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//--------------------------------------------------------------------------------------</span>\r\n  <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">/**  \r\n    * 函数的含义说明：CURL发送get请求    获取数据\r\n    * \r\n    * @access public \r\n    * @param str $url 发送接口地址  https://api.douban.com/v2/movie/in_theaters?city=广州&amp;start=0&amp;count=10\r\n    * @return  返回json数据\r\n     */</span> \r\n     <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">public</span> <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">function</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">httpGetRequest</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\r\n        <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 启动一个CURL会话</span>\r\n        <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_URL</span><span class=\"token punctuation\">,</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_HEADER</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_RETURNTRANSFER</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_SSL_VERIFYPEER</span><span class=\"token punctuation\">,</span> <span class=\"token boolean constant\" style=\"color: rgb(248, 197, 85);\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 跳过证书检查</span>\r\n        <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, true);  // 从证书中检查SSL加密算法是否存在</span>\r\n        <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$output</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//返回api的json对象</span>\r\n        <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//关闭URL请求</span>\r\n        <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curl</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">return</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$output</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//返回json对象</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n\r\n<span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//--------------------------------------------------------------------------------------</span>\r\n<span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">/**  \r\n  * 函数的含义说明:模仿登录带cookie值抓取页面\r\n  * @access public \r\n  * @param  string   \r\n  * @return string   \r\n  */</span>\r\n<span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$data</span><span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span><span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">array</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'username\'</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span><span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">&gt;</span> <span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'promonkey\'</span><span class=\"token punctuation\">,</span> \r\n    <span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'password\'</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span><span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">&gt;</span> <span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'1q2w3e\'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'remember\'</span><span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span><span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">&gt;</span><span class=\"token number\" style=\"color: rgb(240, 141, 73);\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$data</span><span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span><span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'username=zjzhoufy@126.com&amp;password=1q2w3e&amp;remember=1\'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 初始化</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_URL</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"http://www.imooc.com/user/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 设置访问网页的URL</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_RETURNTRANSFER</span><span class=\"token punctuation\">,</span> <span class=\"token boolean constant\" style=\"color: rgb(248, 197, 85);\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 执行之后不直接打印出来</span>\r\n\r\n<span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// Cookie相关设置，这部分设置需要在所有会话开始之前设置</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">date_default_timezone_set</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'PRC\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 使用Cookie时，必须先设置时区</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_COOKIESESSION</span><span class=\"token punctuation\">,</span> <span class=\"token boolean constant\" style=\"color: rgb(248, 197, 85);\">TRUE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_HEADER</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_FOLLOWLOCATION</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 这样能够让cURL支持页面链接跳转</span>\r\n\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_POST</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_POSTFIELDS</span><span class=\"token punctuation\">,</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_HTTPHEADER</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">array</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"application/x-www-form-urlencoded; charset=utf-8\"</span><span class=\"token punctuation\">,</span> \r\n    <span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"Content-length: \"</span><span class=\"token punctuation\">.</span><span class=\"token function\" style=\"color: rgb(240, 141, 73);\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$data</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 执行</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_URL</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"http://www.imooc.com/space/index\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_POST</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_HTTPHEADER</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">array</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"Content-type: text/xml\"</span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$output</span><span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span><span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 执行</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 关闭cURL</span>\r\n<span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">echo</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$output</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//--------------------------------------------------------------------------------------</span>\r\n<span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">/**  \r\n  * 函数的含义说明:模仿登录获取cookie值抓取页面\r\n  * @access public \r\n  * @param  string   \r\n  * @return string   \r\n  */</span>\r\n<span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$data</span><span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span><span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'username=demo_peter@126.com&amp;password=123qwe&amp;remember=1\'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 初始化</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_URL</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"http://www.imooc.com/user/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 设置访问网页的URL</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_RETURNTRANSFER</span><span class=\"token punctuation\">,</span> <span class=\"token boolean constant\" style=\"color: rgb(248, 197, 85);\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 执行之后不直接打印出来</span>\r\n\r\n<span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// Cookie相关设置，这部分设置需要在所有会话开始之前设置</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">date_default_timezone_set</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'PRC\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 使用Cookie时，必须先设置时区</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_COOKIESESSION</span><span class=\"token punctuation\">,</span> <span class=\"token boolean constant\" style=\"color: rgb(248, 197, 85);\">TRUE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_HEADER</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 注释掉这行，因为这个设置必须关闭安全模式 以及关闭open_basedir，对服务器安全不利</span>\r\n<span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//curl_setopt($curlobj, CURLOPT_FOLLOWLOCATION, 1);  </span>\r\n\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_POST</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_POSTFIELDS</span><span class=\"token punctuation\">,</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_HTTPHEADER</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">array</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"application/x-www-form-urlencoded; charset=utf-8\"</span><span class=\"token punctuation\">,</span> \r\n    <span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"Content-length: \"</span><span class=\"token punctuation\">.</span><span class=\"token function\" style=\"color: rgb(240, 141, 73);\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$data</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 执行</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_URL</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"http://www.imooc.com/space/index\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_POST</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_HTTPHEADER</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">array</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"Content-type: text/xml\"</span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$output</span><span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span><span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_redir_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 执行</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// 关闭cURL</span>\r\n<span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">echo</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$output</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//------------------------------------------------------------------------------------</span>\r\n        <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURL</span>登录携带cookie获取首页数据配置\r\n    <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">date_default_timezone_set</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'PRC\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//使用cookie，必须先设置时区</span>\r\n    <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span><span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_COOKIESESSION</span><span class=\"token punctuation\">,</span><span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">RURE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span><span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_COOKIEFILE</span><span class=\"token punctuation\">,</span><span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"cookiefile\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span><span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_COOKIEJAR</span><span class=\"token punctuation\">,</span><span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"cookiefile\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span><span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_COOKIE</span><span class=\"token punctuation\">,</span><span class=\"token function\" style=\"color: rgb(240, 141, 73);\">session_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'=\'</span><span class=\"token punctuation\">.</span><span class=\"token function\" style=\"color: rgb(240, 141, 73);\">session_id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span><span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_HEADER</span><span class=\"token punctuation\">,</span><span class=\"token number\" style=\"color: rgb(240, 141, 73);\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span><span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_FOLLOWLOCATION</span><span class=\"token punctuation\">,</span><span class=\"token number\" style=\"color: rgb(240, 141, 73);\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//让CURL支持页面跳转</span>\r\n\r\n<span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//------------------------------------------------------------------------------------</span>\r\n<span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">/**\r\n * 实例描述：从FTP服务器下载一个文件到本地\r\n */</span>\r\n<span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_URL</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"ftp://192.168.1.100/downloaddemo.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_HEADER</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_RETURNTRANSFER</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_TIMEOUT</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// times out after 300s</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_USERPWD</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"peter.zhou:123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//FTP用户名：密码</span>\r\n<span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// Sets up the output file</span>\r\n<span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$outfile</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'dest.txt\'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'wb\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//保存到本地的文件名</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_FILE</span><span class=\"token punctuation\">,</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$outfile</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$rtn</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$outfile</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">!</span><span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_errno</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// $info = curl_getinfo($curlobj); </span>\r\n    <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// print_r($info);</span>\r\n    <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">echo</span> <span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"RETURN: \"</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$rtn</span><span class=\"token punctuation\">;</span>  \r\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">else</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">echo</span> <span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'Curl error: \'</span> <span class=\"token punctuation\">.</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_error</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//------------------------------------------------------------------------------------</span>\r\n<span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">/**\r\n * 代码实例-PHP-cURL实战\r\n * 实例描述：把本地文件上传到FTP服务器上\r\n */</span>\r\n<span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$localfile</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'ftp01.php\'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$fp</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$localfile</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'r\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_URL</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"ftp://192.168.1.100/ftp01_uploaded.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_HEADER</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_RETURNTRANSFER</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_TIMEOUT</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">// times out after 300s</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_USERPWD</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"peter.zhou:123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//FTP用户名：密码</span>\r\n\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_UPLOAD</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_INFILE</span><span class=\"token punctuation\">,</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$fp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_INFILESIZE</span><span class=\"token punctuation\">,</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">filesize</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$localfile</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$rtn</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$fp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">!</span><span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_errno</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">echo</span> <span class=\"token double-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\"Uploaded successfully.\"</span><span class=\"token punctuation\">;</span>  \r\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">else</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">echo</span> <span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'Curl error: \'</span> <span class=\"token punctuation\">.</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_error</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$curlobj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">//------------------------------------------------------------------------------------</span>\r\n<span class=\"token comment\" style=\"color: rgb(153, 153, 153);\">/**\r\n * 代码实例-PHP-CURL下载文件或者图片\r\n*$url:远程图片路径或文件路径\r\n*$path:本地下载路径\r\n */</span>\r\n<span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">public</span> <span class=\"token keyword\" style=\"color: rgb(204, 153, 205);\">function</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">download</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$url</span><span class=\"token punctuation\">,</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$path</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'images/\'</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{</span>\r\n        <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$ch</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_URL</span><span class=\"token punctuation\">,</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_RETURNTRANSFER</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">CURLOPT_CONNECTTIMEOUT</span><span class=\"token punctuation\">,</span> <span class=\"token number\" style=\"color: rgb(240, 141, 73);\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$file</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$ch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">curl_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$ch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$filename</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">pathinfo</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$url</span><span class=\"token punctuation\">,</span> <span class=\"token constant\" style=\"color: rgb(248, 197, 85);\">PATHINFO_BASENAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$resource</span> <span class=\"token operator\" style=\"color: rgb(103, 205, 204);\">=</span> <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$path</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$filename</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\" style=\"color: rgb(126, 198, 153);\">\'a\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">fwrite</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$resource</span><span class=\"token punctuation\">,</span> <span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\" style=\"color: rgb(240, 141, 73);\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\" style=\"color: rgb(126, 198, 153);\">$resource</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre>');
INSERT INTO `ape_document_article` VALUES (82, '<p style=\"margin-left: auto;\"><strong>1. 生成秘钥对</strong></p><p style=\"margin-left: auto;\">（1）确定自己是否有公钥</p><pre><code>$ cd ~/.<span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">ssh<br style=\"margin: 0px; padding: 0px;\"></span></code></pre><pre><code>$ ls</code></pre><p style=\"margin-left: auto;\">查看是否有id_rsa 、id_rsa.push（或者是id_das和id_das.pub一类成对的文件），</p><p style=\"margin-left: auto;\">其中有<strong>.pub后缀的文件就是公钥</strong>，<strong>另一个对应的就是私钥。</strong></p><p style=\"margin-left: auto;\">如果没有上述描述的文件，甚至连.ssh目录都没有，继续。</p><p style=\"margin-left: auto;\"><br></p><p style=\"margin-left: auto;\">（2）用ssh-keygen创建</p><pre><code>$ <span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">ssh-keygen</span> -t rsa -C <span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">邮箱地址</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span></code></pre><p style=\"margin-left: auto;\">按提示需要依次输入秘钥、密码、密码确认。不是自己服务器请输入密码保证安全，如果自己服务器这里建议全部回车否则之后每次push的时候都需要输入一次秘钥的密码，也是很痛苦的一件事情</p><p style=\"margin-left: auto;\">看到以下类似提示就代表本地秘钥已经生成。</p><pre><code>Your public key has been saved <span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">in</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 0); line-height: 1.5 !important;\"> ****\r\nThe key fingerprint is:\r\nSHA256:RAn</span>+oaeba2FZ+8aLlGSwS/U9ZYpPjB74ccYFqu9givw\"邮箱地址\"</code></pre><p style=\"margin-left: auto;\">&nbsp;</p><p style=\"margin-left: auto;\"><strong>2. 设置远程仓库上的公钥</strong></p><p style=\"margin-left: auto;\">（1）在终端上查看生成的公钥</p><pre><code>$ <span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">cat</span> ~/.<span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">ssh</span>/id_rsa.pub</code></pre><p style=\"margin-left: auto;\">得到类似下面的一串乱码，这个就是我们的秘钥了。</p><pre><code><span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;\">ssh</span>-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDIJhA59Wpo3SWJWvAyCARaHyjeB+W6bUNTQamUUlfljYtGrbgLEh3CXyPBUHqLZWiRlJcRKax3rKoeA3GpY6yrKGxtjyJW9WhAIurwVm1FatT5StHQiCJslKBnODbWDZL05MF/O399ZyovDBQ1HE2U779m/fZhOh8+GZKXdfn09Fq9g0f2fYA/bbAANAkFDHryBrfKz/tB2EY+kvMmVrqQFftbg1n19lzfzgQ3gkr4yTFTD5N94SxVhu/KpdHuK+2abLqlkeabIdrWObT+qlf/Xyi0nflkyf309XSL2Xqy4JhSGKR74+6bTyPNF5DKx5HVdxJ6M7Q6RmX5KnTG/Axn\"邮箱地址\"</code></pre><p style=\"margin-left: auto;\">（2）在网站上登录git账号，点击头像，选择setting，选择SSH秘钥，粘贴上面全部的乱码(以ssh-rsa开头)，点击添加秘钥。</p><p style=\"margin-left: auto;\">到这里基本完成了SSH秘钥的设置。尝试使用SSH方法克隆项目，如果依然不行尝试操作第三步操作。</p><p style=\"margin-left: auto;\"><br></p><p style=\"margin-left: auto;\"><strong>3. 修改git的<strong>remote url</strong></strong></p><p style=\"margin-left: auto;\">有些集成了git的开发环境中会自动修改的。</p><p style=\"margin-left: auto;\">（1）查看当前的remote url</p><pre><code>$ git remote -v</code></pre><p style=\"margin-left: auto;\">（2）修改remote url</p><p style=\"margin-left: auto;\">如果是https：打头的地址是https协议，git打头的则是git协议。注意这里必须ssh不能https</p><pre><code>$ git remote set-url origin <span style=\"margin: 0px; padding: 0px; background-color: rgb(192, 192, 192); line-height: 1.5 !important;\">对应的协议打头的clone地址</span></code></pre><p style=\"margin-left: auto;\">&nbsp;</p>');
INSERT INTO `ape_document_article` VALUES (83, '<p>样例</p><pre><code class=\"lang-php\">&lt;?php\r\n$array1&nbsp;=&nbsp;array();\r\n$array2&nbsp;=&nbsp;array(\"green\",&nbsp;\"red\",&nbsp;\"blue\",&nbsp;\"red\");\r\n$result&nbsp;=&nbsp;array_diff($array1,&nbsp;$array2);\r\nprint_r($result);\r\n?&gt;\r\n</code></pre><p><br></p><p>输出结果为空？？？ 黑人问号，一脸懵逼的去查阅手册发现问题，错误理解函数作用</p><p><b><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">array_diff 解释 ：对比&nbsp;</span><code class=\"parameter\">array1</code><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">&nbsp;和其他一个或者多个数组，返回在&nbsp;</span><code class=\"parameter\">array1</code></b><span style=\"color: rgb(51, 51, 51); font-size: 16px;\"><b>&nbsp;中但是不在其他 array 里的值。</b></span><br></p><p><span style=\"color: rgb(51, 51, 51); font-size: 16px;\"><b>并不是两个的差集 。。。</b></span></p>');
INSERT INTO `ape_document_article` VALUES (84, '<p>特殊需求 根绝token自动获取user_id 问题 特殊需求&nbsp; so 只能 这么处理，不能通过中间件 直接获取request-&gt;userInfo 这样获取</p><p>核心思想</p><p>判定action 是否需要验证&nbsp;</p><p>验证则转换 然后更新 response-&gt;poset值，注意由于使用的是response 门面方法&nbsp; 静态调用 so 需求 unset掉才能重新生效获取到 param的值</p>');
INSERT INTO `ape_document_article` VALUES (85, '<p>禁止鼠标右键和禁止F12</p><pre><code>$(<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(0, 0, 255);\">function</span>()</span>{\r\n    $(<span class=\"hljs-built_in\" style=\"color: rgb(0, 0, 255);\">document</span>).ready(<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(0, 0, 255);\">function</span>()</span>{\r\n        $(<span class=\"hljs-built_in\" style=\"color: rgb(0, 0, 255);\">document</span>).bind(<span class=\"hljs-string\" style=\"color: rgb(163, 21, 21);\">\"contextmenu\"</span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(0, 0, 255);\">function</span>(<span class=\"hljs-params\">e</span>)</span>{\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(0, 0, 255);\">return</span> <span class=\"hljs-literal\" style=\"color: rgb(163, 21, 21);\">false</span>;\r\n        });\r\n    });\r\n\r\n     $(<span class=\"hljs-built_in\" style=\"color: rgb(0, 0, 255);\">document</span>).keydown(<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(0, 0, 255);\">function</span>(<span class=\"hljs-params\">e</span>) </span>{\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(0, 0, 255);\">if</span> (e.keyCode == <span class=\"hljs-number\">123</span>) {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(0, 0, 255);\">return</span> <span class=\"hljs-literal\" style=\"color: rgb(163, 21, 21);\">false</span>;\r\n        }\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(0, 0, 255);\">if</span> ((e.ctrlKey) &amp;&amp; (e.keyCode == <span class=\"hljs-number\">83</span>)) { <span class=\"hljs-comment\" style=\"color: rgb(0, 128, 0);\">//ctrl+s</span>\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(0, 0, 255);\">return</span> <span class=\"hljs-literal\" style=\"color: rgb(163, 21, 21);\">false</span>;\r\n        }\r\n    });\r\n})</code></pre><p><br></p><p><br></p><p>转载自&nbsp;<span style=\"font-size: 1px;\"><a href=\"http://majiameng.com/article/2812.html\" rel=\"nofollow\">http://majiameng.com/article/2812.html</a></span></p>');
INSERT INTO `ape_document_article` VALUES (86, '<p style=\"margin-left: auto;\">&nbsp;很多不太懂正则的朋友，在遇到需要用正则校验数据时，往往是在网上去找很久，结果找来的还是不很符合要求。所以我最近把开发中常用的一些正则表达式整理了一下，在这里分享一下。给自己留个底，也给朋友们做个参考。</p><p style=\"margin-left: auto;\"><strong><span style=\"font-size: 14pt;\">一、校验数字的表达式</span></strong></p><pre><code><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 1</span> 数字：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[0-9]*$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 2</span> n位的数字：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^\\d{n}$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 3</span> 至少n位的数字：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^\\d{n,}$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 4</span> m-n位的数字：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^\\d{m,n}$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 5</span> 零和非零开头的数字：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^(0|[1-9][0-9]*)$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 6</span> 非零开头的最多带两位小数的数字：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^([1-9][0-9]*)+(.[0-9]{1,2})?$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 7</span> 带1-2位小数的正数或负数：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^(\\-)?\\d+(\\.\\d{1,2})?$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 8</span> 正数、负数、和小数：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^(\\-|\\+)?\\d+(\\.\\d+)?$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 9</span> 有两位小数的正实数：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[0-9]+(.[0-9]{2})?$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">10</span> 有1~3位小数的正实数：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[0-9]+(.[0-9]{1,3})?$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">11</span> 非零的正整数：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[1-9]\\d*$</span> 或 <span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^([1-9][0-9]*){1,3}$</span> 或 <span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^\\+?[1-9][0-9]*$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">12</span> 非零的负整数：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^\\-[1-9][]0-9\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\"><span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">*$</span> <span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 0); line-height: 1.5 !important;\">或</span> <span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^-[1-9]\\d*$</span></span>\r\n<span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">13</span> 非负整数：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^\\d+$</span> 或 <span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[1-9]\\d*|0$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">14</span> 非正整数：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^-[1-9]\\d*|0$</span> 或 <span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^((-\\d+)|(0+))$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">15</span> 非负浮点数：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^\\d+(\\.\\d+)?$</span> 或 <span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">16</span> 非正浮点数：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^((-\\d+(\\.\\d+)?)|(0+(\\.0+)?))$</span> 或 <span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^(-([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*))|0?\\.0+|0$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">17</span> 正浮点数：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*$</span> 或 <span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*))$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">18</span> 负浮点数：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^-([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*)$</span> 或 <span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">19</span> 浮点数：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^(-?\\d+)(\\.\\d+)?$</span> 或 <span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^-?([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0)$</span></code></pre><p style=\"margin-left: auto;\"><strong><span style=\"font-size: 14pt;\">二、校验字符的表达式</span></strong></p><pre><code><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 1</span> 汉字：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[\\u4e00-\\u9fa5]{0,}$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 2</span> 英文和数字：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[A-Za-z0-9]+$</span> 或 <span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[A-Za-z0-9]{4,40}$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 3</span> 长度为3-20的所有字符：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^.{3,20}$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 4</span> 由26个英文字母组成的字符串：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[A-Za-z]+$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 5</span> 由26个大写英文字母组成的字符串：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[A-Z]+$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 6</span> 由26个小写英文字母组成的字符串：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[a-z]+$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 7</span> 由数字和26个英文字母组成的字符串：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[A-Za-z0-9]+$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 8</span> 由数字、26个英文字母或者下划线组成的字符串：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^\\w+$ 或 ^\\w{3,20}$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 9</span> 中文、英文、数字包括下划线：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[\\u4E00-\\u9FA5A-Za-z0-9_]+$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">10</span> 中文、英文、数字但不包括下划线等符号：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[\\u4E00-\\u9FA5A-Za-z0-9]+$</span> 或 <span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[\\u4E00-\\u9FA5A-Za-z0-9]{2,20}$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">11</span> 可以输入含有<span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 0); line-height: 1.5 !important;\">^%&amp;\'</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\"><span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 0); line-height: 1.5 !important;\">,;=?$\\\"等字符：</span><span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">[^%&amp;</span></span><span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">\',;=?$\\x22]+\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">12</span> 禁止输入含有~的字符：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">[^~\\x22]+</span></code></pre><p style=\"margin-left: auto;\"><strong><span style=\"font-size: 14pt;\">三、特殊需求表达式</span></strong></p><pre><code><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 1</span> Email地址：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 2</span> 域名：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 3</span> InternetURL：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">[a-zA-z]+://</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 0); line-height: 1.5 !important;\"><span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">[^\\s]*</span> <span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 0); line-height: 1.5 !important;\">或</span> <span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^http:</span></span><span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">//([\\w-]+\\.)+[\\w-]+(/[\\w-./?%&amp;=]*)?$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 4</span> 手机号码：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^(13[0-9]|14[0-9]|15[0-9]|16[0-9]|17[0-9]|18[0-9]|19[0-9])\\d{8}$ <span style=\"margin: 0px; padding: 0px; color: rgb(136, 136, 136); line-height: 1.5 !important;\">(由于工信部放号段不定时，所以建议使用泛解析 <span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^([1][3,4,5,6,7,8,9])\\d{9}$</span>)</span><br style=\"margin: 0px; padding: 0px;\"></span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 5</span> 电话号码(<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">XXX-XXXXXXX</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span>、<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">XXXX-XXXXXXXX</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span>、<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">XXX-XXXXXXX</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span>、<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">XXX-XXXXXXXX</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span>、<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">XXXXXXX</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span>和<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">XXXXXXXX)：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^(\\(\\d{3,4}-)|\\d{3.4}-)?\\d{7,8}$ </span></span>\r\n<span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 6</span> 国内电话号码(<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">0511</span>-<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">4405222</span>、<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">021</span>-<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">87888822</span>)：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">\\d{3}-\\d{8}|\\d{4}-\\d{7}</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> <br style=\"margin: 0px; padding: 0px;\"> 7</span> 18位身份证号码(数字、字母x结尾)：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^((\\d{18})|([0-9x]{18})|([0-9X]{18}))$</span><span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\"><br style=\"margin: 0px; padding: 0px;\"></span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 8</span> 帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[a-zA-Z][a-zA-Z0-9_]{4,15}$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\"> 9</span> 密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[a-zA-Z]\\w{5,17}$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">10</span> 强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$  \r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">11</span> 日期格式：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^\\d{4}-\\d{1,2}-\\d{1,2}\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">12</span> 一年的12个月(<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">01</span>～09和1～<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">12</span>)：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^(0?[1-9]|1[0-2])$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">13</span> 一个月的31天(<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">01</span>～09和1～<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 128); line-height: 1.5 !important;\">31</span>)：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^((0?[1-9])|((1|2)[0-9])|30|31)$ \r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">14</span> <span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 0); line-height: 1.5 !important;\">钱的输入格式：\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">15</span>    1.有四种钱的表示形式我们可以接受:<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">10000.00</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span> 和 <span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">10,000.00</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span>, 和没有 <span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">分</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span> 的 <span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">10000</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span> 和 <span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">10,000</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span>：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[1-9][0-9]*$ \r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">16</span>    2.这表示任意一个不以0开头的数字,但是,这也意味着一个字符<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">0</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span>不通过,所以我们采用下面的形式：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^(0|[1-9][0-9]*)$ \r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">17</span>    3.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^(0|-?[1-9][0-9]*)$ \r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">18</span>    4.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[0-9]+(.[0-9]+)?$ \r\n</span>19    5.必须说明的是,小数点后面至少应该有1位数,所以<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">10.</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span>是不通过的,但是 <span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">10</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span> 和 <span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">10.2</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span> 是通过的：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[0-9]+(.[0-9]{2})?$ \r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">20</span>    6.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[0-9]+(.[0-9]{1,2})?$ \r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">21</span>    7.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$ \r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">22</span>    8.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$ \r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">23</span>    备注：这就是最终结果了,别忘了<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">+</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span>可以用<span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">*</span><span style=\"margin: 0px; padding: 0px; color: rgb(128, 0, 0); line-height: 1.5 !important;\">\"</span>替代如果你觉得空字符串也可以接受的话(奇怪,为什么?<span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 0); line-height: 1.5 !important;\">)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">24</span> xml文件：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\\\.[x|X][m|M][l|L]$\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">25</span> 中文字符的正则表达式：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">[\\u4e00-\\u9fa5]\r\n</span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">26</span> 双字节字符：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">[^\\x00-\\xff]    <span style=\"margin: 0px; padding: 0px; color: rgb(128, 128, 128); line-height: 1.5 !important;\">(包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))</span><br style=\"margin: 0px; padding: 0px;\"></span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">27</span> 空白行的正则表达式：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">\\n\\s*\\r    <span style=\"margin: 0px; padding: 0px; color: rgb(128, 128, 128); line-height: 1.5 !important;\">(可以用来删除空白行)\r\n</span></span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">28</span> HTML标记的正则表达式：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">&lt;(\\S*?)[^&gt;]*&gt;.*?&lt;/\\1&gt;|&lt;.*? /&gt;    <span style=\"margin: 0px; padding: 0px; color: rgb(128, 128, 128); line-height: 1.5 !important;\">(网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)</span><br style=\"margin: 0px; padding: 0px;\"></span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">29 </span>首尾空白字符的正则表达式：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">^\\s*|\\s*$或(^\\s*)|(\\s*$)    <span style=\"margin: 0px; padding: 0px; color: rgb(128, 128, 128); line-height: 1.5 !important;\">(可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)\r\n</span></span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">30</span> 腾讯QQ号：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">[1-9][0-9]{4,}    <span style=\"margin: 0px; padding: 0px; color: rgb(128, 128, 128); line-height: 1.5 !important;\">(<span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">腾讯QQ号从10000开始</span>)\r\n</span></span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">31</span> 中国邮政编码：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">[1-9]\\d{5}(?!\\d)    <span style=\"margin: 0px; padding: 0px; color: rgb(128, 128, 128); line-height: 1.5 !important;\">(中国邮政编码为6位数字)\r\n</span></span><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">32</span> IP地址：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">\\d+\\.\\d+\\.\\d+\\.\\d+    <span style=\"margin: 0px; padding: 0px; color: rgb(128, 128, 128); line-height: 1.5 !important;\">(提取IP地址时有用)<br style=\"margin: 0px; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; color: rgb(0, 128, 128); line-height: 1.5 !important;\">33</span> <span style=\"margin: 0px; padding: 0px; color: rgb(0, 0, 0); line-height: 1.5 !important;\">IP地址：<span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">((?:(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d)\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d))</span></span><span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0); line-height: 1.5 !important;\">&nbsp;&nbsp;&nbsp; <span style=\"margin: 0px; padding: 0px; color: rgb(128, 128, 128); line-height: 1.5 !important;\">(由@<span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">飞龙三少 提供,感谢共享</span>)</span></span></span></span></code></pre><p>作者：<a href=\"http://www.cnblogs.com/zxin/\" target=\"_blank\">zxin</a></p><p>出处：<a href=\"http://www.cnblogs.com/zxin/\" target=\"_blank\">http://zxin.cnblogs.com/</a></p>');
INSERT INTO `ape_document_article` VALUES (87, '<h1>引言</h1><p>客户需求, 需要从docx文档读取内容并且做简单格式化, 难点就在于如何读取docx格式并且转换为php可以识别的字符串形式, 惯例先贴代码.</p><h1>代码</h1><pre><code>/**\r\n&nbsp;* Class Docx2Text\r\n&nbsp;*\r\n&nbsp;* Docx =&gt; String\r\n&nbsp;*/\r\nclass Docx2Text\r\n{\r\n&nbsp; &nbsp; const SEPARATOR_TAB = \"\\t\";\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* object zipArchive\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @var string\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $docx;\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* object domDocument from document.xml\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @var string\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $domDocument;\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* xml from document.xml\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @var string\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $_document;\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* xml from numbering.xml\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @var string\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $_numbering;\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;*&nbsp; xml from footnote\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @var string\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $_footnote;\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;*&nbsp; xml from endnote\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @var string\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $_endnote;\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* array of all the endnotes of the document\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @var string\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $endnotes;\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* array of all the footnotes of the document\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @var string\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $footnotes;\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* array of all the relations of the document\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @var string\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $relations;\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* array of characters to insert like a list\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @var string\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $numberingList;\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* the text content that will be exported\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @var string\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $textOuput;\r\n\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* boolean variable to know if a chart will be transformed to text\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @var string\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $chart2text;\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* boolean variable to know if a table will be transformed to text\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @var string\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $table2text;\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* boolean variable to know if a list will be transformed to text\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @var string\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $list2text;\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* boolean variable to know if a paragraph will be transformed to text\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @var string\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $paragraph2text;\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* boolean variable to know if footnotes will be extracteded\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @var string\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $footnote2text;\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* boolean variable to know if endnotes will be extracted\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @var string\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private $endnote2text;\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* Construct\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @param $boolTransforms array of boolean values of which elements should be transformed or not\r\n&nbsp; &nbsp; &nbsp;* @access public\r\n&nbsp; &nbsp; &nbsp;*/\r\n\r\n&nbsp; &nbsp; public function __construct($boolTransforms = array())\r\n&nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; //table,list, paragraph, footnote, endnote, chart\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (isset($boolTransforms[\'table\'])) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;table2text = $boolTransforms[\'table\'];\r\n&nbsp; &nbsp; &nbsp; &nbsp; } else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;table2text = true;\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (isset($boolTransforms[\'list\'])) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;list2text = $boolTransforms[\'list\'];\r\n&nbsp; &nbsp; &nbsp; &nbsp; } else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;list2text = true;\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (isset($boolTransforms[\'paragraph\'])) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;paragraph2text = $boolTransforms[\'paragraph\'];\r\n&nbsp; &nbsp; &nbsp; &nbsp; } else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;paragraph2text = true;\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (isset($boolTransforms[\'footnote\'])) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;footnote2text = $boolTransforms[\'footnote\'];\r\n&nbsp; &nbsp; &nbsp; &nbsp; } else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;footnote2text = true;\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (isset($boolTransforms[\'endnote\'])) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;endnote2text = $boolTransforms[\'endnote\'];\r\n&nbsp; &nbsp; &nbsp; &nbsp; } else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;endnote2text = true;\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (isset($boolTransforms[\'chart\'])) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;chart2text = $boolTransforms[\'chart\'];\r\n&nbsp; &nbsp; &nbsp; &nbsp; } else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;chart2text = true;\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;textOuput = \'\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;docx = null;\r\n&nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;_numbering = \'\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;numberingList = array();\r\n&nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;endnotes = array();\r\n&nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;footnotes = array();\r\n&nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;relations = array();\r\n\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* Extract the content of a word document and create a text file if the name is given\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @access public\r\n&nbsp; &nbsp; &nbsp;* @param string $filename of the word document.\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @return string\r\n&nbsp; &nbsp; &nbsp;*/\r\n\r\n&nbsp; &nbsp; public function extract($filename = \'\')\r\n&nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (empty($this-&gt;_document)) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //xml content from document.xml is not got\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; exit(\'There is no content\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;domDocument = new DomDocument();\r\n&nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;domDocument-&gt;loadXML($this-&gt;_document);\r\n&nbsp; &nbsp; &nbsp; &nbsp; //get the body node to check the content from all his children\r\n&nbsp; &nbsp; &nbsp; &nbsp; $bodyNode = $this-&gt;domDocument-&gt;getElementsByTagNameNS(\'http://schemas.openxmlformats.org/wordprocessingml/2006/main\', \'body\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; //We get the body node. it is known that there is only one body tag\r\n&nbsp; &nbsp; &nbsp; &nbsp; $bodyNode = $bodyNode-&gt;item(0);\r\n&nbsp; &nbsp; &nbsp; &nbsp; foreach ($bodyNode-&gt;childNodes as $child) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //the children can be a table, a paragraph or a section. We only implement the 2 first option said.\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ($this-&gt;table2text &amp;&amp; $child-&gt;tagName == \'w:tbl\') {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //this node is a table and&nbsp; the content is split with tabs if the variable table2text from the class is true\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;textOuput .= $this-&gt;table($child) . $this-&gt;separator();\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //this node is a paragraph\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;textOuput .= $this-&gt;printWP($child) . ($this-&gt;paragraph2text ? $this-&gt;separator() : \'\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (!empty($filename)) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;writeFile($filename, $this-&gt;textOuput);\r\n&nbsp; &nbsp; &nbsp; &nbsp; } else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return $this-&gt;textOuput;\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* Setter\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @access public\r\n&nbsp; &nbsp; &nbsp;* @param $filename\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; public function setDocx($filename)\r\n&nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;docx = new ZipArchive();\r\n&nbsp; &nbsp; &nbsp; &nbsp; $ret = $this-&gt;docx-&gt;open($filename);\r\n&nbsp; &nbsp; &nbsp; &nbsp; if ($ret === true) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;_document = $this-&gt;docx-&gt;getFromName(\'word/document.xml\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; } else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; exit(\'failed\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* extract the content to an array from endnote.xml\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private function loadEndNote()\r\n&nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (empty($this-&gt;endnotes)) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (empty($this-&gt;_endnote)) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;_endnote = $this-&gt;docx-&gt;getFromName(\'word/endnotes.xml\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!empty($this-&gt;_endnote)) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $domDocument = new DomDocument();\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $domDocument-&gt;loadXML($this-&gt;_endnote);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $endnotes = $domDocument-&gt;getElementsByTagNameNS(\'http://schemas.openxmlformats.org/wordprocessingml/2006/main\', \'endnote\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; foreach ($endnotes as $endnote) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $xml = $endnote-&gt;ownerDocument-&gt;saveXML($endnote);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;endnotes[$endnote-&gt;getAttribute(\'w:id\')] = trim(strip_tags($xml));\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* Extract the content to an array from footnote.xml\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private function loadFootNote()\r\n&nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (empty($this-&gt;footnotes)) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (empty($this-&gt;_footnote)) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;_footnote = $this-&gt;docx-&gt;getFromName(\'word/footnotes.xml\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!empty($this-&gt;_footnote)) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $domDocument = new DomDocument();\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $domDocument-&gt;loadXML($this-&gt;_footnote);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $footnotes = $domDocument-&gt;getElementsByTagNameNS(\'http://schemas.openxmlformats.org/wordprocessingml/2006/main\', \'footnote\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; foreach ($footnotes as $footnote) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $xml = $footnote-&gt;ownerDocument-&gt;saveXML($footnote);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;footnotes[$footnote-&gt;getAttribute(\'w:id\')] = trim(strip_tags($xml));\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* Extract the styles of the list to an array\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private function listNumbering()\r\n&nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $ids = array();\r\n&nbsp; &nbsp; &nbsp; &nbsp; $nums = array();\r\n&nbsp; &nbsp; &nbsp; &nbsp; //get the xml code from the zip archive\r\n&nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;_numbering = $this-&gt;docx-&gt;getFromName(\'word/numbering.xml\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (!empty($this-&gt;_numbering)) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //we use the domdocument to iterate the children of the numbering tag\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $domDocument = new DomDocument();\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $domDocument-&gt;loadXML($this-&gt;_numbering);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $numberings = $domDocument-&gt;getElementsByTagNameNS(\'http://schemas.openxmlformats.org/wordprocessingml/2006/main\', \'numbering\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //there is only one numbering tag in the numbering.xml\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $numberings = $numberings-&gt;item(0);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; foreach ($numberings-&gt;childNodes as $child) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $flag = true;//boolean variable to know if the node is the first style of the list\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; foreach ($child-&gt;childNodes as $son) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ($child-&gt;tagName == \'w:abstractNum\' &amp;&amp; $son-&gt;tagName == \'w:lvl\') {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; foreach ($son-&gt;childNodes as $daughter) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ($daughter-&gt;tagName == \'w:numFmt\' &amp;&amp; $flag) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $nums[$child-&gt;getAttribute(\'w:abstractNumId\')] = $daughter-&gt;getAttribute(\'w:val\');//set the key with internal index for the listand the value it is the type of bullet\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $flag = false;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } elseif ($child-&gt;tagName == \'w:num\' &amp;&amp; $son-&gt;tagName == \'w:abstractNumId\') {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $ids[$son-&gt;getAttribute(\'w:val\')] = $child-&gt;getAttribute(\'w:numId\');//$ids is the index of the list\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //once we know what kind of list there is in the documents, is prepared the bullet that the library will use\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; foreach ($ids as $ind =&gt; $id) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ($nums[$ind] == \'decimal\') {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //if the type is decimal it means that the bullet will be numbers\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;numberingList[$id][0] = range(1, 10);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;numberingList[$id][1] = range(1, 10);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;numberingList[$id][2] = range(1, 10);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;numberingList[$id][3] = range(1, 10);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //otherwise is *, and other characters\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;numberingList[$id][0] = array(\'*\', \'*\', \'*\', \'*\', \'*\', \'*\', \'*\', \'*\', \'*\', \'*\', \'*\', \'*\', \'*\', \'*\', \'*\', \'*\', \'*\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;numberingList[$id][1] = array(chr(175), chr(175), chr(175), chr(175), chr(175), chr(175), chr(175), chr(175), chr(175), chr(175), chr(175), chr(175));\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;numberingList[$id][2] = array(chr(237), chr(237), chr(237), chr(237), chr(237), chr(237), chr(237), chr(237), chr(237), chr(237), chr(237), chr(237));\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;numberingList[$id][3] = array(chr(248), chr(248), chr(248), chr(248), chr(248), chr(248), chr(248), chr(248), chr(248), chr(248), chr(248));\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* Extract the content of a w:p tag\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;* @param $node object\r\n&nbsp; &nbsp; &nbsp;* @return string\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private function printWP($node)\r\n&nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $ilvl = $numId = -1;\r\n&nbsp; &nbsp; &nbsp; &nbsp; if ($this-&gt;list2text) {//transform the list in ooxml to formatted list with tabs and bullets\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (empty($this-&gt;numberingList)) {//check if numbering.xml is extracted from the zip archive\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;listNumbering();\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //use the xpath to get expecific children from a node\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $xpath = new DOMXPath($this-&gt;domDocument);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $query = \'w:pPr/w:numPr\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $xmlLists = $xpath-&gt;query($query, $node);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $xmlLists = $xmlLists-&gt;item(0);\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //if ($xmlLists-&gt;tagName == \'w:numPr\') {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; if ($xmlLists-&gt;hasChildNodes()) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; &nbsp; foreach ($xmlLists-&gt;childNodes as $child) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ($child-&gt;tagName == \'w:ilvl\') {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $ilvl = $child-&gt;getAttribute(\'w:val\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }elseif ($child-&gt;tagName == \'w:numId\') {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $numId = $child-&gt;getAttribute(\'w:val\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //}\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //if (($ilvl != -1) &amp;&amp; ($numId != -1)) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; //if is founded the style index of the list in the document and the kind of list\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; $ret = \'\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; for($i=-1; $i &lt; $ilvl; $i++) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; &nbsp; if(self::DEBUG) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $ret .= self::SEPARATOR_TAB_DEBUG;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; &nbsp; else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $ret .= self::SEPARATOR_TAB;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; $ret .= array_shift($this-&gt;numberingList[$numId][$ilvl]) . \' \' . $this-&gt;toText($node);&nbsp; //print the bullet\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //} else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $ret = $this-&gt;toText($node);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //}\r\n&nbsp; &nbsp; &nbsp; &nbsp; } else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //if dont want to formatted lists, we strip from html tags\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $ret = $this-&gt;toText($node);\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; //get the data from the charts\r\n&nbsp; &nbsp; &nbsp; &nbsp; if ($this-&gt;chart2text) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $query = \'w:r/w:drawing/wp:inline\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $xmlChart = $xpath-&gt;query($query, $node);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //get the relation id from the document, to get the name of the xml chart file from the relations to extract the xml code.\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; foreach ($xmlChart as $chart) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; foreach ($chart-&gt;childNodes as $child) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; foreach ($child-&gt;childNodes as $child2) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; foreach ($child2-&gt;childNodes as $child3) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $rid = $child3-&gt;getAttribute(\'r:id\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //if (!empty($rid)) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; if (empty($this-&gt;relations)) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;loadRelations();\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; //get the name of the chart xml file from the relations docuemnt\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; $dataChart = new getDataFromXmlChart($this-&gt;docx-&gt;getFromName(\'word/\' . $this-&gt;relations[$rid][\'file\']));\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; if (in_array($this-&gt;chart2text, array(2, \'table\'))) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; &nbsp; $ret .= $this-&gt;printChartDataTable($dataChart);//formatted print of the chart data\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; } else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; &nbsp; $ret .= $this-&gt;printChartDataArray($dataChart);//formatted print of the chart data\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //}\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; //extract the expecific endnote to insert with the text content\r\n&nbsp; &nbsp; &nbsp; &nbsp; if ($this-&gt;endnote2text) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (empty($this-&gt;endnotes)) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;loadEndNote();\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $query = \'w:r/w:endnoteReference\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $xmlEndNote = $xpath-&gt;query($query, $node);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; foreach ($xmlEndNote as $note) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $ret .= \'[\' . $this-&gt;endnotes[$note-&gt;getAttribute(\'w:id\')] . \'] \';\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; //extract the expecific footnote to insert with the text content\r\n&nbsp; &nbsp; &nbsp; &nbsp; if ($this-&gt;footnote2text) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (empty($this-&gt;footnotes)) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $this-&gt;loadFootNote();\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $query = \'w:r/w:footnoteReference\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $xmlFootNote = $xpath-&gt;query($query, $node);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; foreach ($xmlFootNote as $note) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $ret .= \'[\' . $this-&gt;footnotes[$note-&gt;getAttribute(\'w:id\')] . \'] \';\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; if ((($ilvl != -1) &amp;&amp; ($numId != -1)) || (1)) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $ret .= $this-&gt;separator();\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; return $ret;\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* return a text end of line\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private function separator()\r\n&nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; return \"\\r\\n\";\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* Extract the content of a table node from the document.xml and return a text content\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;* @param $node object\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @return string\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private function table($node)\r\n&nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $output = \'\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; if ($node-&gt;hasChildNodes()) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; foreach ($node-&gt;childNodes as $child) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //start a new line of the table\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ($child-&gt;tagName == \'w:tr\') {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; foreach ($child-&gt;childNodes as $cell) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //start a new cell\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ($cell-&gt;tagName == \'w:tc\') {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ($cell-&gt;hasChildNodes()) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; foreach ($cell-&gt;childNodes as $p) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $output .= $this-&gt;printWP($p);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $output .= self::SEPARATOR_TAB;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $output .= $this-&gt;separator();\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; return $output;\r\n&nbsp; &nbsp; }\r\n\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* Extract the content of a node from the document.xml and return only the text content and. stripping the html tags\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @access private\r\n&nbsp; &nbsp; &nbsp;* @param $node object\r\n&nbsp; &nbsp; &nbsp;*\r\n&nbsp; &nbsp; &nbsp;* @return string\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; private function toText($node)\r\n&nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $xml = $node-&gt;ownerDocument-&gt;saveXML($node);\r\n&nbsp; &nbsp; &nbsp; &nbsp; return trim(strip_tags($xml));\r\n&nbsp; &nbsp; }\r\n}\r\n\r\n// 实例化\r\n$text = new Docx2Text();\r\n// 加载docx文件\r\n$text-&gt;setDocx(\'./1.docx\');\r\n// 将内容存入$docx变量中\r\n$docx = $text-&gt;extract();\r\n// 调试输出\r\nvar_dump($docx);\r\n<br></code></pre><h1>小结</h1><p>代码中处理docx的类来自<a href=\"http://www.phpdocx.com/\">这里</a><br>其实docx就是xml的一种扩展类型的文档.</p><p>转载自&nbsp;&nbsp;<span style=\"font-size: 1px;\"><a href=\"https://blog.csdn.net/hldh214/article/details/51549866\" rel=\"nofollow\">https://blog.csdn.net/hldh214/article/details/51549866</a></span></p>');
INSERT INTO `ape_document_article` VALUES (88, '<p><span style=\"font-size: 1px;\">jquery.confirm 和 modal 弹窗同时打开的bug 会导致 confirm里的 input不可以输入，解决办法，modal</span><span style=\"font-size: 1px;\">窗隐藏或者选择别的插件替代</span></p><p>还有中解决办法&nbsp; 据说是外层的 tabindex导致的，但是我尝试打开弹窗时候移除没有效果，所以放弃</p>');
INSERT INTO `ape_document_article` VALUES (89, '<p><a target=\"_blank\" href=\"https://www.zhihu.com/people/pzma\"></a><a target=\"_blank\" href=\"https://www.zhihu.com/people/pzma\"></a></p><p>可修改源码，将其配置为一个参数，存在的时候才加入input元素的webkitdirectory属性</p><p>创建元素对象添加上</p><p><img src=\"https://pic4.zhimg.com/80/v2-386f4e4b2ae43437de283f0b345942cf_1440w.jpg?source=1940ef5c\" width=\"454\"></p><p>以下是源码中修改内容</p><p><img src=\"https://pic2.zhimg.com/80/v2-ec00ca596570b8ef1c66f0ba98f3f9da_1440w.jpg?source=1940ef5c\" width=\"720\" height=\"146.82660850599783\"><img src=\"https://pic4.zhimg.com/80/v2-696c6602010ba96c3cd371fe7532360e_1440w.jpg?source=1940ef5c\" width=\"563\"><img src=\"https://pic4.zhimg.com/80/v2-87f801315697aa23fc35f321f827956c_1440w.jpg?source=1940ef5c\" width=\"720\" height=\"72.66735324407827\"></p><p>菜鸟个人办法</p><p><br></p><p>转载自知乎&nbsp;&nbsp;<a target=\"_blank\" href=\"https://www.zhihu.com/people/pzma\">pzma</a></p>');
INSERT INTO `ape_document_article` VALUES (90, '<p>首先</p><pre><code class=\"lang-php\">&nbsp;composer&nbsp;require&nbsp;phpoffice/phpspreadsheet<br></code></pre><p><font color=\"#4f4f4f\"><span style=\"font-size: 14px;\">然后上代码</span></font></p><p><font color=\"#4f4f4f\"><span style=\"font-size: 14px;\">配合数据库切片效果更好，但是为了简单方便就直接。。。。</span></font></p><pre><code><!--?php\r\n\r\nnamespace app\\common\\services;\r\n\r\nuse PhpOffice\\PhpSpreadsheet\\Spreadsheet;\r\nuse PhpOffice\\PhpSpreadsheet\\Writer\\Xlsx;\r\nuse \\PhpOffice\\PhpSpreadsheet\\IOFactory;\r\n\r\nclass ExportServer{\r\n\r\n    /**\r\n     * @param array $titles\r\n     * @param array $datas\r\n     * @param array $fields\r\n     * @param string $file_name\r\n     * @throws \\PhpOffice\\PhpSpreadsheet\\Writer\\Exception\r\n     * @date 2020-12-11 17:43\r\n     */\r\n    public function export(array $titles, array $datas, array $fields, string $file_name){\r\n        //让程序一直运行\r\n        set_time_limit(600);\r\n        //设置程序运行内存\r\n        ini_set(\'memory_limit\', \'300M\');\r\n\r\n        $count = count($titles)-1;//计算所需表头数量\r\n        $spreadsheet = new Spreadsheet();\r\n        $sheet = $spreadsheet--->getActiveSheet();\r\n\r\n        //设置列\r\n        $rowAr=self::setRowAr($count);\r\n        foreach ($rowAr as $k =&gt; $v) {\r\n            if($k&gt;$count) break;\r\n            $sheet-&gt;setCellValue($v.\'1\',$titles[$k]);\r\n        }\r\n\r\n        //写入值\r\n        foreach ($datas as $k =&gt; $v) {\r\n            foreach ($rowAr as $ke =&gt; $ve){\r\n                if($ke&gt;$count) break;\r\n                $sheet-&gt;setCellValue($ve.($k+2),$v[$fields[$ke]]);\r\n                $spreadsheet-&gt;getActiveSheet()-&gt;getColumnDimension($ve)-&gt;setWidth(10); //固定列宽\r\n            }\r\n        }\r\n        //冻结首行\r\n        $spreadsheet-&gt;getActiveSheet()-&gt;freezePaneByColumnAndRow(0,2);\r\n\r\n        //在输出Excel前，缓冲区中处理BOM头\r\n        ob_end_clean();\r\n        ob_start();\r\n\r\n        $fileNameArr = explode(\'.\',$file_name);\r\n        $ext = array_pop($fileNameArr);\r\n        header(\'Content-Type: application/vnd.ms-excel\');\r\n        header(\"Content-Disposition: attachment;filename=$file_name\");\r\n        header(\'Cache-Control: max-age=0\');\r\n        $objWriter = IOFactory::createWriter($spreadsheet, ucfirst($ext));//把后缀名首字母大写\r\n        $objWriter-&gt;save(\'php://output\');\r\n        //删除清空：\r\n        $spreadsheet-&gt;disconnectWorksheets();\r\n        unset($spreadsheet);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 设置列一维数组(最多701列)\r\n     * @param int $count\r\n     * @return false|string[]\r\n     * @date 2020-12-11 17:32\r\n     */\r\n    public function setRowAr($count=26){\r\n        $indData=\'A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z\';\r\n        $indData=explode(\',\',$indData);\r\n        $curCount=26;\r\n        for ($i=0; $i &lt;26 ; $i++) {\r\n            for ($j=0; $j &lt;26 ; $j++) {\r\n                if($curCount&gt;=$count) return $indData;\r\n                $indData[]=$indData[$i].$indData[$j];\r\n                $curCount++;\r\n            }\r\n        }\r\n        return $indData;\r\n    }\r\n}<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (91, '<p>在最近的后台生成代码中发现 js动态的生成html 和 直接复制粘贴的样式不一致</p><p><span style=\"font-size: 1px;\">模板使用的是 Light-Year-Admin-Template&nbsp;</span><br></p><p><span style=\"font-size: 1px;\">js生成代码为&nbsp;&nbsp;</span></p><pre><code>&lt;span data-value=\"2020/11/30-2020/12/06\" class=\"label label-success\"&gt;2020/11/30-2020/12/06&amp;nbsp;&amp;nbsp;&lt;a href=\"#\" class=\"remove-choose\" title=\"移除\"&gt;x&lt;/a&gt;&lt;/span&gt;&lt;span data-value=\"2020/11/30-2020/12/06\" class=\"label label-success\"&gt;2020/11/30-2020/12/06&amp;nbsp;&amp;nbsp;&lt;a href=\"#\" class=\"remove-choose\" title=\"移除\"&gt;x&lt;/a&gt;&lt;/span&gt;&lt;span data-value=\"2020/11/30-2020/12/06\" class=\"label label-success\"&gt;2020/11/30-2020/12/06&amp;nbsp;&amp;nbsp;&lt;a href=\"#\" class=\"remove-choose\" title=\"移除\"&gt;x&lt;/a&gt;&lt;/span&gt;<br></code></pre><p>原生html</p><pre><code>&lt;span data-value=\"2020/11/30-2020/12/06\" class=\"label label-success\"&gt;2020/11/30-2020/12/06&amp;nbsp;&amp;nbsp;&lt;a href=\"#\" class=\"remove-choose\" title=\"移除\"&gt;x&lt;/a&gt;&lt;/span&gt;\r\n&lt;span data-value=\"2020/11/30-2020/12/06\" class=\"label label-success\"&gt;2020/11/30-2020/12/06&amp;nbsp;&amp;nbsp;&lt;a href=\"#\" class=\"remove-choose\" title=\"移除\"&gt;x&lt;/a&gt;&lt;/span&gt;\r\n\r\n&lt;span data-value=\"2020/11/30-2020/12/06\" class=\"label label-success\"&gt;2020/11/30-2020/12/06&amp;nbsp;&amp;nbsp;&lt;a href=\"#\" class=\"remove-choose\" title=\"移除\"&gt;x&lt;/a&gt;&lt;/span&gt;<br></code></pre><p><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">对比发现代码是一样的唯一的区别就是 换行的问题 解决思路在动态生成代码后面 加 \'/n\'</span><br></p><p><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">所以修改代码</span></p><pre><code>let html = \'\\n\'+\r\n        \"&lt;span data-value=\\\"\"+time_select+\"\\\" class=\\\"label label-success\\\"&gt;\"+time_select+\"&amp;nbsp;&amp;nbsp;&lt;a href=\\\"#\\\" class=\\\"remove-choose\\\" title=\\\"移除\\\"&gt;x&lt;/a&gt;&lt;/span&gt; \\n\";\r\n$(this).closest(\'.searchForm\').find(\'.time-box\').append(html);<br></code></pre><p>至此问题解决</p><p>注意 appendTo 写法无效，改为append 即可</p>');
INSERT INTO `ape_document_article` VALUES (92, '<p><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">解决完样式</span><br></p><p><img alt=\"微信图片_20201215140143.png\" src=\"/upload/image/2020-12-15/5fd8518ae4381.png\" width=\"700\" height=\"93\"><br></p><p><br></p><p>代码</p><pre><code>.time-box .label{\r\n  display:inline-block;}<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (93, '<p>html 代码 ，注意这里要使用id，否则可能会出现销毁无效的问题</p><pre><code><span style=\"color:#e8bf6a;\"><span style=\"color:#bababa;\">id</span><span style=\"color:#a5c261;\">=\"tree-table\"</span><span style=\"color:#e8bf6a;\">&gt;</span><table <=\"\" span=\"\"><colgroup></colgroup><thead></thead></table></span></code></pre><p>js代码</p><pre><code>let columns;  //栏目\r\ncolumns = [\r\n  &nbsp;{\r\n	field: \'name\',\r\n	title: \'\'\r\n&nbsp; },\r\n&nbsp;{\r\n	field: \'name\',\r\n	title: \'\'\r\n&nbsp; },\r\n&nbsp;{\r\n	field: \'name\',\r\n	title: \'\'\r\n&nbsp; },\r\n\r\n&nbsp;{\r\n	field: \'name\',\r\n	title: \'\'\r\n&nbsp; }\r\n];\r\n//定义表格let $treeTable =  $(\'#tree-table\');\r\n//判断是否显示，显示则需要销毁重新渲染\r\n$treeTable.bootstrapTable(\'destroy\');\r\n//表格渲染\r\n$treeTable.bootstrapTable({\r\n&nbsp;&nbsp;data:data,\r\n&nbsp;&nbsp;columns :columns \r\n.....\r\n})<br></code></pre><p>这样即可</p>');
INSERT INTO `ape_document_article` VALUES (94, '<p style=\"margin-left: auto;\">方法1:</p><p style=\"margin-left: auto;\">浏览器自带的一个方法</p><pre><code>const num=12345.6789\r\n&nbsp;\r\nnum.toLocaleString();//＝&gt;\"12,345.679\"<br></code></pre><p style=\"margin-left: auto;\">方法2:</p><p style=\"margin-left: auto;\">正则匹配</p><pre><code>function&nbsp;format (num) {\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(num+&nbsp;\'\').replace(/(\\d{1,3})(?=(\\d{3})+(?:$|\\.))/g,\'$1,\');\r\n&nbsp;\r\n}<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (95, '<p>更新列的数据</p><pre><code>let rows = {\r\n	index : index, //更新列所在行的索引\r\n	field : \"collection_status\", //要更新列的field\r\n	value : 1 //要更新列的数据\r\n}\r\n//更新表格数据\r\n$(\"#tb_departments\").bootstrapTable(\"updateCell\",rows);<br></code></pre><p>获取列数据</p><pre><code>let allTableData = $(\'#tb_departments\').bootstrapTable(\'getData\');<br></code></pre><p>获取选中数据</p><pre><code>let selectedItem = $(\'#tb_departments\').bootstrapTable(\'getAllSelections\');<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (96, '<pre><code>var tool = function(){\r\n&nbsp; &nbsp; //设置缓存\r\n&nbsp; &nbsp; function setCache(name, value) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; var storage = \'localStorage\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(!window.localStorage){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storage =&nbsp; \'cookie\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (settings === null) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'localStorage\' == storage ?&nbsp; window.localStorage.removeItem(name): delCookie(name);\r\n&nbsp; &nbsp; &nbsp; &nbsp; } else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'localStorage\' == storage ?&nbsp; window.localStorage.setItem(name,settings): addCookie(name,settings);\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; //清空缓存\r\n&nbsp; &nbsp; function clearCache(name) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; var storage = \'localStorage\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(!window.localStorage){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storage =&nbsp; \'cookie\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (name === null) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'localStorage\' == storage ?&nbsp; window.localStorage.clear(): clearAllCookie();\r\n&nbsp; &nbsp; &nbsp; &nbsp; } else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'localStorage\' == storage ?&nbsp; window.localStorage.removeItem(name): delCookie(name);\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; return true;\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; //删除所有cookie\r\n&nbsp; &nbsp; function clearAllCookie() {\r\n&nbsp; &nbsp; &nbsp; &nbsp; var keys = document.cookie.match(/[^ =;]+(?=\\=)/g);\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(keys) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for(var i = keys.length; i--;)\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.cookie = keys[i] + \'=0;expires=\' + new Date(0).toUTCString()\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; return true;\r\n&nbsp; &nbsp; }\r\n\r\n\r\n&nbsp; &nbsp; //提取缓存\r\n&nbsp; &nbsp; function getCache(name) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; var data =&nbsp; storage == \'localStorage\'?&nbsp; window.localStorage.getItem(name): $.cookie.get(name);\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (typeof data == \'string\') {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var obj=JSON.parse(data);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(typeof data == \'object\' &amp;&amp; data ){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data = obj;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch(e) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ///\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; return data;\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* 添加cookie\r\n&nbsp; &nbsp; &nbsp;* @param objName\r\n&nbsp; &nbsp; &nbsp;* @param objValue\r\n&nbsp; &nbsp; &nbsp;* @param objHours\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; function addCookie(objName, objValue, objHours){//添加cookie\r\n&nbsp; &nbsp; &nbsp; &nbsp; var str = objName + \"=\" + escape(objValue);\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (objHours &gt; 0) {//为0时不设定过期时间，浏览器关闭时cookie自动消失\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var date = new Date();\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var ms = objHours * 3600 * 1000;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; date.setTime(date.getTime() + ms);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; str += \"; expires=\" + date.toGMTString();\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; document.cookie = str;\r\n&nbsp; &nbsp; &nbsp; &nbsp; return true;\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* 获取cookie\r\n&nbsp; &nbsp; &nbsp;* @param objName\r\n&nbsp; &nbsp; &nbsp;* @returns {string}\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; function getCookie(objName){//获取指定名称的cookie的值\r\n&nbsp; &nbsp; &nbsp; &nbsp; var arrStr = document.cookie.split(\"; \");\r\n&nbsp; &nbsp; &nbsp; &nbsp; for (var i = 0; i &lt; arrStr.length; i++) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var temp = arrStr[i].split(\"=\");\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (temp[0] == objName)\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return unescape(temp[1]);\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; /**\r\n&nbsp; &nbsp; &nbsp;* 移除cookie\r\n&nbsp; &nbsp; &nbsp;* @param name\r\n&nbsp; &nbsp; &nbsp;*/\r\n&nbsp; &nbsp; function delCookie(name){//为了删除指定名称的cookie，可以将其过期时间设定为一个过去的时间\r\n&nbsp; &nbsp; &nbsp; &nbsp; var date = new Date();\r\n&nbsp; &nbsp; &nbsp; &nbsp; date.setTime(date.getTime() - 10000);\r\n&nbsp; &nbsp; &nbsp; &nbsp; document.cookie = name + \"=a; expires=\" + date.toGMTString();\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; //cache 方法 包含设置 删除 获取\r\n&nbsp; &nbsp; function cache(name, settings,) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; name = name || \'cache\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; var storage = \'localStorage\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(!window.localStorage){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storage =&nbsp; \'cookie\';\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; //先判断是不是删除\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(settings === null){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //删除缓存\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storage == \'localStorage\'?&nbsp; window.localStorage.removeItem(name): delCookie(name);\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; //判断是不是获取\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(!settings){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //获取缓存\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var data =&nbsp; storage == \'localStorage\'?&nbsp; window.localStorage.getItem(name): getCookie(name);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (typeof data == \'string\') {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var obj=JSON.parse(data);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(typeof data == \'object\' &amp;&amp; data ){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data = obj;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch(e) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ///\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return data;\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; settings = typeof settings ===\"object\" ?JSON.stringify(settings):settings;\r\n&nbsp; &nbsp; &nbsp; &nbsp; //开始写缓存\r\n&nbsp; &nbsp; &nbsp; &nbsp; storage == \'localStorage\'?&nbsp; window.localStorage.setItem(name,settings): addCookie(name,settings);\r\n&nbsp; &nbsp; &nbsp; &nbsp; return true;\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; return {\r\n&nbsp; &nbsp; &nbsp; &nbsp; // 页面加载动画\r\n&nbsp; &nbsp; &nbsp; &nbsp; setCache : function (name, value) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setCache(name, value)\r\n&nbsp; &nbsp; &nbsp; &nbsp; },\r\n&nbsp; &nbsp; &nbsp; &nbsp; getCache :function (name) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; getCache(name)\r\n&nbsp; &nbsp; &nbsp; &nbsp; },\r\n&nbsp; &nbsp; &nbsp; &nbsp; cache: function (name, settings){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return cache(name, settings);\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; };\r\n}();<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (97, '<p>php版本结巴分词仓库&nbsp;<a href=\"https://github.com/fukuball/jieba-php\" target=\"_blank\">jieba分词</a></p><p>介绍</p><pre><code>支持三種分詞模式：\r\n1）默認精確模式，試圖將句子最精確地切開，適合文本分析；\r\n2）全模式，把句子中所有的可以成詞的詞語都掃描出來，但是不能解決歧義。（需要充足的字典）\r\n搜尋引擎模式，在精確模式的基礎上，對長詞再次切分，提高召回率，適合用於搜尋引擎分詞。\r\n支持繁體斷詞\r\n支持自定義詞典<br></code></pre><p>使用</p><p>自動安裝：使用 composer 安裝後，透過 autoload 引用</p><pre><code>composer require fukuball/jieba-php:dev-master<br></code></pre><ul><li>手動安裝：將 jieba-php 放置適當目錄後，透過 require_once 引用</li></ul><pre><code>require_once \"/path/to/your/vendor/multi-array/MultiArray.php\";\r\nrequire_once \"/path/to/your/vendor/multi-array/Factory/MultiArrayFactory.php\";\r\nrequire_once \"/path/to/your/class/Jieba.php\";\r\nrequire_once \"/path/to/your/class/Finalseg.php\";<br></code></pre><p><br></p><p>使用</p><pre><code>use Fukuball\\Jieba\\Jieba;\r\nuse Fukuball\\Jieba\\Finalseg;\r\n\r\n\r\nJieba::init();\r\nFinalseg::init();\r\n\r\n$seg_list = Jieba::cut(\"怜香惜玉也得要看对象啊！\");\r\nvar_dump($seg_list);\r\n\r\n$seg_list = Jieba::cut(\"我来到北京清华大学\", true);\r\nvar_dump($seg_list); #全模式\r\n\r\n$seg_list = Jieba::cut(\"我来到北京清华大学\", false);\r\nvar_dump($seg_list); #默認精確模式\r\n\r\n$seg_list = Jieba::cut(\"他来到了网易杭研大厦\");\r\nvar_dump($seg_list);\r\n\r\n$seg_list = Jieba::cutForSearch(\"小明硕士毕业于中国科学院计算所，后在日本京都大学深造\"); #搜索引擎模式\r\nvar_dump($seg_list);</code></pre><p><br></p><p>功能</p><ul><li>分词&nbsp;&nbsp;</li></ul><pre><code>Jieba::cut(\"怜香惜玉也得要看对象啊！\");\r\n\r\nJieba::cutForSearch(\"小明硕士毕业于中国科学院计算所，后在日本京都大学深造\"); #搜索引擎模式<br></code></pre><ul><li>添加自定义词典</li></ul><pre><code>&nbsp;Jieba::loadUserDict(file_name) # file_name 为自定义词典的绝对路径<br></code></pre><ul><li>关键字提取</li></ul><pre><code>JiebaAnalyse::extractTags($content, $top_k)\r\ncontent 为待提取的文本\r\ntop_k 为返回几个 TF/IDF 权重最大的关键词，默认值 20\r\n可使用 setStopWords 增加自定义 stop words<br></code></pre><ul><li>词性分词</li></ul><pre><code>Posseg::cut(\"这是一个伸手不见五指的黑夜。我叫孙悟空，我爱北京，我爱Python和C++。\")<br></code></pre><ul><li>切换繁体字典</li></ul><pre><code>Jieba::init(array(\'mode\'=&gt;\'default\',\'dict\'=&gt;\'big\'));\r\nFinalseg::init();\r\n\r\n$seg_list = Jieba::cut(\"怜香惜玉也得要看对象啊！\");<br></code></pre><ul><li>保留日文\\韩文</li></ul><pre><code>Jieba::init(array(\'cjk\'=&gt;\'all\'));\r\nFinalseg::init();\r\n\r\n$seg_list = Jieba::cut(\"한국어 또는 조선말은 제주특별자치도를 제외한 한반도 및 그 부속 도서와 한민족 거주 지역에서 쓰이는 언어로\");<br></code></pre><ul><li>返回词语在全文的位置</li></ul><pre><code>Jieba::init(array(\'mode\'=&gt;\'test\',\'dict\'=&gt;\'big\'));\r\nFinalseg::init();\r\n\r\n$seg_list = Jieba::tokenize(\"永和服装饰品有限公司\");<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (98, '<pre><code><span :class=\"userid?\'\':\'selection\'\" class=\"heading\">{{jobInfo.company_name|selection}}\r\n\r\nfilters:{\r\n&nbsp; &nbsp; //隐藏隐私信息的方法\r\n&nbsp; &nbsp; selection(value){\r\n	&nbsp; &nbsp; if(that.userId){\r\n	&nbsp; &nbsp; &nbsp; &nbsp; return value;\r\n	&nbsp; &nbsp; }else{\r\n	&nbsp; &nbsp; &nbsp;return \'XXXXXXXXX\';\r\n	&nbsp; &nbsp; }\r\n&nbsp; &nbsp; },\r\n}&nbsp; &nbsp; &nbsp;\r\n\r\n.selection {\r\n&nbsp; &nbsp; -moz-user-select: -moz-none;\r\n	-moz-user-select: none;\r\n	-o-user-select:none;\r\n	-khtml-user-select:none;\r\n	-webkit-user-select:none;\r\n	-ms-user-select:none;\r\n	user-select:none;\r\n	color: transparent !important;\r\n	text-shadow: 0px 0px 15px #666 !important;\r\n}<br></span :class=\"userid?\'\':\'selection\'\" class=\"heading\"></code></pre>');
INSERT INTO `ape_document_article` VALUES (99, '<table><colgroup><col width=\"NaN%\"></colgroup><thead><tr><th><font><font color=\"#333333\">amd audio coprocessor这个驱动能用就别更新，而且要记得备份驱动小新 13proAMD 锐龙4600U版本更新amd audio coprocessor这个驱动，瞬间就关机很慢，开机也很慢，在启动那个界面滚动好几分钟才进入系统，我以为电脑挂了呢。 到联想电脑管家恢复上一个驱动就恢复正常了。至少2.89.0.61这个版本千万别更新。</font></font><br><img src=\"https://img2cdn.clubstatic.lenovo.com.cn/pic/19918544269515/0\" width=\"700\" height=\"447\"><img src=\"https://img2cdn.clubstatic.lenovo.com.cn/pic/19918544661796/0\" width=\"700\" height=\"447\"><br></th></tr></thead></table><p><br></p><p>解决办法&nbsp;&nbsp;<span style=\"color: rgb(51, 51, 51); font-size: 16px;\">到设备管理器（此电脑-右键），系统设备里面找到 amd audio coprocessor，选择回退就可以了。</span></p><p><img src=\"https://img2cdn.clubstatic.lenovo.com.cn/pic/19958927579736/0\"><br></p><p><br></p><p>来自联想论坛&nbsp;&nbsp;<span style=\"color: rgb(51, 51, 51); font-size: 14px;\">Water2302</span></p>');
INSERT INTO `ape_document_article` VALUES (100, '<p><br></p>');
INSERT INTO `ape_document_article` VALUES (101, '<h3><span style=\"font-size: 18pt; color: rgb(0, 0, 0);\">测试是否启动成功简介</span></h3><p><span style=\"color: rgb(51, 51, 51);\">来自百度百科：<br>ElasticSearch是一个基于Lucene的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java语言开发的，并作为Apache许可条款下的开放源码发布，是一种流行的企业级搜索引擎。ElasticSearch用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。</span></p><h1><span style=\"font-size: 18pt; color: rgb(0, 0, 0);\">二、</span><span style=\"font-size: 18pt; color: rgb(0, 0, 0);\">elasticsearch</span><span style=\"font-size: 18pt; color: rgb(0, 0, 0);\">下载及安装</span></h1><h3><span style=\"font-size: 15pt; color: rgb(0, 0, 0);\">1. </span><span style=\"font-size: 15pt; color: rgb(0, 0, 0);\">安装</span><span style=\"font-size: 15pt; color: rgb(0, 0, 0);\">jdk</span></h3><p><span style=\"color: rgb(61, 70, 77); font-size: 16px;\">ES 7.8 需要 java 11 环境,centos 默认自带是openjdk1.8或者没有</span><br></p><pre><code>java -version</code></pre><h3><span style=\"color: rgb(0, 0, 0);\"><span style=\"font-size: 0.75em;\">如果出现以下界面则说明存在，需要升级</span><span style=\"font-size: 15pt;\"><img alt=\"微信图片_20210130235038.png\" src=\"/upload/image/2021-01-30/6015805ce061c.png\" width=\"792\" height=\"131\"></span><br></span></h3><pre><code>rpm -qa | grep jdk ##查找安装的jdk\r\n\r\nrpm -e --nodeps java-1.8.0-openjdk-1.8.0.275.b01-1.el8_3.x86_64 #删除安装的jdk\r\nrpm -e --nodeps java-1.8.0-openjdk-headless-1.8.0.275.b01-1.el8_3.x86_64\r\n<br></code></pre><p>如果提示，下面代码则表示不存在跳过下面的步骤</p><pre><code>bash: /usr/bin/java: No such file or directory</code></pre><h3><span style=\"font-size: 15pt; color: rgb(0, 0, 0);\">执行安装jdk11</span></h3><pre><code>&nbsp;yum install java-11-openjdk* -y</code></pre><h3><span style=\"font-size: 15pt; color: rgb(0, 0, 0);\">2. </span><span style=\"font-size: 15pt; color: rgb(0, 0, 0);\">下载、传输并解压es</span></h3><ol><li><a href=\"https://www.elastic.co/cn/downloads/elasticsearch\" target=\"_blank\">es 地址&nbsp;</a>，选择修新版的地址</li><pre><code>&nbsp;wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.10.2-linux-x86_64.tar.gz</code></pre><li>解压下载后的安装包。</li><pre><code><span lang=\"EN-US\" style=\"font-size: 10pt; font-family: Consolas;\">tar xzvf elasticsearch-7.10.2-linux-x86_64.tar.gz</span></code></pre><li>解压完成后进入到bin文件夹下，并启动elasticsearch。</li><pre><code><span lang=\"EN-US\" style=\"font-size: 10pt; font-family: Consolas;\">cd /usr/local/elasticsearch-7.10.2-linux-x86_64.tar.gz/bin/\r\nsu es &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;# 使用创建的账户进行启动\r\n./elasticsearch&nbsp;&nbsp;&nbsp;&nbsp; # 启动elasticsearch</span></code></pre><li><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">测试是否启动成功</span><br></li><pre><code>curl 127.0.0.1:9200\r\n</code></pre></ol><p><span style=\"color: rgb(51, 51, 51);\"><img alt=\"微信图片_20210131000452.png\" src=\"/upload/image/2021-01-31/601583b8ccc95.png\" width=\"931\" height=\"497\"><br></span></p><p><span style=\"color: rgb(51, 51, 51);\">可能会出现以下错误</span></p><p><span style=\"color: rgb(77, 77, 77); font-size: 16px;\">可能会出现以下错误</span></p><p><span style=\"color: rgb(77, 77, 77); font-size: 16px;\">1）jdk版本不对应</span></p><p><img src=\"https://img-blog.csdnimg.cn/20191127223459467.png\" alt=\"启动报错\"></p><p><span style=\"color: rgb(77, 77, 77); font-size: 16px;\">解决：参照安装jdk重新安装jdk</span></p><p><span style=\"color: rgb(77, 77, 77); font-size: 16px;\"><span style=\"color: rgb(77, 77, 77); font-size: 16px;\">2）root账户不能启动</span><br></span></p><p><span style=\"color: rgb(51, 51, 51);\"><img alt=\"微信图片_20210131000904.png\" src=\"/upload/image/2021-01-31/601584aad184c.png\" width=\"800\" height=\"182.00514138817482\"><br></span></p><p><span style=\"color: rgb(51, 51, 51);\">解决</span></p><pre><code># 创建es账户\r\nadduser es\r\n# 修改密码\r\npasswd es  \r\n#输入的密码会提示不能少于8个字符，并且不能太过简单（eg:123qwe.lxw）\r\n#给es用户elasticsearch目录的授权\r\nchown -R es /usr/local/elasticsearch-7.4.2/<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (102, '<p>首先要安装驱动，官方的辣鸡服务支持别指望了 2k/s&nbsp; 哎！！</p><p>苹果官网驱动</p><p><a href=\"https://support.apple.com/kb/DL1888?viewlocale=zh_CN&amp;locale=zh_CN\">https://support.apple.com/kb/DL1888?viewlocale=zh_CN&amp;locale=zh_CN</a><br></p><p>一路安装到底</p><p>然后进入系统偏好设置-打印机与扫描仪<br></p><p><img alt=\"1612188891236.jpg\" src=\"/upload/image/2021-02-01/60180cea1d619.jpg\" width=\"600\" height=\"387.75\"><br></p><p><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">左下角点击+号</span><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">已经识别到打印机了</span></p><p><span style=\"color: rgb(51, 51, 51); font-size: 16px;\"><img alt=\"1612189484604.jpg\" src=\"/upload/image/2021-02-01/60180fd73a213.jpg\" width=\"600\" height=\"515.5393053016453\"><img alt=\"1612189517494.jpg\" src=\"/upload/image/2021-02-01/60180fd73c4da.jpg\" width=\"600\" height=\"501.933216168717\"><br></span></p><p>选择软件（也就是驱动）搜索HP DeskJet 21&nbsp;选择<span style=\"color: rgb(51, 51, 51); font-size: 16px;\">hp deskjet 2000 j200 series</span>驱动</p><p><img alt=\"1612189883590.jpg\" src=\"/upload/image/2021-02-01/601810cf0d1cf.jpg\" width=\"600\" height=\"500.93023255813955\"><br></p><p><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">添加hp deskjet 2000 j200 series后，用hp deskjet 2000 j200 series测试打印，<span style=\"color: rgb(51, 51, 51); font-size: 16px;\">然后你就可以享受你的打印机了（mac）</span></span><br></p><p>惠普的命名很迷，其实用虚拟机也能打（Windows驱动方便太多）。</p>');
INSERT INTO `ape_document_article` VALUES (103, '<p>效果：</p><p><img alt=\"20180420095622973.png\" src=\"/upload/image/2021-02-02/6019300de4c8b.png\" width=\"600\" height=\"182.98642533936652\"><br></p><pre><code class=\"lang-html\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n&nbsp; &nbsp; &lt;meta charset=\"UTF-8\"&gt;\r\n&nbsp; &nbsp; &lt;title&gt;&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;div&gt;\r\n&nbsp; &nbsp; &lt;div style=\"float: left;\"&gt;\r\n&nbsp; &nbsp; &nbsp; &nbsp; 时间周期\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;select id=\"changeMonthOrWeek\" name=\"changeMonthOrWeek\" class=\"\" style=\"padding-left: 10px; \"&gt;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;option value=\"1\"&gt;月&lt;/option&gt;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;option value=\"2\"&gt;周&lt;/option&gt;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;/select&gt;：\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;select id=\"startYear\" class=\"year-crm\"&gt;&lt;/select&gt;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;select id=\"startMonth\" class=\" month-crm\"&gt;&lt;/select&gt;\r\n&nbsp; &nbsp; &lt;/div&gt;\r\n&nbsp; &nbsp; &lt;div id=\"changeMonthDiv\" style=\"float: left;\"&gt;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;span style=\"padding: 0px 10px\"&gt;至&lt;/span&gt;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;select id=\"endYear\" class=\"year-crm\"&gt;&lt;/select&gt;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;select id=\"endMonth\" class=\"month-crm\"&gt;&lt;/select&gt;\r\n&nbsp; &nbsp; &lt;/div&gt;\r\n&nbsp; &nbsp; &lt;div id=\"changeWeekDiv\" style=\"display: none;\"&gt;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;select id=\"startEndDay\" class=\"week-crm\"&gt;&lt;/select&gt;\r\n&nbsp; &nbsp; &lt;/div&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;script src=\"js/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n&nbsp; &nbsp; //展示周\r\n&nbsp; &nbsp; function weekShow(id,df,dv) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $(id).html(\"\");\r\n&nbsp; &nbsp; &nbsp; &nbsp; $(id).append(\"&lt;option value=\'\'&gt;--------------周--------------&lt;/option&gt;\");\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(df){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var data = weekCount(dv)\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for(var i =0;i&lt;data.length;i++){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var v = data[i].timesStart+\"~\"+data[i].timesEnd;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $(id).append(\"&lt;option value=\'\"+v+\"\'&gt;\"+v+\"&lt;/option&gt;\");\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp; weekShow(\"#startEndDay\",true);\r\n&nbsp; &nbsp; $(\"#changeMonthOrWeek\").change(function () {\r\n&nbsp; &nbsp; &nbsp; &nbsp;var val = this.value;\r\n&nbsp; &nbsp; &nbsp; &nbsp;if(val==1){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;$(\"#changeWeekDiv\").hide();\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;$(\"#changeMonthDiv\").show();\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;monthShow(\".month-crm\");\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;yearsShow(\".year-crm\",2014);\r\n&nbsp; &nbsp; &nbsp; &nbsp;}\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(val==2){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $(\"#changeWeekDiv\").show();\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $(\"#changeMonthDiv\").hide();\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; monthShow(\"#startMonth\");\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; yearsShow(\"#startYear\",2014);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; weekShow(\"#startEndDay\");\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; });\r\n&nbsp; &nbsp; //周视图改变的时候\r\n&nbsp; &nbsp; $(\"#startYear\").change(function () {\r\n&nbsp; &nbsp; &nbsp; &nbsp; var val = $(\"#changeMonthOrWeek\").val();\r\n&nbsp; &nbsp; &nbsp; &nbsp; var startMonth = $(\"#startMonth\").val();\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(val==2&amp;&amp;startMonth!=\"\"){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; weekShow(\"#startEndDay\",true,this.value+\"-\"+startMonth);\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; });\r\n&nbsp; &nbsp; //周视图改变的时候\r\n&nbsp; &nbsp; $(\"#startMonth\").change(function () {\r\n&nbsp; &nbsp; &nbsp; &nbsp; var val = $(\"#changeMonthOrWeek\").val();\r\n&nbsp; &nbsp; &nbsp; &nbsp; var startYear = $(\"#startYear\").val();\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(val==2&amp;&amp;startYear!=\"\"){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; weekShow(\"#startEndDay\",true,startYear+\"-\"+this.value);\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; });\r\n&nbsp; &nbsp; //一个月的周区间\r\n&nbsp; &nbsp; function weekCount(df) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; var date=new Date;\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(df){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; date = new Date(df);\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; var dateTemp = date;\r\n&nbsp; &nbsp; &nbsp; &nbsp; dateTemp.setDate(1);\r\n&nbsp; &nbsp; &nbsp; &nbsp; var intWeek = dateTemp.getDay();\r\n&nbsp; &nbsp; &nbsp; &nbsp; var dateStartDay,dateEndDay;\r\n&nbsp; &nbsp; &nbsp; &nbsp; var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n&nbsp; &nbsp; &nbsp; &nbsp; // console.log(lastDay)\r\n&nbsp; &nbsp; &nbsp; &nbsp; var timesStart,timesEnd;\r\n&nbsp; &nbsp; &nbsp; &nbsp; var arr = [];\r\n&nbsp; &nbsp; &nbsp; &nbsp; dateStartDay = new Date(dateTemp);\r\n&nbsp; &nbsp; &nbsp; &nbsp; dateStartDay.setDate(dateStartDay.getDate()-(intWeek-1==-1?6:intWeek-1));\r\n&nbsp; &nbsp; &nbsp; &nbsp; timesStart = dateStartDay.getFullYear()+\"-\"+dateToolAddZero(dateStartDay.getMonth()+1)+\"-\"+dateToolAddZero(dateStartDay.getDate());\r\n&nbsp; &nbsp; &nbsp; &nbsp; dateEndDay = new Date(timesStart);\r\n&nbsp; &nbsp; &nbsp; &nbsp; dateEndDay.setDate(dateEndDay.getDate()+6);\r\n&nbsp; &nbsp; &nbsp; &nbsp; timesEnd = dateEndDay.getFullYear()+\"-\"+dateToolAddZero(dateEndDay.getMonth()+1)+\"-\"+dateToolAddZero(dateEndDay.getDate());\r\n&nbsp; &nbsp; &nbsp; &nbsp; arr.push({\"timesStart\":timesStart,\"timesEnd\":timesEnd});\r\n&nbsp; &nbsp; &nbsp; &nbsp; var loop = true;\r\n&nbsp; &nbsp; &nbsp; &nbsp; var index = 1;\r\n&nbsp; &nbsp; &nbsp; &nbsp; while (loop){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var dateStartDay2 = new Date(timesEnd);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dateStartDay2.setDate(dateStartDay2.getDate()+1);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var timesStart = dateStartDay2.getFullYear()+\"-\"+dateToolAddZero(dateStartDay2.getMonth()+1)+\"-\"+dateToolAddZero(dateStartDay2.getDate());\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var dateEndDay2 = new Date(timesStart);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dateEndDay2.setDate(dateEndDay2.getDate()+6);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; timesEnd = dateEndDay2.getFullYear()+\"-\"+dateToolAddZero(dateEndDay2.getMonth()+1)+\"-\"+dateToolAddZero(dateEndDay2.getDate());\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(lastDay.getDay()==0){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var tempDate = new Date(timesEnd);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tempDate = new Date(dateStartDay2.getFullYear(), dateStartDay2.getMonth());\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(tempDate&gt;=lastDay){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; loop=false;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var tempDate = new Date(timesEnd);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tempDate = new Date(dateStartDay2.getFullYear(), dateStartDay2.getMonth());\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(tempDate&gt;lastDay){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; loop=false;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; arr.push({\"timesStart\":timesStart,\"timesEnd\":timesEnd});\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; index++;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(index&gt;10){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; loop=false;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; // console.log(arr);\r\n&nbsp; &nbsp; &nbsp; &nbsp; return arr;\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp; function dateToolAddZero(num){\r\n&nbsp; &nbsp; &nbsp; &nbsp; return num&lt;10?\'0\'+num:num;\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp; // weekCount(\'2008-2\');\r\n&nbsp; &nbsp; // weekCount(\'2018-1\');\r\n&nbsp; &nbsp; // weekCount(\'2018-4\');\r\n&nbsp; &nbsp; // weekCount(\'2017-12\');\r\n&nbsp; &nbsp; // weekCount(\'2018-12\');\r\n&nbsp; &nbsp; // weekCount(\'2019-1\');\r\n&nbsp; &nbsp; //年份展示\r\n&nbsp; &nbsp; function yearsShow(id,time,df) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $(id).html(\"\");\r\n&nbsp; &nbsp; &nbsp; &nbsp; $(id).append(\"&lt;option value=\'\'&gt;--年--&lt;/option&gt;\");\r\n&nbsp; &nbsp; &nbsp; &nbsp; var date=new Date;\r\n&nbsp; &nbsp; &nbsp; &nbsp; var year=date.getFullYear();\r\n&nbsp; &nbsp; &nbsp; &nbsp; var month=date.getMonth()+1;\r\n&nbsp; &nbsp; &nbsp; &nbsp; var len = 0;\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(time){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; len = time;\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; for (var i=year;i&gt;=len;i--){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $(id).append(\"&lt;option value=\'\"+i+\"\'&gt;\"+i+\"&lt;/option&gt;\");\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(df){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $(id).val(year)\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp; //月份展示\r\n&nbsp; &nbsp; function monthShow(id,df) {\r\n&nbsp; &nbsp; &nbsp; &nbsp; $(id).html(\"\");\r\n&nbsp; &nbsp; &nbsp; &nbsp; $(id).append(\"&lt;option value=\'\'&gt;--月--&lt;/option&gt;\");\r\n&nbsp; &nbsp; &nbsp; &nbsp; var date=new Date;\r\n&nbsp; &nbsp; &nbsp; &nbsp; var month=date.getMonth()+1;\r\n&nbsp; &nbsp; &nbsp; &nbsp; for (var i=1;i&lt;=12;i++){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var v = i&lt;10?(\'0\'+i):i;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $(id).append(\"&lt;option value=\'\"+v+\"\'&gt;\"+i+\"&lt;/option&gt;\");\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(df){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $(id).val(month&lt;10?(\'0\'+month):month);\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp; monthShow(\".month-crm\",true);\r\n&nbsp; &nbsp; yearsShow(\".year-crm\",2014,true);\r\n&lt;/script&gt;\r\n&lt;/html&gt;<br></code></pre>');
INSERT INTO `ape_document_article` VALUES (104, '<p>新文章</p>');
INSERT INTO `ape_document_article` VALUES (107, '<p>22222</p>');
INSERT INTO `ape_document_article` VALUES (108, '<p>2131231</p>');
INSERT INTO `ape_document_article` VALUES (109, '<p>222</p>');

-- ----------------------------
-- Table structure for ape_document_category
-- ----------------------------
DROP TABLE IF EXISTS `ape_document_category`;
CREATE TABLE `ape_document_category`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '标题',
  `alias` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '标志',
  `icon` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '分类图标',
  `type` tinyint(4) NOT NULL DEFAULT 0 COMMENT '分类类别：0列表，1单篇，2链接',
  `pid` int(10) NOT NULL DEFAULT 0 COMMENT '上级分类ID',
  `sort` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '排序（同级有效）',
  `meta_title` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT 'SEO的网页标题',
  `keywords` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '关键字',
  `description` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '描述',
  `status` tinyint(2) NOT NULL DEFAULT 1 COMMENT '是否显示',
  `template` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '分类模板',
  `link_str` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '外链',
  `view` int(10) NOT NULL DEFAULT 0 COMMENT '访问数',
  `create_time` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '创建时间',
  `update_time` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '分类表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_document_category
-- ----------------------------
INSERT INTO `ape_document_category` VALUES (1, '关于小站', '', '', 0, 0, 99, '关于小站', '关于小站,源码云,源码云博客,关于源码云博客', '源码云博客,源码云博客网站', 1, 'list_default.html', '', 52, 0, 1642089484);
INSERT INTO `ape_document_category` VALUES (2, '编程资料', '', '', 0, 0, 0, '', '', '', 1, 'list_default.html', '', 55, 0, 1649562875);
INSERT INTO `ape_document_category` VALUES (3, 'php', 'php', '', 1, 2, 0, '', '', '', 1, 'list_default.html', '', 23, 0, 0);

-- ----------------------------
-- Table structure for ape_document_category_content
-- ----------------------------
DROP TABLE IF EXISTS `ape_document_category_content`;
CREATE TABLE `ape_document_category_content`  (
  `id` int(11) NOT NULL,
  `content` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '分类内容表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_document_category_content
-- ----------------------------
INSERT INTO `ape_document_category_content` VALUES (2, '');
INSERT INTO `ape_document_category_content` VALUES (3, '');

-- ----------------------------
-- Table structure for ape_document_product
-- ----------------------------
DROP TABLE IF EXISTS `ape_document_product`;
CREATE TABLE `ape_document_product`  (
  `id` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '文档ID',
  `piclist` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '产品图片集',
  `content` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '文章内容',
  `price` decimal(18, 2) NOT NULL DEFAULT 0.00 COMMENT '产品价格',
  `market_price` decimal(18, 2) NOT NULL DEFAULT 0.00 COMMENT '市场价',
  `create_time` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '创建时间',
  `update_time` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '文档模型文章表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_document_product
-- ----------------------------

-- ----------------------------
-- Table structure for ape_friend_link
-- ----------------------------
DROP TABLE IF EXISTS `ape_friend_link`;
CREATE TABLE `ape_friend_link`  (
  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `uid` int(10) NOT NULL DEFAULT 1 COMMENT '添加者',
  `title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '链接网站名称',
  `url` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '链接地址',
  `image` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '图片连接的图片',
  `description` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '描述',
  `sort` int(10) NOT NULL DEFAULT 0 COMMENT '排序',
  `create_time` int(10) NOT NULL DEFAULT 0 COMMENT '创建时间',
  `update_time` int(10) NOT NULL DEFAULT 0 COMMENT '更新时间',
  `status` int(10) NOT NULL DEFAULT 1 COMMENT '状态 0禁用',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '友链表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_friend_link
-- ----------------------------
INSERT INTO `ape_friend_link` VALUES (1, 1, '源码云', 'https://www.apecloud.cn/', '/upload/image/20220228/ca46bd04e1d32911de549862f6db1b8e.png', '源码云', 0, 1642946872, 1646030344, 1);
INSERT INTO `ape_friend_link` VALUES (2, 1, '源码云博客', 'https://blog.apecloud.cn/', '/upload/image/20220228/ca46bd04e1d32911de549862f6db1b8e.png', '源码云博客', 0, 1642946909, 1646030354, 1);

-- ----------------------------
-- Table structure for ape_invitation_code
-- ----------------------------
DROP TABLE IF EXISTS `ape_invitation_code`;
CREATE TABLE `ape_invitation_code`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `code` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '邀请码',
  `status` int(11) NOT NULL DEFAULT 0 COMMENT '状态 0未使用 1 使用',
  `uid` int(11) NOT NULL DEFAULT 0 COMMENT '使用用户',
  `create_time` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '创建时间',
  `update_time` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '邀请码' ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of ape_invitation_code
-- ----------------------------

-- ----------------------------
-- Table structure for ape_message_form
-- ----------------------------
DROP TABLE IF EXISTS `ape_message_form`;
CREATE TABLE `ape_message_form`  (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `author` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '姓名',
  `tel` varchar(15) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '手机',
  `email` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '邮箱',
  `content` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '留言内容',
  `is_reply` int(10) NOT NULL DEFAULT 0 COMMENT '回复状态 0未回复',
  `reply_uid` int(10) NOT NULL DEFAULT 0 COMMENT '回复人',
  `reply_content` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '回复内容',
  `status` int(10) NOT NULL DEFAULT 1,
  `create_time` int(10) NOT NULL DEFAULT 0 COMMENT '留言时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '反馈意见表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_message_form
-- ----------------------------

-- ----------------------------
-- Table structure for ape_pv_log
-- ----------------------------
DROP TABLE IF EXISTS `ape_pv_log`;
CREATE TABLE `ape_pv_log`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `time` int(10) NOT NULL DEFAULT 0 COMMENT '时间段',
  `view` int(10) NOT NULL DEFAULT 0 COMMENT '浏览量',
  `date` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '访问时间',
  `create_time` int(11) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` int(11) NULL DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = 'pv记录' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_pv_log
-- ----------------------------

-- ----------------------------
-- Table structure for ape_system_config
-- ----------------------------
DROP TABLE IF EXISTS `ape_system_config`;
CREATE TABLE `ape_system_config`  (
  `id` int(8) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'id',
  `tab_id` int(8) NOT NULL DEFAULT 0 COMMENT '分组id',
  `name` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '标题名称',
  `form_name` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '表单名称',
  `form_type` varchar(16) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '表单类型',
  `tag_type` varchar(16) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '标签类型',
  `upload_type` tinyint(1) NOT NULL DEFAULT 0 COMMENT '上传配置',
  `param` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '参数',
  `value` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '内容',
  `remark` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '备注',
  `rank` tinyint(2) NOT NULL DEFAULT 0 COMMENT '排序',
  `is_show` tinyint(1) UNSIGNED NOT NULL DEFAULT 1 COMMENT '是否显示',
  `status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '角色状态1可用0不用',
  `create_user` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '添加人',
  `update_user` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '修改时间',
  `create_time` int(10) NOT NULL DEFAULT 0 COMMENT '添加时间',
  `update_time` int(10) NOT NULL DEFAULT 0 COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 36 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '系统配置表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_system_config
-- ----------------------------
INSERT INTO `ape_system_config` VALUES (1, 1, '网站标题', 'title', 'text', 'input', 0, '', '源码云博客', '', 99, 1, 1, '1', '1', 1582792265, 1583855342);
INSERT INTO `ape_system_config` VALUES (2, 1, '网站图标', 'favicon', 'file', 'input', 0, '', '/static/admin/img/logo.ico', '', 98, 1, 1, '1', '1', 1582793160, 1582792265);
INSERT INTO `ape_system_config` VALUES (3, 1, '站点关键词', 'keywords', 'text', 'input', 0, '', '源码云博客', '', 97, 1, 1, '1', '1', 1582793221, 1582792265);
INSERT INTO `ape_system_config` VALUES (4, 1, '站点描述', 'description', 'text', 'input', 0, '', '源码云博客', '', 96, 1, 1, '1', '1', 1582793248, 1582792265);
INSERT INTO `ape_system_config` VALUES (5, 1, '网站作者', 'author', 'text', 'input', 0, '', '木子的忧伤', '', 95, 1, 1, '1', '1', 1582793305, 1582792265);
INSERT INTO `ape_system_config` VALUES (6, 1, '站点logo', 'logo', 'file', 'input', 0, '', '/static/admin/img/logo.png', '', 94, 1, 1, '1', '1', 1582793393, 1582793700);
INSERT INTO `ape_system_config` VALUES (7, 1, '版权信息', 'copyright', 'text', 'input', 0, '', 'Copyright © 2022 apeBlog Powered by 源码云博客', '', 93, 1, 1, '1', '1', 1582793470, 1582793495);
INSERT INTO `ape_system_config` VALUES (8, 1, '备案信息', 'icp', 'text', 'textarea', 0, '', '<a href=\"http://beian.miit.gov.cn\">京ICP备19038953号</a> | <a target=\"_blank\" href=\"http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=62062102000138\">甘公网安备62062102000138号</a>', '', 92, 1, 1, '1', '1', 1582793563, 1583375542);
INSERT INTO `ape_system_config` VALUES (10, 1, '网站域名', 'domain', 'text', 'input', 0, '', 'http://apeblog.io', '', 90, 1, 1, '1', '1', 1588858018, 1582792265);
INSERT INTO `ape_system_config` VALUES (11, 1, '网站统计代码', 'statistics', 'text', 'textarea', 0, '', '', '', 89, 1, 1, '1', '1', 1582793470, 1582793495);
INSERT INTO `ape_system_config` VALUES (12, 1, '主题信息', 'web_template', 'select', 'input', 0, 'default=>默认\nnew=>新bolg', 'default', '', 88, 1, 1, '1', '1', 1582793563, 1620610858);
INSERT INTO `ape_system_config` VALUES (13, 1, '关闭网站', 'web_close', 'radio', 'input', 0, '1=>是\n0=>否', '0', '', 87, 1, 1, '1', '1', 1583126643, 1582792265);
INSERT INTO `ape_system_config` VALUES (14, 1, '网站统计', 'web_statistics', 'radio', 'input', 0, '1=>开启\n0=>关闭', '1', '', 86, 1, 1, '1', '1', 1583126643, 1582792265);
INSERT INTO `ape_system_config` VALUES (15, 1, '开始伪静态', 'web_rewrite', 'radio', 'input', 0, '1=>开启\n0=>关闭', '1', '', 85, 1, 1, '1', '1', 1583126643, 1582792265);
INSERT INTO `ape_system_config` VALUES (16, 2, '联系地址', 'web_contact_add', 'text', 'input', 0, '', '北京市昌平区', '', 84, 1, 1, '1', '1', 1582793305, 1582792265);
INSERT INTO `ape_system_config` VALUES (17, 2, '联系电话', 'web_contact_tel', 'text', 'input', 0, '', '13500000000', '', 83, 1, 1, '1', '1', 1582793305, 1582792265);
INSERT INTO `ape_system_config` VALUES (18, 2, '联系QQ', 'web_contact_qq', 'text', 'input', 0, '', '11222', '', 82, 1, 1, '1', '1', 1582793305, 1582792265);
INSERT INTO `ape_system_config` VALUES (19, 2, '微信收款码', 'web_weixin_pay', 'file', 'input', 0, '', '/upload/pay/weixin.jpg', '微信收款码捐赠使用', 77, 1, 1, '1', '1', 1582793305, 1582792265);
INSERT INTO `ape_system_config` VALUES (20, 2, '支付宝收款码', 'web_zhifubao_pay', 'file', 'input', 0, '', '/upload/pay/zfb.jpg', '支付宝收款码捐赠使用', 76, 1, 1, '1', '1', 1582793305, 1582792265);
INSERT INTO `ape_system_config` VALUES (25, 3, '数据库备份根路径', 'data_backup_path', 'text', 'input', 0, '', './databack/', '路径必须以 / 结尾', 81, 1, 1, '1', '1', 1582793305, 1582792265);
INSERT INTO `ape_system_config` VALUES (26, 3, '数据库备份卷大小', 'data_backup_part_size', 'text', 'input', 0, '', '20971520', '该值用于限制压缩后的分卷最大长度。单位：B；建议设置20M', 80, 1, 1, '1', '1', 1582793305, 1582792265);
INSERT INTO `ape_system_config` VALUES (27, 3, '数据库备份文件是否启用压缩', 'data_backup_compress', 'radio', 'input', 0, '1=>开启\n0=>关闭', '1', '压缩备份文件需要PHP环境支持gzopen,gzwrite函数', 79, 1, 1, '1', '1', 1582793305, 1582792265);
INSERT INTO `ape_system_config` VALUES (28, 3, '数据库备份文件压缩级别', 'data_backup_compress_level', 'text', 'input', 0, '', '4', '数据库备份文件的压缩级别，该配置在开启压缩时生效1:普通\n4:一般\n9:最高', 78, 1, 1, '1', '1', 1582793305, 1582792265);
INSERT INTO `ape_system_config` VALUES (29, 4, '注册开关', 'is_register', 'radio', 'input', 0, '1=>开启\n0=>关闭', '1', '默认开启，如不需要可关闭。', 91, 1, 1, '1', '1', 1583126643, 1582792265);
INSERT INTO `ape_system_config` VALUES (30, 4, '注册方式', 'register_type', 'radio', 'input', 0, '0=>普通\n1=>手机\n2=>邀请码', '0', '邀请码注册默认状态为已审核！', 91, 1, 1, '1', '1', 1583126643, 1582792265);
INSERT INTO `ape_system_config` VALUES (31, 4, '禁止注册', 'register_black_list', 'text', 'input', 0, '', 'www,bbs,ftp,mail,user,users,admin,administrator', '禁止注册的用户名!', 91, 1, 1, '1', '1', 1583126643, 1582792265);
INSERT INTO `ape_system_config` VALUES (32, 4, '评论开关', 'comment_close', 'radio', 'input', 0, '1=>开启\n0=>关闭', '1', '默认开启，如不需要可关闭。', 91, 1, 1, '1', '1', 1583126643, 1582792265);
INSERT INTO `ape_system_config` VALUES (33, 4, '游客评论', 'comment_visitor', 'radio', 'input', 0, '1=>是\n0=>否', '1', '开启后需要登录才能评论。', 91, 1, 1, '1', '1', 1583126643, 1582792265);
INSERT INTO `ape_system_config` VALUES (34, 4, '评论审核', 'comment_review', 'radio', 'input', 0, '1=>开启\n0=>关闭', '1', '开启后需要审核评论才会展示。', 91, 1, 1, '1', '1', 1583126643, 1582792265);
INSERT INTO `ape_system_config` VALUES (35, 4, '脏话过滤', 'comment_sensitive_word', 'text', 'input', 0, '', '新疆,华为,她妈,它妈,他妈,你妈,去死,贱人', '多个逗号隔开', 81, 1, 1, '1', '1', 1582793305, 1582792265);

-- ----------------------------
-- Table structure for ape_system_config_tab
-- ----------------------------
DROP TABLE IF EXISTS `ape_system_config_tab`;
CREATE TABLE `ape_system_config_tab`  (
  `id` int(8) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '分类ID',
  `name` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '分类名称',
  `rank` tinyint(2) NOT NULL DEFAULT 0 COMMENT '排序',
  `status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '角色状态1可用0不用',
  `create_user` int(10) NOT NULL DEFAULT 0 COMMENT '添加人',
  `update_user` int(10) NOT NULL DEFAULT 0 COMMENT '修改时间',
  `create_time` int(10) NOT NULL DEFAULT 0 COMMENT '添加时间',
  `update_time` int(10) NOT NULL DEFAULT 0 COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '系统配置分类' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_system_config_tab
-- ----------------------------
INSERT INTO `ape_system_config_tab` VALUES (1, '基础配置', 99, 1, 1, 1, 1582784937, 1583385482);
INSERT INTO `ape_system_config_tab` VALUES (2, '社交配置', 98, 1, 1, 1, 1582785701, 1583385489);
INSERT INTO `ape_system_config_tab` VALUES (3, '数据库配置', 98, 1, 1, 1, 1582785701, 1583385489);
INSERT INTO `ape_system_config_tab` VALUES (4, '用户中心', 99, 1, 1, 1, 1582784937, 1583385482);

-- ----------------------------
-- Table structure for ape_tag
-- ----------------------------
DROP TABLE IF EXISTS `ape_tag`;
CREATE TABLE `ape_tag`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` varchar(40) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '专区名称',
  `document_id` int(10) NOT NULL DEFAULT 0 COMMENT '文章id',
  `user_id` int(19) NOT NULL DEFAULT 0 COMMENT '操作人id',
  `create_time` int(11) NOT NULL DEFAULT 0,
  `update_time` int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 44 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '标签表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_tag
-- ----------------------------
INSERT INTO `ape_tag` VALUES (40, '源码云', 1, 1, 1646022464, 1646022464);
INSERT INTO `ape_tag` VALUES (41, '博客', 1, 1, 1646022464, 1646022464);
INSERT INTO `ape_tag` VALUES (42, '源码云博客', 1, 1, 1646022464, 1646022464);
INSERT INTO `ape_tag` VALUES (43, '新文章', 104, 1, 1649556547, 1649556547);

-- ----------------------------
-- Table structure for ape_url_log
-- ----------------------------
DROP TABLE IF EXISTS `ape_url_log`;
CREATE TABLE `ape_url_log`  (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `url` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT 'url 受访的页面url',
  `pv` int(10) NOT NULL DEFAULT 0 COMMENT '浏览量',
  `title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '页面名称',
  `date` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '访问时间',
  `create_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '创建时间',
  `update_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = 'pv记录表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_url_log
-- ----------------------------

-- ----------------------------
-- Table structure for ape_user
-- ----------------------------
DROP TABLE IF EXISTS `ape_user`;
CREATE TABLE `ape_user`  (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `username` varchar(40) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '用户账号',
  `nickname` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '昵称',
  `password` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '用户密码',
  `avatar` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '用户头像',
  `email` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '邮箱',
  `tel` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '手机号',
  `ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '注册IP地址',
  `status` int(11) NOT NULL DEFAULT 0 COMMENT '状态 0启用 1禁用',
  `remark` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '简介',
  `is_admin` int(11) NOT NULL DEFAULT 0 COMMENT '是否是管理员 1是 0 否',
  `create_time` int(11) NOT NULL DEFAULT 0 COMMENT '创建时间',
  `update_time` int(11) NOT NULL DEFAULT 0 COMMENT '上次登录时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `username_email_tel`(`username`, `tel`, `email`) USING BTREE COMMENT '用户名'
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '用户表' ROW_FORMAT = COMPACT;

-- ----------------------------
-- Records of ape_user
-- ----------------------------

-- ----------------------------
-- Table structure for ape_uv_log
-- ----------------------------
DROP TABLE IF EXISTS `ape_uv_log`;
CREATE TABLE `ape_uv_log`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `ip` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '访问ip',
  `time` int(10) NOT NULL DEFAULT 0 COMMENT '时间',
  `date` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '访问时间',
  `create_time` int(10) NOT NULL COMMENT '创建时间',
  `update_time` int(10) NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = 'Uv记录表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of ape_uv_log
-- ----------------------------

SET FOREIGN_KEY_CHECKS = 1;
